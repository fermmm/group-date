# Managed database services uses wss, example: wss://database-1.cluster-abc123.us-east-1.neptune.amazonaws.com:8182/gremlin
DATABASE_URL = ws://localhost:8182/gremlin

# Database url to use when NODE_ENV is not "production", usually ws://localhost:8182/gremlin it's ok.
DATABASE_URL_DEVELOPMENT = ws://localhost:8182/gremlin

# The server url. Don't include a / at the end and don'r include http:// It should look like this: my-app.com
# This is used to generate email validation and password reset links. 
# The development one is usually localhost and that is ok.
SERVER_URL =
SERVER_URL_DEVELOPMENT = localhost

# User and password required by the dashboard.
# The password must be 6 characters long or more. 
# If it's not set the admin operations are not possible.
ADMIN_USER = 
ADMIN_PASSWORD = 

# Port the server will listen to
PORT = 8080

# Enable or not https port (443). Before enabling this port you should have the SSL certificates.
HTTPS_PORT_ENABLED = false
HTTPS_CERTIFICATE_PATH = 
HTTPS_KEY_PATH = 

# If you are in maintenance and the service is not avaiable use this so the client is notified
SERVER_OPERATING = true

# Write a message that can be sent to the client app at boot in case SERVER_OPERATING = false for
# example "we'll be back in 1 day". Leave ampty if not used.
SHOW_MESSAGE_IN_CLIENT =

# Write a message that can be sent to the client app after login success for example
# SHOW_MESSAGE_IN_CLIENT = "This is a test version of the app. Don't expect to find too much people near you.". Leave ampty if not used.
SHOW_POST_LOGIN_MESSAGE_IN_CLIENT =

# This address will be sent to the client to build images URL. 
# In production this should look like: https://yourapp.com/api/images/
# If you use a AWS S3 this should look like: https://elasticbeanstalk-us-east-1-123456789.s3.amazonaws.com/images/
# For development this should look like: http://localhost:8080/api/images/
IMAGES_HOST = http://localhost:8080/api/images/
IMAGES_HOST_DEVELOPMENT = http://localhost:8080/api/images/

# If you use a managed database server like AWS Neptune set this to false since 
# the backup feature it's already implemented by them. This is required
# only when you want to upload to a non managed server like Digital Ocean
PERFORM_DATABASE_BACKUPS = true

# Whether or not generate log files in the logs folder
GENERATE_LOGS = true

# The email address that will appear as the sender of the emails sent by the server, is the address you validated at AWS SES
EMAIL_SENDER = 

#############################################################################
##                                                                         ##
##  AWS                                                                    ##
##  If you are using AWS then you may want to set these variables          ##
##                                                                         ##
#############################################################################

# Set this to true if you are using AWS, this enables AWS related code.
USING_AWS = false

# Credentials of AWS. Also these credentials are present on the rootkey.csv file
AWS_ACCESS_KEY_ID =
AWS_SECRET_ACCESS_KEY =

# S3 bucket name. Example: elasticbeanstalk-us-east-1-123456789
AWS_BUCKET_NAME =
# Example: arn:aws:iam::123456789012:role/NeptuneLoadFromS3
AWS_CSV_IAM_ROLE_ARN =
# Example: us-east-1
AWS_REGION =