{"version":3,"sources":["common-tools/themes/defaultTheme.ts","common-tools/themes/globalStyles/GlobalStyles.ts","assets/logo.png","components/common/UI/Drawer/styles.Drawer.ts","components/common/UI/Drawer/Drawer.tsx","api/tools/tokenStorage.ts","api/tools/serverUrlComposer.ts","api/tools/httpRequest.ts","components/common/UI/ContextMenu/styles.ContextMenu.ts","components/common/UI/ContextMenu/ContextMenu.tsx","api/tools/tryToGetErrorMessage.ts","components/common/UI/RequestStatus/styles.RequestStatus.ts","components/common/UI/RequestStatus/RequestStatus.tsx","components/pages/Logs/styles.Logs.ts","components/pages/Logs/Logs.tsx","api/server/logs.ts","components/pages/Logs/tools/useFileListToRender.ts","api/tools/shared-tools/authentication/AuthenticationProvider.ts","components/pages/Login/styles.Login.ts","components/pages/Login/tools/getFacebookAppId.ts","components/pages/Login/Login.tsx","api/tools/shared-tools/authentication/tokenStringTools.ts","components/pages/Main/Main.tsx","api/server/user.ts","api/tools/cacheConfig.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultTheme","colors","background1","text1","scrollbar","scrollbarThumb","shadows","elevation1","fonts","font1","size1","weight1","letterSpacing1","lineHeight1","borders","borderRadius1","muiTheme","createMuiTheme","palette","type","typography","fontFamily","join","GlobalStyles","createGlobalStyle","props","theme","DrawerMui","styled","Drawer","useDrawerMuiStyles","makeStyles","createStyles","root","display","hide","drawer","width","flexShrink","whiteSpace","paper","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","buttons","children","classes","React","useState","expanded","setExpanded","className","variant","clsx","onMouseEnter","onMouseLeave","src","logo","style","height","alt","List","map","button","ListItem","onClick","ListItemIcon","icon","ListItemText","primary","label","saveToken","token","localStorage","setItem","getToken","getItem","useToken","externallyProvidedToken","useMemo","serverUrlComposer","subpath","window","location","hostname","process","httpRequest","a","url","method","params","settings","stringify","data","client","axios","result","MenuStyled","Menu","UnanchoredContainer","ContextMenu","onClose","buttonToOpen","startOpened","anchorEl","setAnchorEl","open","setOpen","renderButton","MenuItem","value","event","currentTarget","keepMounted","transformOrigin","vertical","horizontal","Paper","elevation","MenuList","tryToGetErrorMessage","error","response","message","LoadingScaleMode","RequestStatusContainer","RequestsStatus","loading","loadingScaleMode","FillViewport","isLoading","Array","isArray","includes","isError","find","e","showChildren","CircularProgress","color","LogsContainer","ContextMenuContainer","LogFileFeedbackMessage","Logs","selectedLogFile","setSelectedLogFile","selectedLogFileName","setSelectedLogFileName","useQuery","options","useLogsFileList","fileList","fileListLoading","fileListError","fileName","useLog","enabled","log","logLoading","logError","fileListToRender","file","split","useFileListToRender","enableSearch","text","caseInsensitive","containerStyle","logSelectedName","logSelectedValue","Button","AuthenticationProvider","LoginContainer","Logo","getFacebookAppId","hostName","Boolean","Login","onLoginSuccess","appId","fields","callback","userInfo","accessToken","originalToken","provider","Facebook","Main","history","useHistory","setToken","useProfileStatus","push","exact","path","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","structuralSharing","retry","refetchOnWindowFocus","App","QueryClientProvider","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0904ead2.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Theme } from \"./typings/Theme\";\n\nexport const defaultTheme: Theme = {\n  colors: {\n    background1: \"#424242\",\n    text1: \"#A8A8A8\",\n    scrollbar: \"#00000000\",\n    scrollbarThumb: \"#868686\",\n  },\n  shadows: {\n    elevation1: \"1px 10px 0px 0px #00000024;\",\n  },\n  fonts: {\n    font1: '\"Montserrat\", sans-serif',\n    size1: \"20px\",\n    weight1: \"600\",\n    letterSpacing1: \"-0.26px\",\n    lineHeight1: \"21px\",\n  },\n  borders: {\n    borderRadius1: \"20px\",\n  },\n};\n\n/** Theme for material UI */\nexport const muiTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Montserrat\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n","import {\n  createGlobalStyle,\n  DefaultTheme,\n  GlobalStyleComponent,\n} from \"styled-components\";\n// @ts-ignore\nimport \"./fonts-loading.scss\";\n\nexport const GlobalStyles: GlobalStyleComponent<\n  {},\n  DefaultTheme\n> = createGlobalStyle`\n   html, body {\n      margin: 0;\n      padding: 0;\n      overflow-x: hidden;\n      background-color: ${(props) => props.theme.colors.background1};\n      font-family: ${(props) => props.theme.fonts.font1};\n      color: white;\n   }\n   \n   a:hover, a:visited, a:link, a:active {\n      text-decoration: none;   /* Removes underline in link texts */ \n      border:          none;   /* Removes border in linked items */\n      outline:         none;   /* Removes points border in images */\n   }\n   \n   *:focus {\n      outline: none;           /* Removes the selection outline from inputs and buttons */\n   }\n   \n   *, :after, :before {\n      box-sizing: border-box;  /* Do not include border and margin in the sizes numbers */\n   }\n\n   ::-webkit-scrollbar {\n      width: 9px;\n      height: 9px;\n      margin: 2px;\n   }\n\n   ::-webkit-scrollbar-track {\n      background: ${(props) => props.theme.colors.scrollbar};\n      border-radius: ${(props) => props.theme.borders.borderRadius1};\n   }\n\n   ::-webkit-scrollbar-thumb {\n      background: ${(props) => props.theme.colors.scrollbarThumb};\n      border-radius: ${(props) => props.theme.borders.borderRadius1};\n   }\n\n   ::-webkit-scrollbar-corner {\n      background: ${(props) => props.theme.colors.scrollbar};\n      border-radius: ${(props) => props.theme.borders.borderRadius1};\n   }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.03f17db3.png\";","import styled from \"styled-components\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst drawerWidth = 180;\n\nexport const DrawerMui = styled(Drawer)`\n  .MuiDrawer-paperAnchorDockedLeft {\n    border-right: none;\n  }\n`;\n\nexport const useDrawerMuiStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\",\n      paper: {\n        display: \"none\",\n      },\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: \"hidden\",\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n    },\n  })\n);\n","import { FC, ReactElement } from \"react\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport logo from \"../../../../assets/logo.png\";\nimport { DrawerMui, useDrawerMuiStyles } from \"./styles.Drawer\";\n\ninterface PropsDrawer {\n  buttons: Array<{\n    icon: () => ReactElement;\n    label: string;\n    onClick: () => void;\n  }>;\n}\n\nconst Drawer: FC<PropsDrawer> = ({ buttons, children }) => {\n  const classes = useDrawerMuiStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleDrawerExpand = () => {\n    setExpanded(true);\n  };\n\n  const handleDrawerContract = () => {\n    setExpanded(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <DrawerMui\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: expanded,\n          [classes.drawerClose]: !expanded,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: expanded,\n            [classes.drawerClose]: !expanded,\n          }),\n        }}\n        onMouseEnter={handleDrawerExpand}\n        onMouseLeave={handleDrawerContract}\n      >\n        <div className={classes.toolbar}>\n          <img src={logo} style={{ height: 40 }} alt={\"logo\"} />\n        </div>\n        <List>\n          {buttons.map((button) => (\n            <ListItem button key={button.label} onClick={button.onClick}>\n              <ListItemIcon>{button.icon()}</ListItemIcon>\n              <ListItemText primary={button.label} />\n            </ListItem>\n          ))}\n        </List>\n      </DrawerMui>\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nexport default Drawer;\n","import { useMemo } from \"react\";\n\nexport function saveToken(token: string): void {\n   localStorage.setItem(\"token\", token);\n}\n\nexport function getToken(): string {\n   return localStorage.getItem(\"token\") as string;\n}\n\nexport function useToken(externallyProvidedToken?: string): string {\n   if (externallyProvidedToken != null) {\n      saveToken(externallyProvidedToken);\n   }\n\n   return useMemo(getToken, [externallyProvidedToken]);\n}\n","/**\n * Appends the subpath to the server url and returns a full url ready to be used in the requests\n * @param subpath\n */\nexport function serverUrlComposer(subpath: string): string {\n   return `http://${window.location.hostname}:${process.env.REACT_APP_SERVER_ENDPOINTS_PORT}/api/${subpath}/`;\n}\n","import { stringify } from \"query-string\";\nimport { serverUrlComposer } from \"./serverUrlComposer\";\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\n/**\n * Wrapper for fetch for more simplification and issues solved.\n */\nexport async function httpRequest<Params = null, Response = null>(\n   props: HttpRequestParams<Params>\n): Promise<Response> {\n   let { url, method = \"GET\", params } = props;\n   url = serverUrlComposer(url);\n   const settings: AxiosRequestConfig = { url, method };\n\n   if (method === \"GET\" && params != null) {\n      settings.url += \"?\" + stringify(params);\n   }\n\n   if (method === \"POST\" && params != null) {\n      settings.data = params;\n   }\n\n   const client: AxiosInstance = axios.create(settings);\n   const result = await client(settings);\n   return result.data as Response;\n}\n\nexport interface HttpRequestParams<T> {\n   url: string;\n   method?: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\";\n   params?: T;\n}\n","import Menu from \"@material-ui/core/Menu\";\nimport styled from \"styled-components\";\n\nexport const MenuStyled = styled(Menu)`\n   margin-top: 25px;\n   ul {\n      min-width: 150px;\n   }\n`;\n\nexport const UnanchoredContainer = styled(\"div\")`\n   width: fit-content;\n   min-width: 150px;\n`;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { MenuStyled, UnanchoredContainer } from \"./styles.ContextMenu\";\n\nexport interface SimpleDialogProps {\n   buttonToOpen: (onClick: (e: React.MouseEvent<HTMLButtonElement>) => void) => ReactElement;\n   buttons: DialogButton[];\n   onClose: (label: string | null, value: string | null) => void;\n   startOpened?: boolean;\n}\n\nexport interface DialogButton {\n   label: string;\n   value: string;\n   icon?: () => ReactElement;\n}\n\nconst ContextMenu: FC<SimpleDialogProps> = props => {\n   const { onClose, buttons, buttonToOpen, startOpened } = props;\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n   const [open, setOpen] = useState(startOpened ?? false);\n\n   const handleClose = () => {\n      setOpen(false);\n      onClose(null, null);\n   };\n\n   const handleListItemClick = (label: string, value: string) => {\n      setOpen(false);\n      onClose(label, value);\n   };\n\n   const handleOpenerClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n      setOpen(true);\n   };\n\n   const renderButton = (button: DialogButton) => {\n      return (\n         <MenuItem\n            onClick={() => handleListItemClick(button.label, button.value)}\n            key={button.value}\n         >\n            {button.icon && button.icon()}\n            {button.label}\n         </MenuItem>\n      );\n   };\n\n   return (\n      <>\n         {buttonToOpen(handleOpenerClick)}\n         {anchorEl ? (\n            <MenuStyled\n               onClose={handleClose}\n               open={open}\n               anchorEl={anchorEl}\n               keepMounted\n               transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\"\n               }}\n            >\n               {buttons.map(button => renderButton(button))}\n            </MenuStyled>\n         ) : (\n            open && (\n               <UnanchoredContainer>\n                  <Paper elevation={6}>\n                     <MenuList>{buttons.map(button => renderButton(button))}</MenuList>\n                  </Paper>\n               </UnanchoredContainer>\n            )\n         )}\n      </>\n   );\n};\n\nexport default ContextMenu;\n","export function tryToGetErrorMessage(error: any): string {\n   if (error == null) {\n      return \"\";\n   }\n\n   if (error.response?.data?.error?.message) {\n      return error.response.data.error.message;\n   }\n\n   if (error.response?.data?.[0]?.message != null) {\n      return error.response.data[0].message;\n   }\n\n   if (error.response?.data != null) {\n      return error.response.data;\n   }\n\n   if (error.response != null) {\n      return error.response;\n   }\n\n   if (error.message != null) {\n      return error.message;\n   }\n\n   return \"No information found\";\n}\n","import styled from \"styled-components\";\n\nexport const RequestStatusContainer = styled(\"div\")`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   width: 100%;\n`;\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { FC } from \"react\";\nimport { tryToGetErrorMessage } from \"../../../../api/tools/tryToGetErrorMessage\";\nimport { RequestStatusContainer } from \"./styles.RequestStatus\";\n\ninterface PropsRequestsStatus {\n   loading?: boolean[] | boolean;\n   error?: unknown[] | unknown;\n   loadingScaleMode?: LoadingScaleMode;\n}\n\nexport enum LoadingScaleMode {\n   FillViewport,\n   FillContainer\n}\n\nexport const RequestsStatus: FC<PropsRequestsStatus> = props => {\n   const { loading, error, children, loadingScaleMode = LoadingScaleMode.FillViewport } = props;\n   const isLoading: boolean = Array.isArray(loading) ? loading.includes(true) : loading ?? false;\n   const isError = Array.isArray(error) ? error.find(e => e != null) : error ?? null;\n   const showChildren = isError == null && !isLoading;\n\n   return (\n      <>\n         <div style={showChildren ? {} : { display: \"none\" }}>{children}</div>\n         {!showChildren && (\n            <RequestStatusContainer\n               style={{\n                  height: loadingScaleMode === LoadingScaleMode.FillViewport ? \"100vh\" : \"100%\"\n               }}\n            >\n               {isLoading && !isError && <CircularProgress color=\"inherit\" />}\n               {isError && \"Error: \" + tryToGetErrorMessage(isError)}\n            </RequestStatusContainer>\n         )}\n      </>\n   );\n};\n","import styled from \"styled-components\";\n\nexport const LogsContainer = styled(\"div\")`\n   width: 100%;\n   height: 100vh;\n   overflow: hidden;\n   position: relative;\n`;\n\nexport const ContextMenuContainer = styled(\"div\")`\n   position: absolute;\n   top: 0px;\n   padding: 5px 88px;\n`;\n\nexport const LogFileFeedbackMessage = styled(\"div\")`\n   display: flex;\n   align-items: flex-start;\n   justify-content: center;\n   width: 100%;\n   height: 100vh;\n   padding-top: 150px;\n`;\n","import Button from \"@material-ui/core/Button\";\nimport React, { FC, useState } from \"react\";\nimport { LazyLog } from \"react-lazylog\";\nimport { useLog, useLogsFileList } from \"../../../api/server/logs\";\nimport ContextMenu from \"../../common/UI/ContextMenu/ContextMenu\";\nimport { RequestsStatus } from \"../../common/UI/RequestStatus/RequestStatus\";\nimport { ContextMenuContainer, LogFileFeedbackMessage, LogsContainer } from \"./styles.Logs\";\nimport { useFileListToRender } from \"./tools/useFileListToRender\";\n\nconst Logs: FC = () => {\n   const [selectedLogFile, setSelectedLogFile] = useState<string | null>(null);\n   const [selectedLogFileName, setSelectedLogFileName] = useState<string | null>(null);\n   const { data: fileList, isLoading: fileListLoading, error: fileListError } = useLogsFileList();\n   const { data: log, isLoading: logLoading, error: logError } = useLog({\n      params: { fileName: selectedLogFile },\n      options: { enabled: selectedLogFile != null }\n   });\n   const fileListToRender = useFileListToRender(fileList);\n\n   const handleLogFileChange = (\n      logSelectedName: string | null,\n      logSelectedValue: string | null\n   ) => {\n      if (logSelectedValue == null) {\n         return;\n      }\n\n      setSelectedLogFile(logSelectedValue);\n      setSelectedLogFileName(logSelectedName);\n   };\n\n   return (\n      <RequestsStatus loading={[fileListLoading, logLoading]} error={[fileListError, logError]}>\n         <LogsContainer>\n            {log ? (\n               <LazyLog\n                  enableSearch\n                  text={log}\n                  caseInsensitive\n                  containerStyle={{ color: \"#48b951\" }}\n               />\n            ) : (\n               <LogFileFeedbackMessage>Log file is empty</LogFileFeedbackMessage>\n            )}\n            <ContextMenuContainer>\n               <ContextMenu\n                  startOpened\n                  onClose={handleLogFileChange}\n                  buttons={fileListToRender}\n                  buttonToOpen={onClick => (\n                     <Button onClick={onClick}>\n                        {selectedLogFile ? \"File: \" + selectedLogFileName : \"Select log file\"}\n                     </Button>\n                  )}\n               />\n            </ContextMenuContainer>\n         </LogsContainer>\n      </RequestsStatus>\n   );\n};\n\nexport default Logs;\n","import { useToken } from \"./../tools/tokenStorage\";\nimport { TokenParameter } from \"./../tools/shared-tools/endpoints-interfaces/common\";\nimport { AdminLogGetParams } from \"./../tools/shared-tools/endpoints-interfaces/admin\";\nimport { useQuery, UseQueryOptions, UseQueryResult } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\n\nexport function useLogsFileList<Response extends string[]>(props?: {\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   const url = \"admin/logs/files\";\n   const token = useToken();\n\n   return useQuery<Response>(url, () => httpRequest({ url, params: { token } }), props?.options);\n}\n\nexport function useLog<Params extends Partial<AdminLogGetParams>, Response extends string>(props: {\n   params: Params;\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   let { params } = props;\n   const token = useToken();\n   params.token = token;\n\n   const url = \"admin/log\";\n   return useQuery<Response>(\n      url + params.fileName,\n      () => httpRequest({ url, params }),\n      props?.options\n   );\n}\n","import { useMemo } from \"react\";\n\nexport function useFileListToRender(fileList: string[] | undefined) {\n   return useMemo(() => fileList?.map(file => ({ label: file.split(\".\")[0], value: file })) ?? [], [\n      fileList\n   ]);\n}\n","export enum AuthenticationProvider {\n   Facebook = \"Facebook\",\n   Google = \"Google\",\n}\n","import styled from \"styled-components\";\n\nexport const LoginContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const Logo = styled(\"img\")`\n  height: 150px;\n  margin-bottom: 50px;\n`;\n","export function getFacebookAppId(): string {\n   const hostName = window.location.hostname;\n   if (hostName === \"localhost\" || hostName === \"127.0.0.1\") {\n      if (Boolean(process.env.REACT_APP_FACEBOOK_APP_ID_FOR_TESTING)) {\n         return process.env.REACT_APP_FACEBOOK_APP_ID_FOR_TESTING;\n      }\n   }\n   return process.env.REACT_APP_FACEBOOK_APP_ID;\n}\n","import React, { FC } from \"react\";\nimport FacebookLogin, { ReactFacebookLoginInfo } from \"react-facebook-login\";\nimport { LoginContainer, Logo } from \"./styles.Login\";\nimport logo from \"../../../assets/logo.png\";\nimport { saveToken } from \"../../../api/tools/tokenStorage\";\nimport { getFacebookAppId } from \"./tools/getFacebookAppId\";\nimport { createExtendedInfoToken } from \"../../../api/tools/shared-tools/authentication/tokenStringTools\";\nimport { AuthenticationProvider } from \"../../../api/tools/shared-tools/authentication/AuthenticationProvider\";\n\ninterface PropsLogin {\n   onLoginSuccess: () => void;\n}\n\nexport const Login: FC<PropsLogin> = ({ onLoginSuccess }) => {\n   const handleFacebookResponse = (userInfo: ReactFacebookLoginInfo) => {\n      if (userInfo?.accessToken != null) {\n         saveToken(\n            createExtendedInfoToken({\n               originalToken: userInfo.accessToken,\n               provider: AuthenticationProvider.Facebook\n            })\n         );\n         onLoginSuccess();\n      }\n   };\n\n   return (\n      <LoginContainer>\n         <Logo src={logo} alt={\"logo\"} />\n         <FacebookLogin\n            appId={getFacebookAppId()}\n            fields=\"name,email,picture\"\n            callback={handleFacebookResponse}\n         />\n      </LoginContainer>\n   );\n};\n","import { AuthenticationProvider } from \"./AuthenticationProvider\";\n\n/**\n * Creates a extended info token, this is a string that contains the authentication provider + token.\n * Is useful to keep provider information in the token string because can be used in different places\n * to perform specific actions depending on the authentication provider.\n *\n * For example the extended info token returned for Facebook looks like this: \"Facebook[poly]abc1234\".\n * The [poly] string will be used by getTokenInfo() to divide the string and parse the data.\n */\nexport function createExtendedInfoToken(props: {\n   originalToken: string;\n   provider: AuthenticationProvider;\n}): string {\n   if (props.originalToken == null) {\n      return null;\n   }\n   return `${props.provider}[poly]${props.originalToken}`;\n}\n\n/**\n * Extracts information from an extended info token created with createExtendedInfoToken().\n */\nexport function getTokenInfo(extendedInfoToken: string): TokenInfo {\n   if (extendedInfoToken == null) {\n      return null;\n   }\n\n   const spitted = extendedInfoToken.split(\"[poly]\");\n\n   if (spitted.length !== 2) {\n      return null;\n   }\n\n   return {\n      provider: spitted[0] as AuthenticationProvider,\n      originalToken: spitted[1],\n   };\n}\n\nexport interface TokenInfo {\n   originalToken: string;\n   provider: AuthenticationProvider;\n}\n","import React, { FC, useState } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport { VscListSelection } from \"react-icons/vsc\";\nimport Drawer from \"../../common/UI/Drawer/Drawer\";\nimport Logs from \"../Logs/Logs\";\nimport { getToken } from \"../../../api/tools/tokenStorage\";\nimport { useProfileStatus } from \"../../../api/server/user\";\nimport { Login } from \"../Login/Login\";\nimport { RequestsStatus } from \"../../common/UI/RequestStatus/RequestStatus\";\n\nconst Main: FC = () => {\n   const history = useHistory();\n   const [token, setToken] = useState(getToken());\n   const { isLoading, error } = useProfileStatus({\n      params: { token: token },\n      options: { enabled: token != null }\n   });\n\n   const handleLoginSuccess = () => {\n      setToken(getToken());\n   };\n\n   if (isLoading) {\n      return <RequestsStatus loading={isLoading} />;\n   }\n\n   if (!token || error) {\n      return <Login onLoginSuccess={handleLoginSuccess} />;\n   }\n\n   return (\n      <Drawer\n         buttons={[\n            {\n               label: \"Logs\",\n               icon: () => <VscListSelection />,\n               onClick: () => history.push(\"/logs\")\n            }\n         ]}\n      >\n         <Switch>\n            <Route exact path=\"/\">\n               <Logs />\n            </Route>\n            <Route path=\"/logs\">\n               <Logs />\n            </Route>\n         </Switch>\n      </Drawer>\n   );\n};\n\nexport default Main;\n","import { TokenParameter } from \"./../tools/shared-tools/endpoints-interfaces/common\";\nimport { useToken } from \"./../tools/tokenStorage\";\nimport { User } from \"./../tools/shared-tools/endpoints-interfaces/user\";\nimport { useQuery, UseQueryOptions, UseQueryResult } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\n\nexport function useProfileStatus<Params extends TokenParameter, Response extends User>(props?: {\n   params?: Partial<Params>;\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   const url = \"user/profile-status\";\n   const token = useToken(props?.params?.token);\n\n   return useQuery<Response>(\n      url + token,\n      () => httpRequest({ url, params: { token } }),\n      props?.options\n   );\n}\n","import { QueryClient } from \"react-query\";\n\nexport const queryClient = new QueryClient({\n   defaultOptions: {\n      queries: {\n         staleTime: Infinity,\n         structuralSharing: false,\n         retry: false,\n         refetchOnWindowFocus: false\n      }\n   }\n});\n","import React, { FC } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryClientProvider } from \"react-query\";\nimport { defaultTheme, muiTheme } from \"./common-tools/themes/defaultTheme\";\nimport { GlobalStyles } from \"./common-tools/themes/globalStyles/GlobalStyles\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Main from \"./components/pages/Main/Main\";\nimport { queryClient } from \"./api/tools/cacheConfig\";\n\nconst App: FC = () => {\n   return (\n      <QueryClientProvider client={queryClient}>\n         <ThemeProvider theme={defaultTheme}>\n            <MuiThemeProvider theme={muiTheme}>\n               <GlobalStyles />\n               <Router basename=\"/dashboard\">\n                  <Main />\n               </Router>\n            </MuiThemeProvider>\n         </ThemeProvider>\n      </QueryClientProvider>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}