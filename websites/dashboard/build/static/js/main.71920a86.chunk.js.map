{"version":3,"sources":["common-tools/themes/defaultTheme.ts","common-tools/themes/globalStyles/GlobalStyles.ts","components/common/UI/Drawer/styles.Drawer.ts","assets/logo.png","components/common/UI/Drawer/Drawer.tsx","api/tools/serverUrlComposer.ts","api/tools/httpRequest.ts","common-tools/authentication/authentication.ts","components/common/UI/ContextMenu/styles.ContextMenu.ts","components/common/UI/ContextMenu/ContextMenu.tsx","api/tools/tryToGetErrorMessage.ts","components/common/UI/RequestStatus/styles.RequestStatus.ts","components/common/UI/RequestStatus/RequestStatus.tsx","components/pages/Logs/styles.Logs.ts","components/pages/Logs/Logs.tsx","api/server/logs.ts","components/pages/Logs/tools/useFileListToRender.ts","common-tools/browser/useStorageWatcher.ts","common-tools/authentication/useLoginStatus.ts","components/pages/Login/styles.Login.ts","api/server/login.ts","components/pages/Login/Login.tsx","components/common/RouteRequiresLogin/RouteRequiresLogin.tsx","api/server/visualizer.ts","components/pages/Visualizer/Graph/styles.Graph.ts","components/pages/Visualizer/Graph/Graph.tsx","components/pages/Visualizer/tools/visualizerUtils.ts","components/pages/Visualizer/styles.Visualizer.ts","components/pages/Visualizer/Header/styles.Header.ts","components/pages/Visualizer/Header/QueryInput/tools/presets.ts","components/pages/Visualizer/Header/QueryInput/styles.QueryInput.ts","components/pages/Visualizer/Header/QueryInput/QueryInput.tsx","components/pages/Visualizer/Header/Header.tsx","common-tools/browser/useKeyPress.ts","common-tools/strings/humanizeUnixTime.ts","components/pages/Visualizer/Panel/DataSpecificPanels/GenericPropertiesTable/styles.GenericPropertiesTable.ts","components/pages/Visualizer/Panel/DataSpecificPanels/GenericPropertiesTable/GenericPropertiesTable.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/ChatBubble/styles.ChatBubble.ts","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/ChatBubble/ChatBubble.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/GroupPanel.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/TagsPanel/TagsPanel.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/UserPanel/UserPanel.tsx","api/server/server-info.ts","components/pages/Visualizer/Panel/styles.Panel.ts","components/pages/Visualizer/Panel/Panel.tsx","common-tools/browser/url-tools.ts","components/pages/Visualizer/Visualizer.tsx","api/server/techOps.ts","components/pages/TechOps/styles.TechOps.ts","components/pages/TechOps/TechOps.tsx","components/pages/Main/Main.tsx","api/tools/cacheConfig.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultTheme","colors","background1","background2","text1","scrollbar","scrollbarThumb","chatNamesColors","shadows","elevation1","fonts","font1","size1","weight1","letterSpacing1","lineHeight1","borders","borderRadius1","muiTheme","createTheme","palette","mode","typography","fontFamily","join","GlobalStyles","createGlobalStyle","props","theme","DrawerContainer","styled","ChildrenContainer","withConfig","shouldForwardProp","p","includes","expanded","PageContainer","ButtonsContainer","LogoContainer","ListItemStyled","styledMui","ListItem","width","Drawer","children","buttons","useState","setExpanded","onMouseEnter","onMouseLeave","src","logo","style","height","objectFit","alt","map","button","onClick","marginBottom","sx","borderRadius","ListItemIcon","icon","ListItemText","primary","label","serverUrlComposer","subpath","httpRequest","a","url","method","params","settings","stringify","data","client","axios","create","result","saveCredentialsInStorage","credentials","user","password","localStorage","setItem","getCredentialsFromStorage","getItem","logout","removeItem","MenuStyled","Menu","UnanchoredContainer","ContextMenu","onClose","buttonToOpen","startOpened","React","anchorEl","setAnchorEl","open","setOpen","renderButton","MenuItem","value","event","currentTarget","keepMounted","transformOrigin","vertical","horizontal","Paper","elevation","MenuList","tryToGetErrorMessage","error","response","message","LoadingScaleMode","RequestStatusContainer","RequestsStatus","loading","loadingScaleMode","FillViewport","isLoading","Array","isArray","isError","find","e","showChildren","display","CircularProgress","color","LogsContainer","ContextMenuContainer","LogFileFeedbackMessage","Logs","selectedLogFile","setSelectedLogFile","selectedLogFileName","setSelectedLogFileName","useQuery","options","useLogsFileList","fileList","fileListLoading","fileListError","fileName","useLog","enabled","log","logLoading","logError","fileListToRender","useMemo","file","split","useFileListToRender","enableSearch","text","caseInsensitive","containerStyle","logSelectedName","logSelectedValue","Button","storageValueExists","useStorageValueExistsWatcher","pollingRate","exist","setExist","useEffect","interval","setInterval","clearInterval","useLoginStatus","hasUser","hasPassword","LoginContainer","Logo","LoginFormContainer","ErrorText","validateCredentialsGet","Login","setUser","setPassword","setError","setLoading","handleLoginSend","validationResult","isValid","TextField","variant","onChange","target","type","LoadingButton","RouteRequiresLogin","userIsLogged","visualizerGet","GraphContainer","Graph","nodesHolder","edgesHolder","nodeIdSelected","edgeIdSelected","onNodeSelect","onEdgeSelect","graphContainerRef","useRef","network","setNetwork","graphOptions","interaction","selectConnectedEdges","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","avoidOverlap","maxVelocity","solver","timestep","stabilization","iterations","updateInterval","nodes","shape","size","borderWidth","font","edges","smooth","roundness","current","Network","on","nodeId","length","edgeId","selectNodes","ref","memo","selectRandomField","obj","key","toLocaleLowerCase","toLowerCase","getDiffEdges","newList","oldList","_","differenceBy","edge","from","to","extractEdgesAndNodes","nodeList","oldNodeLabels","nodeLabels","nodeLabelMap","mapValues","keyBy","forEach","node","field","properties","nodeLabel","push","labelField","id","String","group","concat","arrows","scaleFactor","VisualizerContainer","SearchPartContainer","HeaderContainer","FormContainer","NodeLimitTextField","queryPresetsByCategory","categoryName","presets","name","query","queryPresets","category","preset","getQueryPresets","AutocompleteTextField","Autocomplete","QueryInput","onEnterPress","inputRef","initialized","setCarrotPos","setTimeout","carrotPos","start","end","carrotPosStart","carrotPosEnd","getCarrotPos","focus","selectionStart","selectionEnd","fullWidth","freeSolo","groupBy","option","getOptionLabel","renderOption","clearOnBlur","clearOnEscape","newValue","onInputChange","renderInput","autoFocus","onFocus","onKeyDown","Header","onSearch","nodeLimit","setNodeLimit","setQuery","handleSearch","Number","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","humanizeUnixTimeStamp","time","moment","duration","locale","humanize","humanizeSecondsAmount","unix","format","KeyLabel","ValueLabel","GenericPropertiesTable","hideProps","keys","Object","sort","unixTimeProps","setupValueText","ChatBubbleContainer","NameLabel","TextLabel","ChatBubble","GroupPanel","useTheme","chat","JSON","parse","members","setMembers","groupId","memberVertex","userId","undefined","groupQuery","queryButtons","getColorForUser","memberIndex","findIndex","m","buttonData","messages","member","authorUserId","messageText","TagsPanel","tag","tagQuery","tagId","dangerousQueryButtons","UserPanel","serverInfo","buildVersion","codeVersion","config","useServerInfo","userQuery","country","profileDescription","dateIdea","i","images","imagesHost","image","PanelContainer","PanelCard","NodeElementTitle","NavigationButtonsContainer","Panel","allNodes","allEdges","onNextClick","onPrevClick","elementToShow","setElementToShow","leftKeyPressed","rightKeyPressed","IconButton","setUrlParameter","queryParams","URLSearchParams","location","search","set","history","pushState","toString","getUrlParameter","get","Visualizer","setAllNodes","setAllEdges","nodeLabelsToShow","setNodeLabelsToShow","DataSet","nodeHolder","edgeHolder","setNodeIdSelected","setEdgeIdSelected","selectedElementType","setSelectedElementType","sendQueryFromUrlParams","queryFromUrlParams","handleSendQuery","saveOnUrl","passive","handlePopState","useCallback","useUserChangesUrlWatcher","handleSelectNode","reset","clear","add","onlyNewNodes","onlyNewEdges","handleSelectEdge","index","nextIndex","nextElementId","prevIndex","prevElementId","loadCSVRequest","TechOpsContainer","TechOps","handleLoadCsv","fileId","Main","useHistory","exact","path","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","structuralSharing","retry","refetchOnWindowFocus","App","QueryClientProvider","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71920a86.chunk.js","sourcesContent":["import { Theme } from \"./typings/Theme\";\nimport { createTheme } from \"@mui/material/styles\";\n\nexport const defaultTheme: Theme = {\n   colors: {\n      background1: \"linear-gradient(#151515 50%,#242a43)\",\n      background2: \"#2C2C2C\",\n      text1: \"#A8A8A8\",\n      scrollbar: \"#00000000\",\n      scrollbarThumb: \"#868686\",\n      chatNamesColors: [\n         \"#a85b7c\",\n         \"#379ba8\",\n         \"#f72e62\",\n         \"#2b8129\",\n         \"#2d2981\",\n         \"#000000\",\n         \"#7778b1\",\n         \"#755c72\",\n         \"#29b516\",\n         \"#878900\",\n         \"#00bab3\",\n         \"#660000\",\n         \"#ae5bde\",\n         \"#de5b5b\",\n         \"#d95bde\",\n         \"#9600ff\",\n         \"#006cff\",\n         \"#a2ff00\",\n         \"#0c00ff\",\n         \"#f0ff00\"\n      ]\n   },\n   shadows: {\n      elevation1: \"1px 10px 0px 0px #00000024;\"\n   },\n   fonts: {\n      font1: '\"Montserrat\", sans-serif',\n      size1: \"20px\",\n      weight1: \"600\",\n      letterSpacing1: \"-0.26px\",\n      lineHeight1: \"21px\"\n   },\n   borders: {\n      borderRadius1: \"20px\"\n   }\n};\n\n/** Theme for material UI */\nexport const muiTheme = createTheme({\n   palette: {\n      mode: \"dark\"\n   },\n   typography: {\n      fontFamily: [\n         \"-apple-system\",\n         \"BlinkMacSystemFont\",\n         '\"Segoe UI\"',\n         \"Montserrat\",\n         '\"Helvetica Neue\"',\n         \"Arial\",\n         \"sans-serif\",\n         '\"Apple Color Emoji\"',\n         '\"Segoe UI Emoji\"',\n         '\"Segoe UI Symbol\"'\n      ].join(\",\")\n   }\n});\n","import { createGlobalStyle, DefaultTheme, GlobalStyleComponent } from \"styled-components\";\n// @ts-ignore\nimport \"./fonts-loading.scss\";\n\nexport const GlobalStyles: GlobalStyleComponent<{}, DefaultTheme> = createGlobalStyle`\n   html, body {\n      margin: 0;\n      padding: 0;\n      overflow-x: hidden;\n      background: ${props => props.theme.colors.background1};\n      font-family: ${props => props.theme.fonts.font1};\n      color: white;\n   }\n   \n   a:hover, a:visited, a:link, a:active {\n      text-decoration: none;   /* Removes underline in link texts */ \n      border:          none;   /* Removes border in linked items */\n      outline:         none;   /* Removes points border in images */\n   }\n   \n   *:focus {\n      outline: none;           /* Removes the selection outline from inputs and buttons */\n   }\n   \n   *, :after, :before {\n      box-sizing: border-box;  /* Do not include border and margin in the sizes numbers */\n   }\n\n   input[type=number]::-webkit-inner-spin-button, \n   input[type=number]::-webkit-outer-spin-button { \n      -webkit-appearance: none; \n      margin: 0; \n   }\n\n   ::-webkit-scrollbar {\n      width: 18px;\n      height: 7px;\n      margin: 0px;\n   }\n\n   ::-webkit-scrollbar-track {\n      background-color: transparent;\n      border-radius: 20px;\n   }\n\n   ::-webkit-scrollbar-thumb {\n      border: 5px solid transparent;\n      background-clip: content-box;\n      border-radius: 20px;\n      background-color: #565656;\n   }\n\n   ::-webkit-scrollbar-thumb:hover {\n      border: 5px solid transparent;\n      background-clip: content-box;\n      background-color: #565656;\n   }\n\n   ::-webkit-scrollbar-corner {\n      background-color: transparent;\n      border-radius: 20px;\n   }\n`;\n","import ListItem, { ListItemProps } from \"@mui/material/ListItem\";\nimport styled from \"styled-components\";\nimport { styled as styledMui } from \"@mui/material/styles\";\n\nconst drawerWidthExpanded = 320;\nconst drawerWidthCollapsed = 80;\n\nexport const DrawerContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   width: 100%;\n   height: 100vh;\n`;\n\nexport const ChildrenContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\"].includes(p)\n})<{ expanded?: boolean }>`\n   padding-right: 5px;\n   padding-left: 5px;\n   ${({ expanded }) =>\n      expanded ? `width: ${drawerWidthExpanded}px;` : `width: ${drawerWidthCollapsed}px;`}\n   ${({ expanded }) => (!expanded ? \"padding: 0 15px;\" : \"\")}\n   overflow-x: hidden;\n   height: 100%;\n   z-index: 1;\n   background: ${({ theme, expanded }) => theme.colors.background2};\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n   & .MuiButtonBase-root {\n      justify-content: flex-start;\n   }\n`;\n\nexport const PageContainer = styled(\"div\")`\n   width: 100%;\n`;\n\nexport const ButtonsContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\"].includes(p)\n})<{ expanded?: boolean }>`\n   display: flex;\n   flex-direction: column;\n   overflow-x: hidden;\n   row-gap: 0px;\n   ${({ expanded }) => (!expanded ? \"transform: scale(1.2);\" : \"\")}\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const LogoContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\"].includes(p)\n})<{ expanded?: boolean }>`\n   margin: 40px 0;\n   width: 100%;\n   height: 40px;\n   ${({ expanded }) => (expanded ? \"transform: scale(1.3);\" : \"\")}\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ListItemStyled = styledMui(ListItem)<ListItemProps>(({ theme }) => ({\n   width: drawerWidthExpanded\n}));\n","export default __webpack_public_path__ + \"static/media/logo.03f17db3.png\";","import React, { FC, ReactNode, useState } from \"react\";\nimport {\n   DrawerContainer,\n   ChildrenContainer,\n   LogoContainer,\n   ButtonsContainer,\n   PageContainer,\n   ListItemStyled\n} from \"./styles.Drawer\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport logo from \"../../../../assets/logo.png\";\n\ninterface PropsDrawer {\n   buttons: Array<{\n      icon: () => ReactNode;\n      label: string;\n      marginBottom?: number;\n      onClick: () => void;\n   }>;\n}\n\nconst Drawer: FC<PropsDrawer> = props => {\n   const { children, buttons } = props;\n   const [expanded, setExpanded] = useState(false);\n\n   const handleDrawerExpand = () => {\n      setExpanded(true);\n   };\n\n   const handleDrawerContract = () => {\n      setExpanded(false);\n   };\n\n   return (\n      <DrawerContainer>\n         <ChildrenContainer\n            expanded={expanded}\n            onMouseEnter={handleDrawerExpand}\n            onMouseLeave={handleDrawerContract}\n         >\n            <LogoContainer expanded={expanded}>\n               <img\n                  src={logo}\n                  style={{ width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\n                  alt={\"logo\"}\n               />\n            </LogoContainer>\n            <ButtonsContainer expanded={expanded}>\n               {buttons.map(button => (\n                  <ListItemStyled\n                     //@ts-ignore\n                     button={true}\n                     key={button.label}\n                     onClick={button.onClick}\n                     style={{ marginBottom: button.marginBottom ?? 0 }}\n                     sx={{ borderRadius: 2.2 }}\n                  >\n                     <ListItemIcon>{button.icon()}</ListItemIcon>\n                     <ListItemText primary={button.label} />\n                  </ListItemStyled>\n               ))}\n            </ButtonsContainer>\n         </ChildrenContainer>\n         <PageContainer>{children}</PageContainer>\n      </DrawerContainer>\n   );\n};\n\nexport default Drawer;\n","/**\n * Appends the subpath to the server url and returns a full url ready to be used in the requests\n * @param subpath\n */\nexport function serverUrlComposer(subpath: string): string {\n   return `/api/${subpath}/`;\n}\n","import { stringify } from \"query-string\";\nimport { serverUrlComposer } from \"./serverUrlComposer\";\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\n/**\n * Wrapper for fetch for more simplification and issues solved.\n */\nexport async function httpRequest<Params = null, Response = null>(\n   props: HttpRequestParams<Params>\n): Promise<Response> {\n   let { url, method = \"GET\", params } = props;\n   url = serverUrlComposer(url);\n   const settings: AxiosRequestConfig = { url, method };\n\n   if (method === \"GET\" && params != null) {\n      settings.url += \"?\" + stringify(params);\n   }\n\n   if (method === \"POST\" && params != null) {\n      settings.data = params;\n   }\n\n   const client: AxiosInstance = axios.create(settings);\n   const result = await client(settings);\n   return result.data as Response;\n}\n\nexport interface HttpRequestParams<T> {\n   url: string;\n   method?: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\";\n   params?: T;\n}\n","import { AdminProtectionParams } from \"../../api/tools/shared-tools/endpoints-interfaces/admin\";\n\nexport function saveCredentialsInStorage(credentials: AdminProtectionParams) {\n   const { user, password } = credentials;\n\n   localStorage.setItem(\"user\", user);\n   localStorage.setItem(\"password\", password);\n}\n\nexport function getCredentialsFromStorage(): AdminProtectionParams {\n   return {\n      user: localStorage.getItem(\"user\"),\n      password: localStorage.getItem(\"password\")\n   };\n}\n\nexport function removeCredentialsFromStorage() {\n   localStorage.removeItem(\"user\");\n   localStorage.removeItem(\"password\");\n}\n\nexport function logout() {\n   removeCredentialsFromStorage();\n}\n","import Menu from \"@mui/material/Menu\";\nimport styled from \"styled-components\";\n\nexport const MenuStyled = styled(Menu)`\n   ul {\n      min-width: 150px;\n   }\n`;\n\nexport const UnanchoredContainer = styled(\"div\")`\n   width: fit-content;\n   min-width: 150px;\n`;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Paper from \"@mui/material/Paper\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MenuStyled, UnanchoredContainer } from \"./styles.ContextMenu\";\n\nexport interface SimpleDialogProps {\n   buttonToOpen: (onClick: (e: React.MouseEvent<HTMLButtonElement>) => void) => ReactElement;\n   buttons: DialogButton[];\n   onClose: (label: string | null, value: string | null) => void;\n   startOpened?: boolean;\n}\n\nexport interface DialogButton {\n   label: string;\n   value: string;\n   icon?: () => ReactElement;\n}\n\nconst ContextMenu: FC<SimpleDialogProps> = props => {\n   const { onClose, buttons, buttonToOpen, startOpened } = props;\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n   const [open, setOpen] = useState(startOpened ?? false);\n\n   const handleClose = () => {\n      setOpen(false);\n      onClose(null, null);\n   };\n\n   const handleListItemClick = (label: string, value: string) => {\n      setOpen(false);\n      onClose(label, value);\n   };\n\n   const handleOpenerClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n      setOpen(true);\n   };\n\n   const renderButton = (button: DialogButton) => {\n      return (\n         <MenuItem\n            onClick={() => handleListItemClick(button.label, button.value)}\n            key={button.value}\n         >\n            {button.icon && button.icon()}\n            {button.label}\n         </MenuItem>\n      );\n   };\n\n   return (\n      <>\n         {buttonToOpen(handleOpenerClick)}\n         {anchorEl ? (\n            <MenuStyled\n               onClose={handleClose}\n               open={open}\n               anchorEl={anchorEl}\n               keepMounted\n               transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\"\n               }}\n            >\n               {buttons.map(button => renderButton(button))}\n            </MenuStyled>\n         ) : (\n            open && (\n               <UnanchoredContainer>\n                  <Paper elevation={6}>\n                     <MenuList>{buttons.map(button => renderButton(button))}</MenuList>\n                  </Paper>\n               </UnanchoredContainer>\n            )\n         )}\n      </>\n   );\n};\n\nexport default ContextMenu;\n","export function tryToGetErrorMessage(error: any): string {\n   if (error == null) {\n      return \"\";\n   }\n\n   if (error.response?.data?.error?.message) {\n      return error.response.data.error.message;\n   }\n\n   if (error.response?.data?.[0]?.message != null) {\n      return error.response.data[0].message;\n   }\n\n   if (error.response?.data != null) {\n      return error.response.data;\n   }\n\n   if (error.response != null) {\n      return error.response;\n   }\n\n   if (error.message != null) {\n      return error.message;\n   }\n\n   return \"No information found\";\n}\n","import styled from \"styled-components\";\n\nexport const RequestStatusContainer = styled(\"div\")`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   width: 100%;\n`;\n","import CircularProgress from \"@mui/material/CircularProgress\";\nimport React, { FC } from \"react\";\nimport { tryToGetErrorMessage } from \"../../../../api/tools/tryToGetErrorMessage\";\nimport { RequestStatusContainer } from \"./styles.RequestStatus\";\n\ninterface PropsRequestsStatus {\n   loading?: boolean[] | boolean;\n   error?: unknown[] | unknown;\n   loadingScaleMode?: LoadingScaleMode;\n}\n\nexport enum LoadingScaleMode {\n   FillViewport,\n   FillContainer\n}\n\nexport const RequestsStatus: FC<PropsRequestsStatus> = props => {\n   const { loading, error, children, loadingScaleMode = LoadingScaleMode.FillViewport } = props;\n   const isLoading: boolean = Array.isArray(loading) ? loading.includes(true) : loading ?? false;\n   const isError = Array.isArray(error) ? error.find(e => e != null) : error ?? null;\n   const showChildren = isError == null && !isLoading;\n\n   return (\n      <>\n         <div style={showChildren ? {} : { display: \"none\" }}>{children}</div>\n         {!showChildren && (\n            <RequestStatusContainer\n               style={{\n                  height: loadingScaleMode === LoadingScaleMode.FillViewport ? \"100vh\" : \"100%\"\n               }}\n            >\n               {isLoading && !isError && <CircularProgress color=\"secondary\" />}\n               {isError && \"Error: \" + tryToGetErrorMessage(isError)}\n            </RequestStatusContainer>\n         )}\n      </>\n   );\n};\n","import styled from \"styled-components\";\n\nexport const LogsContainer = styled(\"div\")`\n   width: 100%;\n   height: 100vh;\n   overflow: hidden;\n   position: relative;\n`;\n\nexport const ContextMenuContainer = styled(\"div\")`\n   position: absolute;\n   top: 0px;\n   padding: 5px 88px;\n`;\n\nexport const LogFileFeedbackMessage = styled(\"div\")`\n   display: flex;\n   align-items: flex-start;\n   justify-content: center;\n   width: 100%;\n   height: 100vh;\n   padding-top: 150px;\n`;\n","import React, { FC, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { LazyLog } from \"react-lazylog\";\nimport { useLog, useLogsFileList } from \"../../../api/server/logs\";\nimport ContextMenu from \"../../common/UI/ContextMenu/ContextMenu\";\nimport { RequestsStatus } from \"../../common/UI/RequestStatus/RequestStatus\";\nimport { ContextMenuContainer, LogFileFeedbackMessage, LogsContainer } from \"./styles.Logs\";\nimport { useFileListToRender } from \"./tools/useFileListToRender\";\n\nconst Logs: FC = () => {\n   const [selectedLogFile, setSelectedLogFile] = useState<string | null>(null);\n   const [selectedLogFileName, setSelectedLogFileName] = useState<string | null>(null);\n   const { data: fileList, isLoading: fileListLoading, error: fileListError } = useLogsFileList();\n   const { data: log, isLoading: logLoading, error: logError } = useLog({\n      params: { fileName: selectedLogFile },\n      options: { enabled: selectedLogFile != null }\n   });\n   const fileListToRender = useFileListToRender(fileList);\n\n   const handleLogFileChange = (\n      logSelectedName: string | null,\n      logSelectedValue: string | null\n   ) => {\n      if (logSelectedValue == null) {\n         return;\n      }\n\n      setSelectedLogFile(logSelectedValue);\n      setSelectedLogFileName(logSelectedName);\n   };\n\n   return (\n      <RequestsStatus loading={[fileListLoading, logLoading]} error={[fileListError, logError]}>\n         <LogsContainer>\n            {log ? (\n               <LazyLog\n                  enableSearch\n                  text={log}\n                  caseInsensitive\n                  containerStyle={{ color: \"#48b951\" }}\n               />\n            ) : (\n               <LogFileFeedbackMessage>Log file is empty</LogFileFeedbackMessage>\n            )}\n            <ContextMenuContainer>\n               <ContextMenu\n                  startOpened\n                  onClose={handleLogFileChange}\n                  buttons={fileListToRender}\n                  buttonToOpen={onClick => (\n                     <Button onClick={onClick}>\n                        {selectedLogFile ? \"File: \" + selectedLogFileName : \"Select log file\"}\n                     </Button>\n                  )}\n               />\n            </ContextMenuContainer>\n         </LogsContainer>\n      </RequestsStatus>\n   );\n};\n\nexport default Logs;\n","import { useToken } from \"./../tools/tokenStorage\";\nimport { TokenParameter } from \"./../tools/shared-tools/endpoints-interfaces/common\";\nimport { AdminLogGetParams } from \"./../tools/shared-tools/endpoints-interfaces/admin\";\nimport { useQuery, UseQueryOptions, UseQueryResult } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\n\nexport function useLogsFileList<Response extends string[]>(props?: {\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   const url = \"admin/logs/files\";\n   const credentials = getCredentialsFromStorage();\n\n   return useQuery<Response>(\n      url,\n      () => httpRequest({ url, params: { ...credentials } }),\n      props?.options\n   );\n}\n\nexport function useLog<Params extends Partial<AdminLogGetParams>, Response extends string>(props: {\n   params: Params;\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   let { params } = props;\n   const credentials = getCredentialsFromStorage();\n\n   const url = \"admin/log\";\n   return useQuery<Response>(\n      url + params.fileName,\n      () => httpRequest({ url, params: { ...params, ...credentials } }),\n      props?.options\n   );\n}\n","import { useMemo } from \"react\";\n\nexport function useFileListToRender(fileList: string[] | undefined) {\n   return useMemo(() => fileList?.map(file => ({ label: file.split(\".\")[0], value: file })) ?? [], [\n      fileList\n   ]);\n}\n","import { useEffect, useState } from \"react\";\n\nfunction storageValueExists(value: string) {\n   return localStorage.getItem(value) != null;\n}\n\n/**\n * Checks for localStorage value existence and re-renders the component when that changes.\n */\nexport const useStorageValueExistsWatcher = (value: string, pollingRate = 150) => {\n   const [exist, setExist] = useState(storageValueExists(value));\n\n   useEffect(() => {\n      const interval = setInterval(() => setExist(storageValueExists(value)), pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return exist;\n};\n\n/**\n * Checks for localStorage value changes and re-renders the component on change.\n */\nexport const useLocalStorageValueWatcher = (item: string, pollingRate = 150) => {\n   const [value, setValue] = useState<string>(localStorage.getItem(item));\n\n   useEffect(() => {\n      const interval = setInterval(() => {\n         const newStorageValue = localStorage.getItem(item);\n         if (newStorageValue !== value) {\n            setValue(newStorageValue);\n         }\n      }, pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return value;\n};\n","import { useStorageValueExistsWatcher } from \"../browser/useStorageWatcher\";\n\nexport function useLoginStatus(): boolean {\n   const hasUser = useStorageValueExistsWatcher(\"user\");\n   const hasPassword = useStorageValueExistsWatcher(\"password\");\n\n   return hasUser && hasPassword;\n}\n","import styled from \"styled-components\";\n\nexport const LoginContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   margin-top: 20vh;\n   width: 100vw;\n   height: 80vh;\n`;\n\nexport const Logo = styled(\"img\")`\n   height: 150px;\n   margin-bottom: 50px;\n`;\n\nexport const LoginFormContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: flex-start;\n   row-gap: 15px;\n`;\n\nexport const ErrorText = styled(\"div\")`\n   bottom: -35px;\n   text-align: center;\n`;\n","import { httpRequest } from \"../tools/httpRequest\";\nimport {\n   AdminProtectionParams,\n   CredentialsValidationResult\n} from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function validateCredentialsGet<\n   Params extends AdminProtectionParams,\n   Response extends CredentialsValidationResult\n>(params: Params): Promise<Response> {\n   const url = \"admin/validate/credentials\";\n   return httpRequest({ url, params });\n}\n","import React, { FC, useState } from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { TextField } from \"@mui/material\";\nimport { ErrorText, LoginContainer, LoginFormContainer, Logo } from \"./styles.Login\";\nimport logo from \"../../../assets/logo.png\";\nimport { saveCredentialsInStorage } from \"../../../common-tools/authentication/authentication\";\nimport { validateCredentialsGet } from \"../../../api/server/login\";\n\nexport const Login: FC = () => {\n   const [user, setUser] = useState<string>();\n   const [password, setPassword] = useState<string>();\n   const [error, setError] = useState<string>();\n   const [loading, setLoading] = useState(false);\n\n   const handleLoginSend = async () => {\n      setLoading(true);\n      const validationResult = await validateCredentialsGet({ user, password });\n      setLoading(false);\n\n      if (validationResult.isValid) {\n         saveCredentialsInStorage({ user, password });\n      } else {\n         setError(validationResult.error);\n      }\n   };\n\n   return (\n      <LoginContainer>\n         <Logo src={logo} alt={\"logo\"} />\n         <LoginFormContainer>\n            <TextField\n               label=\"USER\"\n               variant=\"outlined\"\n               value={user}\n               onChange={e => setUser(e.target.value)}\n            />\n            <TextField\n               label=\"PASSWORD\"\n               variant=\"outlined\"\n               type=\"password\"\n               value={password}\n               onChange={e => setPassword(e.target.value)}\n            />\n            <LoadingButton loading={loading} variant=\"outlined\" onClick={handleLoginSend}>\n               Login\n            </LoadingButton>\n            {error && <ErrorText>{error}</ErrorText>}\n         </LoginFormContainer>\n      </LoginContainer>\n   );\n};\n","import React, { FC } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useLoginStatus } from \"../../../common-tools/authentication/useLoginStatus\";\nimport { Login } from \"../../pages/Login/Login\";\n\nconst RouteRequiresLogin: FC<React.ComponentProps<typeof Route>> = props => {\n   const userIsLogged = useLoginStatus();\n\n   return <Route {...props}>{userIsLogged ? props.children : <Login />}</Route>;\n};\n\nexport default RouteRequiresLogin;\n","import { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\nimport { GremlinElement } from \"../../components/pages/Visualizer/tools/visualizerUtils\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { VisualizerQueryParams } from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function visualizerGet<\n   Params extends Partial<VisualizerQueryParams>,\n   Response extends GremlinElement[]\n>(params: Params): Promise<Response> {\n   const url = \"admin/db/visualizer\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n","import styled from \"styled-components\";\n\nexport const GraphContainer = styled(\"div\")`\n   width: 100%;\n   height: 100%;\n`;\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { DataSet, Network } from \"vis-network/standalone\";\nimport { GraphContainer } from \"./styles.Graph\";\n\ninterface PropsGraph {\n   nodesHolder: DataSet<any, \"id\">;\n   edgesHolder: DataSet<any, \"id\">;\n   nodeIdSelected: string | number | undefined;\n   edgeIdSelected: string | number | undefined;\n   onNodeSelect: (nodeId: string | number | null) => void;\n   onEdgeSelect: (edgeId: string | number | null) => void;\n}\n\nconst Graph: FC<PropsGraph> = props => {\n   const {\n      nodesHolder,\n      edgesHolder,\n      nodeIdSelected,\n      edgeIdSelected,\n      onNodeSelect,\n      onEdgeSelect\n   } = props;\n   const graphContainerRef = useRef<HTMLDivElement>(null);\n   const [network, setNetwork] = useState<Network>();\n\n   const graphOptions = {\n      interaction: {\n         selectConnectedEdges: false\n      },\n      physics: {\n         forceAtlas2Based: {\n            gravitationalConstant: -26,\n            centralGravity: 0.005,\n            springLength: 230,\n            springConstant: 0.18,\n            avoidOverlap: 1.5\n         },\n         maxVelocity: 40,\n         solver: \"forceAtlas2Based\",\n         timestep: 0.35,\n         stabilization: {\n            enabled: true,\n            iterations: 50,\n            updateInterval: 25\n         }\n      },\n      nodes: {\n         shape: \"dot\",\n         size: 20,\n         borderWidth: 1,\n         font: {\n            color: \"white\",\n            size: 13\n         }\n      },\n      edges: {\n         width: 2,\n         font: {\n            size: 12\n         },\n         smooth: {\n            enabled: true,\n            type: \"dynamic\",\n            roundness: 1\n         }\n      }\n   };\n\n   useEffect(() => {\n      if (graphContainerRef.current == null) {\n         return;\n      }\n\n      const network = new Network(\n         graphContainerRef.current,\n         { nodes: nodesHolder, edges: edgesHolder },\n         graphOptions\n      );\n      setNetwork(network);\n\n      network.on(\"selectNode\", params => {\n         const nodeId: string | number =\n            params.nodes && params.nodes.length > 0 ? params.nodes[0] : null;\n         onNodeSelect(nodeId);\n      });\n\n      network.on(\"selectEdge\", params => {\n         const edgeId: string | number =\n            params.edges && params.edges.length === 1 ? params.edges[0] : null;\n         if (edgeId !== null) {\n            onEdgeSelect(edgeId);\n         }\n      });\n\n      network.on(\"deselectNode\", () => {\n         onNodeSelect(null);\n      });\n\n      network.on(\"deselectEdge\", () => {\n         onEdgeSelect(null);\n      });\n   }, [graphContainerRef]);\n\n   useEffect(() => {\n      if (nodeIdSelected == null || network == null) {\n         return;\n      }\n      network.selectNodes([nodeIdSelected]);\n   }, [nodeIdSelected]);\n\n   useEffect(() => {\n      if (edgeIdSelected == null || network == null) {\n         return;\n      }\n      // There is a bug with this line, seems to be something internal of vis-network\n      // network.selectEdges([edgeIdSelected]);\n   }, [edgeIdSelected]);\n\n   return <GraphContainer ref={graphContainerRef}>Graph</GraphContainer>;\n};\n\nexport default React.memo(Graph);\n","import _ from \"lodash\";\n\nexport interface GremlinElement {\n   label: string;\n   id: string | number;\n   [k: string]: any;\n}\n\nexport interface NodeLabelInfo {\n   type: string;\n   field: string;\n}\n\nconst selectRandomField = (obj: GremlinElement) => {\n   let result;\n   // Set the first key as the result just in case\n   for (result in obj) break;\n\n   // Try to find a key \"name\" because it's probably the better option\n   for (let key in obj) {\n      if (key.toLocaleLowerCase() === \"name\") {\n         result = key;\n      }\n   }\n\n   // If the key name is not found maybe we can find a key where part of the name includes \"name\"\n   if (result.toLocaleLowerCase() !== \"name\") {\n      for (let key in obj) {\n         if (key.toLowerCase().includes(\"name\")) {\n            result = key;\n         }\n      }\n   }\n\n   return result;\n};\n\nexport const getDiffNodes = (newList: GremlinElement[], oldList: GremlinElement[]) => {\n   return _.differenceBy(newList, oldList, node => node.id);\n};\n\nexport const getDiffEdges = (newList: GremlinElement[], oldList: GremlinElement[]) => {\n   return _.differenceBy(newList, oldList, edge => `${edge.from},${edge.to}`);\n};\n\nexport const extractEdgesAndNodes = (\n   nodeList: GremlinElement[],\n   oldNodeLabels: NodeLabelInfo[] = []\n) => {\n   let edges: any = [];\n   const nodes: any = [];\n   const nodeLabels = [...oldNodeLabels];\n\n   const nodeLabelMap = _.mapValues(_.keyBy(nodeLabels, \"type\"), \"field\");\n\n   _.forEach(nodeList, node => {\n      const type = node.label;\n      // if (!nodeLabelMap[type]) {\n      const field = selectRandomField(node.properties);\n      const nodeLabel = { type, field };\n      nodeLabels.push(nodeLabel);\n      nodeLabelMap[type] = field;\n      // }\n      const labelField = nodeLabelMap[type];\n      const label = labelField in node.properties ? node.properties[labelField] : type;\n      nodes.push({\n         id: node.id,\n         label: String(label),\n         group: node.label,\n         properties: node.properties,\n         type\n      });\n\n      edges = edges.concat(\n         _.map(node.edges, edge => ({\n            ...edge,\n            type: edge.label,\n            arrows: { to: { enabled: true, scaleFactor: 0.5 } }\n         }))\n      );\n   });\n\n   return { edges, nodes, nodeLabels };\n};\n\nexport const findNodeById = (nodeList: GremlinElement[], id: string) => {\n   return _.find(nodeList, node => node.id === id);\n};\n\nexport const stringifyObjectValues = (obj: GremlinElement) => {\n   _.forOwn(obj, (value, key) => {\n      if (!_.isString(value)) {\n         obj[key] = JSON.stringify(value);\n      }\n   });\n};\n","import styled from \"styled-components\";\n\nexport const VisualizerContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   height: 100%;\n`;\n\nexport const SearchPartContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: relative;\n   width: 100%;\n   height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { Autocomplete, TextField } from \"@mui/material\";\n\nexport const HeaderContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: absolute;\n   justify-content: center;\n   width: 100%;\n   height: 40px;\n   margin-top: 27px;\n   z-index: 2;\n`;\n\nexport const FormContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   column-gap: 10px;\n   width: 60%;\n   min-width: 200px;\n   height: 100%;\n`;\n\nexport const NodeLimitTextField = styled(TextField)`\n   max-width: 55px;\n   margin-left: 20px !important;\n\n   & .MuiInputBase-input {\n      background-color: ${({ theme }) => theme.colors.background2};\n   }\n`;\n","export interface PresetQueryItem {\n   query: string;\n   name?: string;\n   category?: string;\n   carrotPos?: number;\n   carrotPosStart?: number;\n   carrotPosEnd?: number;\n}\n\nconst queryPresetsByCategory: Array<{ categoryName: string; presets: PresetQueryItem[] }> = [\n   {\n      categoryName: \"Newest\",\n      presets: [\n         {\n            name: \"Newest users\",\n            query:\n               'g.V().hasLabel(\"user\").order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc)'\n         },\n         {\n            name: \"Newest woman\",\n            query:\n               'g.V().hasLabel(\"user\").order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).where(out(\"isGender\").has(\"genderId\", \"Woman\")).has(\"isCoupleProfile\", false)'\n         },\n         {\n            name: \"Newest man\",\n            query:\n               'g.V().hasLabel(\"user\").order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).where(out(\"isGender\").has(\"genderId\", \"Man\")).has(\"isCoupleProfile\", false)'\n         },\n         {\n            name: \"Newest couples\",\n            query:\n               'g.V().hasLabel(\"user\").order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).has(\"isCoupleProfile\", true)'\n         },\n         {\n            name: \"Newest tags\",\n            query: 'g.V().hasLabel(\"tag\").order().by(\"creationDate\", desc).has(\"global\", false)'\n         },\n         {\n            name: \"Newest matches\",\n            query: 'g.E().hasLabel(\"Match\").order().by(\"timestamp\", desc).bothV()'\n         },\n         {\n            name: \"Newest groups\",\n            query: 'g.V().hasLabel(\"group\").order().by(\"creationDate\", desc)'\n         }\n      ]\n   },\n   {\n      categoryName: \"Matches\",\n      presets: [\n         {\n            name: \"All matches\",\n            query: 'g.E().hasLabel(\"Match\").bothV()'\n         }\n      ]\n   }\n];\n\nexport const queryPresets = getQueryPresets();\n\nfunction getQueryPresets(): PresetQueryItem[] {\n   const result: PresetQueryItem[] = [];\n\n   queryPresetsByCategory.forEach(category => {\n      category.presets.forEach(preset =>\n         result.push({ ...preset, category: category.categoryName })\n      );\n   });\n\n   return result;\n}\n\nexport function getStartingPreset(): PresetQueryItem {\n   return {\n      query: 'g.V().has(\"name\", \"\")',\n      carrotPos: 19\n   };\n}\n\nexport function getCarrotPos(query: string): { start: number; end: number } {\n   if (query == null) {\n      return { start: 0, end: 0 };\n   }\n\n   let preset = queryPresets.find(preset => preset.query === query);\n\n   if (preset == null) {\n      preset = getStartingPreset();\n\n      if (preset == null) {\n         return { start: 0, end: 0 };\n      }\n   }\n\n   if (preset.carrotPos != null) {\n      return { start: preset.carrotPos, end: preset.carrotPos };\n   }\n\n   if (preset.carrotPosStart != null && preset.carrotPosEnd != null) {\n      return { start: preset.carrotPosStart, end: preset.carrotPosEnd };\n   }\n\n   return { start: 0, end: 0 };\n}\n","import { Autocomplete } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const AutocompleteTextField = styled(Autocomplete)`\n   background-color: ${({ theme }) => theme.colors.background2};\n   & .MuiInputBase-input {\n      background-color: ${({ theme }) => theme.colors.background2};\n   }\n`;\n","import { TextField } from \"@mui/material\";\nimport React, { FC, useRef } from \"react\";\nimport { AutocompleteTextField } from \"./styles.QueryInput\";\nimport { getCarrotPos, PresetQueryItem, queryPresets } from \"./tools/presets\";\n\ninterface PropsQueryInput {\n   value: PresetQueryItem;\n   onChange: (newValue: PresetQueryItem) => void;\n   onEnterPress: () => void;\n}\n\nconst QueryInput: FC<PropsQueryInput> = props => {\n   const { value, onChange, onEnterPress } = props;\n   const inputRef = useRef<HTMLInputElement>();\n   const initialized = useRef<boolean>(false);\n\n   const setCarrotPos = (query: string) => {\n      if (inputRef?.current) {\n         setTimeout(() => {\n            const carrotPos = getCarrotPos(query);\n            inputRef.current.focus();\n            inputRef.current.selectionStart = carrotPos.start;\n            inputRef.current.selectionEnd = carrotPos.end;\n         }, 16);\n      }\n   };\n\n   return (\n      <AutocompleteTextField\n         fullWidth\n         freeSolo\n         options={queryPresets}\n         groupBy={(option: any) => option.category}\n         getOptionLabel={(option: any) => option.query}\n         renderOption={(props, option: any) => <li {...props}>{option.name}</li>}\n         clearOnBlur={false}\n         clearOnEscape={false}\n         value={value}\n         onChange={(e, newValue: any) => {\n            setCarrotPos(newValue?.query);\n            onChange(newValue);\n         }}\n         onInputChange={(e, newValue: string) => {\n            if (initialized.current === false) {\n               setCarrotPos(newValue);\n               initialized.current = true;\n            }\n            onChange({ query: newValue });\n         }}\n         renderInput={params => {\n            return (\n               <TextField\n                  {...params}\n                  autoFocus\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color=\"secondary\"\n                  fullWidth\n                  onFocus={e => {\n                     inputRef.current = e.target as HTMLInputElement;\n                  }}\n                  onKeyDown={event => {\n                     if (event.key === \"Enter\") {\n                        onEnterPress();\n                     }\n                  }}\n               />\n            );\n         }}\n      />\n   );\n};\n\nexport default QueryInput;\n","import React, { FC, useState } from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { FormContainer, HeaderContainer, NodeLimitTextField } from \"./styles.Header\";\nimport { OnSearchFunc } from \"../Visualizer\";\nimport { getStartingPreset, PresetQueryItem } from \"./QueryInput/tools/presets\";\nimport QueryInput from \"./QueryInput/QueryInput\";\n\ninterface PropsHeader {\n   loading: boolean;\n   onSearch: OnSearchFunc;\n}\n\nconst Header: FC<PropsHeader> = props => {\n   const { loading, onSearch } = props;\n   const [nodeLimit, setNodeLimit] = useState<number>(150);\n   const [query, setQuery] = useState<PresetQueryItem>(getStartingPreset());\n\n   const handleSearch = () => {\n      onSearch({ query: query.query, nodeLimit });\n   };\n\n   return (\n      <HeaderContainer>\n         <FormContainer>\n            <QueryInput value={query} onChange={setQuery} onEnterPress={handleSearch} />\n            <LoadingButton\n               loading={loading}\n               variant=\"contained\"\n               color=\"secondary\"\n               onClick={handleSearch}\n            >\n               Send\n            </LoadingButton>\n            <NodeLimitTextField\n               label=\"LIMIT\"\n               variant=\"outlined\"\n               size=\"small\"\n               color=\"secondary\"\n               type=\"number\"\n               value={nodeLimit}\n               onChange={e => setNodeLimit(Number(e.target.value))}\n            />\n         </FormContainer>\n      </HeaderContainer>\n   );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n   // State for keeping track of whether key is pressed\n   const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n   // If pressed key is our target key then set to true\n   const downHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n         setKeyPressed(true);\n      }\n   };\n\n   // If released key is our target key then set to false\n   const upHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n         setKeyPressed(false);\n      }\n   };\n\n   // Add event listeners\n   useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n         window.removeEventListener(\"keydown\", downHandler);\n         window.removeEventListener(\"keyup\", upHandler);\n      };\n   }, []); // Empty array ensures that effect is only run on mount and unmount\n\n   return keyPressed;\n}\n","import moment from \"moment\";\n\nexport function humanizeSecondsAmount(time: number): string {\n   return moment.duration(time, \"seconds\").locale(\"en\").humanize();\n}\n\nexport function humanizeUnixTimeStamp(time: number): string {\n   return `${humanizeSecondsAmount(moment().unix() - time)} - ${moment\n      .unix(time)\n      .format(\"DD MMM YYYY\")}`;\n}\n","import styled from \"styled-components\";\n\nexport const PropertiesContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n`;\n\nexport const KeyLabel = styled(\"div\")`\n   font-size: 16px;\n   font-weight: 400;\n`;\n\nexport const ValueLabel = styled(\"div\")`\n   font-size: 19px;\n   font-weight: 200;\n   padding-left: 25px;\n`;\n","import React, { FC } from \"react\";\nimport {\n   humanizeSecondsAmount,\n   humanizeUnixTimeStamp\n} from \"../../../../../../common-tools/strings/humanizeUnixTime\";\nimport { OnSearchFunc } from \"../../../Visualizer\";\nimport { KeyLabel, PropertiesContainer, ValueLabel } from \"./styles.GenericPropertiesTable\";\n\nexport interface PropsGenericPropertiesTable {\n   properties: Record<string, string | number>;\n   hideProps?: string[];\n   onSearch: OnSearchFunc;\n}\n\nconst GenericPropertiesTable: FC<PropsGenericPropertiesTable> = props => {\n   const { properties, hideProps } = props;\n\n   const keys = Object.keys(properties ?? {}).sort();\n\n   const unixTimeProps = [\n      \"lastGroupJoinedDate\",\n      \"birthDate\",\n      \"lastLoginDate\",\n      \"creationDate\",\n      \"mostVotedDate\",\n      \"lastInteractionDate\",\n      \"timestamp\"\n   ];\n\n   const setupValueText = (key: string, value: string | number) => {\n      if (unixTimeProps.includes(key)) {\n         return humanizeUnixTimeStamp(Number(value));\n      }\n\n      return String(value);\n   };\n\n   return (\n      <>\n         {keys.map(\n            key =>\n               (!hideProps || !hideProps.includes(key)) && (\n                  <div key={key}>\n                     <KeyLabel>{key}</KeyLabel>\n                     <ValueLabel>{setupValueText(key, properties[key])}</ValueLabel>\n                  </div>\n               )\n         )}\n      </>\n   );\n};\n\nexport default GenericPropertiesTable;\n","import styled from \"styled-components\";\n\nexport const ChatBubbleContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"color\"].includes(p)\n})<{ color: string }>`\n   padding: 10px 20px;\n   border-radius: 20px;\n   background: ${({ color }) => color};\n   width: fit-content;\n`;\n\nexport const NameLabel = styled(\"div\")`\n   font-size: 15px;\n   font-weight: 600;\n   margin-bottom: 5px;\n`;\n\nexport const TextLabel = styled(\"div\")`\n   padding-left: 15px;\n`;\n","import React, { FC } from \"react\";\nimport { ChatBubbleContainer, NameLabel, TextLabel } from \"./styles.ChatBubble\";\n\ninterface PropsChatBubble {\n   name: string;\n   text: string;\n   color: string;\n}\n\nconst ChatBubble: FC<PropsChatBubble> = props => {\n   const { color, text, name } = props;\n\n   return (\n      <ChatBubbleContainer color={color}>\n         <NameLabel>{name}</NameLabel>\n         <TextLabel>{text}</TextLabel>\n      </ChatBubbleContainer>\n   );\n};\n\nexport default ChatBubble;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport GenericPropertiesTable, {\n   PropsGenericPropertiesTable\n} from \"../GenericPropertiesTable/GenericPropertiesTable\";\nimport { ValueLabel } from \"../GenericPropertiesTable/styles.GenericPropertiesTable\";\nimport {\n   Group,\n   GroupChat\n} from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/groups\";\nimport { useTheme } from \"styled-components\";\nimport ChatBubble from \"./ChatBubble/ChatBubble\";\nimport { visualizerGet } from \"../../../../../../api/server/visualizer\";\n\nconst GroupPanel: FC<PropsGenericPropertiesTable> = props => {\n   const group = (props.properties as unknown) as Partial<Group>;\n   const theme = useTheme();\n   const chat: GroupChat = JSON.parse(((group.chat ?? \"[]\") as unknown) as string);\n   const [members, setMembers] = useState<Array<{ userId: string; name: string }>>();\n\n   /**\n    * Effect to get members of the group\n    */\n   useEffect(() => {\n      (async () => {\n         const result = await visualizerGet({\n            query: `g.V().has(\"group\", \"groupId\", \"${group.groupId}\").both(\"member\")`\n         });\n\n         setMembers(\n            result?.map(memberVertex => ({\n               userId: memberVertex?.properties?.userId,\n               name: memberVertex?.properties?.name\n            })) ?? undefined\n         );\n      })();\n   }, []);\n\n   const groupQuery = `has(\"groupId\", \"${group.groupId}\")`;\n   const queryButtons = [\n      {\n         name: \"Members\",\n         query: `g.V().union(${groupQuery}, ${groupQuery}.both(\"member\"))`\n      }\n   ];\n\n   const getColorForUser = (userId: string) => {\n      if (members) {\n         const memberIndex = members?.findIndex(m => m.userId === userId);\n         return theme.colors.chatNamesColors[memberIndex] ?? \"black\";\n      } else {\n         return \"black\";\n      }\n   };\n\n   return (\n      <>\n         <ValueLabel>{group.name}</ValueLabel>\n         {queryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         {chat.messages.map(message => (\n            <ChatBubble\n               name={\n                  !members\n                     ? message.authorUserId\n                     : members.find(member => member.userId === message.authorUserId).name ??\n                       message.authorUserId\n               }\n               text={message.messageText}\n               color={getColorForUser(message.authorUserId)}\n            />\n         ))}\n         <GenericPropertiesTable\n            properties={group as Record<string, string | number>}\n            onSearch={props.onSearch}\n            hideProps={[\"chat\"]}\n         />\n      </>\n   );\n};\n\nexport default GroupPanel;\n","import React, { FC } from \"react\";\nimport { Button } from \"@mui/material\";\nimport GenericPropertiesTable, {\n   PropsGenericPropertiesTable\n} from \"../GenericPropertiesTable/GenericPropertiesTable\";\nimport { ValueLabel } from \"../GenericPropertiesTable/styles.GenericPropertiesTable\";\nimport { Tag } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/tags\";\n\nconst TagsPanel: FC<PropsGenericPropertiesTable> = props => {\n   const tag = (props.properties as unknown) as Partial<Tag>;\n\n   const tagQuery = `has(\"tagId\", \"${tag.tagId}\")`;\n   const queryButtons = [\n      {\n         name: \"Subscribers\",\n         query: `g.V().union(${tagQuery}, ${tagQuery}.both(\"subscribed\").hasLabel(\"user\"))`\n      },\n      {\n         name: \"Blockers\",\n         query: `g.V().union(${tagQuery}, ${tagQuery}.both(\"blocked\").hasLabel(\"user\"))`\n      }\n   ];\n\n   const dangerousQueryButtons = [\n      {\n         name: \"Delete tag\",\n         query: `g.V().${tagQuery}.drop()`\n      }\n   ];\n\n   return (\n      <>\n         <ValueLabel>{tag.name}</ValueLabel>\n         {queryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         <GenericPropertiesTable\n            properties={tag as Record<string, string | number>}\n            onSearch={props.onSearch}\n            hideProps={[\"images\"]}\n         />\n         {dangerousQueryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n      </>\n   );\n};\n\nexport default TagsPanel;\n","import React, { FC } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useServerInfo } from \"../../../../../../api/server/server-info\";\nimport { User } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/user\";\nimport GenericPropertiesTable, {\n   PropsGenericPropertiesTable\n} from \"../GenericPropertiesTable/GenericPropertiesTable\";\nimport { ValueLabel } from \"../GenericPropertiesTable/styles.GenericPropertiesTable\";\n\nconst UserPanel: FC<PropsGenericPropertiesTable> = props => {\n   const user = (props.properties as unknown) as Partial<User>;\n   const serverInfo = useServerInfo();\n\n   const userQuery = `has(\"userId\", \"${user.userId}\")`;\n   const queryButtons = [\n      {\n         name: \"Genders\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"isGender\", \"likesGender\"))`\n      },\n      {\n         name: \"Matches\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"Match\"))`\n      },\n      {\n         name: \"Likes Dislikes\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"Like\", \"Dislike\"))`\n      },\n      {\n         name: \"Tags\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"subscribed\", \"blocked\").hasLabel(\"tag\"))`\n      },\n      {\n         name: \"Groups\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both().hasLabel(\"group\"))`\n      }\n   ];\n\n   const dangerousQueryButtons = [\n      {\n         name: \"Delete user\",\n         query: `g.V().${userQuery}.drop()`\n      }\n   ];\n\n   return (\n      <>\n         <ValueLabel>{user.name}</ValueLabel>\n         <ValueLabel>{user.country}</ValueLabel>\n         <ValueLabel>{user.profileDescription}</ValueLabel>\n         <ValueLabel>{user.dateIdea}</ValueLabel>\n         {queryButtons.map((buttonData, i) => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n               key={i}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         {user.images &&\n            serverInfo?.data?.imagesHost &&\n            (JSON.parse((user.images as unknown) as string) as string[]).map(image => (\n               <img src={serverInfo?.data?.imagesHost + image} key={image} />\n            ))}\n\n         <GenericPropertiesTable\n            properties={user as Record<string, string | number>}\n            onSearch={props.onSearch}\n            hideProps={[\"images\"]}\n         />\n         {dangerousQueryButtons.map((buttonData, i) => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n               key={i}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n      </>\n   );\n};\n\nexport default UserPanel;\n","import { useQuery, UseQueryOptions } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport {\n   ServerInfoParams,\n   ServerInfoResponse\n} from \"../tools/shared-tools/endpoints-interfaces/server-info\";\n\n/**\n * This request sends the version of the client to the server and gets information about possible updates\n * needed in the client, service status and other important information.\n */\nexport function useServerInfo<T extends ServerInfoResponse>(props?: {\n   config?: UseQueryOptions<T>;\n}) {\n   return useQuery<T>(\n      \"server-info\",\n      () =>\n         httpRequest<ServerInfoParams, T>({\n            url: \"server-info\",\n            params: {\n               buildVersion: \"0.0.0\",\n               codeVersion: \"0.0.0\"\n            }\n         }),\n      props?.config\n   );\n}\n","import styled from \"styled-components\";\n\nexport const PanelContainer = styled(\"div\")`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   width: 40vw;\n   min-width: 40vw;\n   height: 300;\n   padding: 25px 0;\n   padding-right: 35px;\n`;\n\nexport const PanelCard = styled(\"div\")`\n   position: relative;\n   display: flex;\n   flex-direction: column;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n   background-color: ${({ theme }) => theme.colors.background2};\n   border-radius: 10px;\n   padding: 5px 28px;\n   row-gap: 20px;\n   overflow-wrap: break-word;\n`;\n\nexport const NodeElementTitle = styled(\"div\")`\n   font-size: 35px;\n   font-weight: 200;\n   margin-top: 20px;\n   margin-bottom: 10px;\n`;\n\nexport const NavigationButtonsContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: absolute;\n   top: 20px;\n   right: 25px;\n   column-gap: 5px;\n`;\n","import { IconButton } from \"@mui/material\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { VscChevronLeft, VscChevronRight } from \"react-icons/vsc\";\nimport { useKeyPress } from \"../../../../common-tools/browser/useKeyPress\";\nimport { GremlinElement } from \"../tools/visualizerUtils\";\nimport { OnSearchFunc } from \"../Visualizer\";\nimport GenericPropertiesTable, {\n   PropsGenericPropertiesTable\n} from \"./DataSpecificPanels/GenericPropertiesTable/GenericPropertiesTable\";\nimport GroupPanel from \"./DataSpecificPanels/GroupPanel/GroupPanel\";\nimport TagsPanel from \"./DataSpecificPanels/TagsPanel/TagsPanel\";\nimport UserPanel from \"./DataSpecificPanels/UserPanel/UserPanel\";\nimport {\n   NavigationButtonsContainer,\n   NodeElementTitle,\n   PanelCard,\n   PanelContainer\n} from \"./styles.Panel\";\n\ninterface PropsPanel {\n   allNodes: GremlinElement[];\n   allEdges: GremlinElement[];\n   nodeIdSelected: string | number | undefined;\n   edgeIdSelected: string | number | undefined;\n   onSearch: OnSearchFunc;\n   onNextClick: () => void;\n   onPrevClick: () => void;\n}\n\nconst Panel: FC<PropsPanel> = props => {\n   const {\n      allNodes,\n      allEdges,\n      nodeIdSelected,\n      edgeIdSelected,\n      onSearch,\n      onNextClick,\n      onPrevClick\n   } = props;\n   const [elementToShow, setElementToShow] = useState<GremlinElement>();\n   const leftKeyPressed = useKeyPress(\"ArrowLeft\");\n   const rightKeyPressed = useKeyPress(\"ArrowRight\");\n\n   useEffect(() => {\n      setElementToShow(allNodes.find(node => node.id === nodeIdSelected));\n   }, [nodeIdSelected]);\n\n   useEffect(() => {\n      setElementToShow(allEdges.find(edge => edge.id === edgeIdSelected));\n   }, [edgeIdSelected]);\n\n   useEffect(() => {\n      if (leftKeyPressed && elementToShow != null) {\n         onPrevClick();\n      }\n   }, [leftKeyPressed]);\n\n   useEffect(() => {\n      if (rightKeyPressed && elementToShow != null) {\n         onNextClick();\n      }\n   }, [rightKeyPressed]);\n\n   let Panel: React.FC<PropsGenericPropertiesTable>;\n   switch (elementToShow?.type ?? \"\") {\n      case \"user\":\n         Panel = UserPanel;\n         break;\n\n      case \"group\":\n         Panel = GroupPanel;\n         break;\n\n      case \"tag\":\n         Panel = TagsPanel;\n         break;\n\n      default:\n         Panel = GenericPropertiesTable;\n         break;\n   }\n\n   return (\n      <PanelContainer>\n         <PanelCard>\n            {elementToShow != null && (\n               <>\n                  <NavigationButtonsContainer>\n                     <IconButton onClick={onPrevClick}>\n                        <VscChevronLeft />\n                     </IconButton>\n                     <IconButton onClick={onNextClick}>\n                        <VscChevronRight />\n                     </IconButton>\n                  </NavigationButtonsContainer>\n                  <NodeElementTitle>{elementToShow.type}</NodeElementTitle>\n                  <Panel properties={elementToShow.properties} onSearch={onSearch} />\n               </>\n            )}\n         </PanelCard>\n      </PanelContainer>\n   );\n};\n\nexport default Panel;\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport function setUrlParameter(props: { key: string; value: string }) {\n   const { key, value } = props;\n   var queryParams = new URLSearchParams(window.location.search);\n   queryParams.set(key, value);\n   window.history.pushState(null, null, \"?\" + queryParams.toString());\n}\n\nexport function getUrlParameter(key: string) {\n   var queryParams = new URLSearchParams(window.location.search);\n   return queryParams.get(key);\n}\n\n/**\n * Checks for url parameter value changes and re-renders the component on change.\n */\nexport const useUrlParameterWatcher = (key: string, pollingRate = 150) => {\n   const [value, setValue] = useState<string>(getUrlParameter(key));\n\n   useEffect(() => {\n      const interval = setInterval(() => {\n         const newStorageValue = getUrlParameter(key);\n         if (newStorageValue !== value) {\n            setValue(newStorageValue);\n         }\n      }, pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return value;\n};\n\nexport default function useUserChangesUrlWatcher(onChange: () => void, passive = false) {\n   const handlePopState = useCallback(() => onChange(), []);\n\n   useEffect(() => {\n      // initiate the event handler\n      window.addEventListener(\"popstate\", handlePopState, passive);\n\n      // this will clean up the event every time the component is re-rendered\n      return function cleanup() {\n         window.removeEventListener(\"popstate\", handlePopState);\n      };\n   });\n}\n","import React, { FC, useEffect, useState } from \"react\";\nimport { DataSet } from \"vis-network/standalone\";\nimport { visualizerGet } from \"../../../api/server/visualizer\";\nimport Graph from \"./Graph/Graph\";\nimport {\n   extractEdgesAndNodes,\n   getDiffEdges,\n   getDiffNodes,\n   GremlinElement,\n   NodeLabelInfo\n} from \"./tools/visualizerUtils\";\nimport { SearchPartContainer, VisualizerContainer } from \"./styles.Visualizer\";\nimport Header from \"./Header/Header\";\nimport Panel from \"./Panel/Panel\";\nimport useUserChangesUrlWatcher, {\n   getUrlParameter,\n   setUrlParameter\n} from \"../../../common-tools/browser/url-tools\";\n\nexport type OnSearchFunc = (props: {\n   query: string;\n   nodeLimit?: number;\n   reset?: boolean;\n   saveOnUrl?: boolean;\n}) => void;\n\nconst Visualizer: FC = () => {\n   const [loading, setLoading] = useState(false);\n   const [allNodes, setAllNodes] = useState<GremlinElement[]>([]);\n   const [allEdges, setAllEdges] = useState<GremlinElement[]>([]);\n   const [nodeLabelsToShow, setNodeLabelsToShow] = useState<NodeLabelInfo[]>([]);\n   const [nodeHolder] = useState(new DataSet([]));\n   const [edgeHolder] = useState(new DataSet([]));\n   const [nodeIdSelected, setNodeIdSelected] = useState<string | number>();\n   const [edgeIdSelected, setEdgeIdSelected] = useState<string | number>();\n   const [selectedElementType, setSelectedElementType] = useState<\"edge\" | \"node\">();\n\n   const sendQueryFromUrlParams = () => {\n      const queryFromUrlParams = getUrlParameter(\"visualizer-search\");\n      if (queryFromUrlParams != null) {\n         handleSendQuery({ query: queryFromUrlParams, saveOnUrl: false });\n      }\n   };\n\n   // Effect to send the query at the url params at mount\n   useEffect(sendQueryFromUrlParams, []);\n\n   // This sends the query from the url params when the user presses back button on the browser\n   useUserChangesUrlWatcher(sendQueryFromUrlParams);\n\n   // Effect to select the first node if nothing is selected after search results arrive\n   useEffect(() => {\n      if (nodeIdSelected == null && edgeIdSelected == null && allNodes?.length > 0) {\n         handleSelectNode(allNodes[0].id);\n      }\n   }, [allNodes]);\n\n   const handleSendQuery: OnSearchFunc = async props => {\n      const { query, nodeLimit = 150, reset = true, saveOnUrl = true } = props;\n\n      setLoading(true);\n      const result = await visualizerGet({ query, nodeLimit });\n      const { nodes, edges, nodeLabels = [] } = extractEdgesAndNodes(result, nodeLabelsToShow);\n\n      // Saving the current query on the url makes possible to go back and open new window without losing state.\n      if (saveOnUrl) {\n         setUrlParameter({ key: \"visualizer-search\", value: query });\n      }\n\n      // Add new nodes\n      if (reset) {\n         setAllNodes([...nodes]);\n         nodeHolder.clear();\n         nodeHolder.add(nodes);\n      } else {\n         const onlyNewNodes = getDiffNodes(nodes, allNodes);\n         setAllNodes([...allNodes, ...onlyNewNodes]);\n         nodeHolder.add(onlyNewNodes);\n      }\n\n      // Add new edges\n      if (reset) {\n         setAllEdges([...edges]);\n         edgeHolder.clear();\n         edgeHolder.add(edges);\n      } else {\n         const onlyNewEdges = getDiffEdges(edges, allEdges);\n         setAllEdges([...allEdges, ...onlyNewEdges]);\n         edgeHolder.add(onlyNewEdges);\n      }\n\n      // Update node labels\n      setNodeLabelsToShow(nodeLabels);\n\n      setLoading(false);\n   };\n\n   const handleSelectNode = (nodeId: string | number | undefined) => {\n      setNodeIdSelected(nodeId);\n      setSelectedElementType(\"node\");\n   };\n   const handleSelectEdge = (edgeId: string | number | undefined) => {\n      setEdgeIdSelected(edgeId);\n      setSelectedElementType(\"edge\");\n   };\n\n   const handleNextClick = () => {\n      if (selectedElementType === \"node\") {\n         const index = allNodes.findIndex(node => node.id === nodeIdSelected);\n         const nextIndex = index === allNodes.length - 1 ? 0 : index + 1;\n         const nextElementId = allNodes[nextIndex].id;\n         handleSelectNode(nextElementId);\n      } else {\n         const index = allEdges.findIndex(edge => edge.id === edgeIdSelected);\n         const nextIndex = index === allEdges.length - 1 ? 0 : index + 1;\n         const nextElementId = allEdges[nextIndex].id;\n         handleSelectEdge(nextElementId);\n      }\n   };\n\n   const handlePrevClick = () => {\n      if (selectedElementType === \"node\") {\n         const index = allNodes.findIndex(node => node.id === nodeIdSelected);\n         const prevIndex = index === 0 ? allNodes.length - 1 : index - 1;\n         const prevElementId = allNodes[prevIndex].id;\n         handleSelectNode(prevElementId);\n      } else {\n         const index = allEdges.findIndex(edge => edge.id === edgeIdSelected);\n         const prevIndex = index === 0 ? allEdges.length - 1 : index - 1;\n         const prevElementId = allEdges[prevIndex].id;\n         handleSelectEdge(prevElementId);\n      }\n   };\n\n   return (\n      <VisualizerContainer>\n         <SearchPartContainer>\n            <Header loading={loading} onSearch={handleSendQuery} />\n            <Graph\n               nodesHolder={nodeHolder}\n               edgesHolder={edgeHolder}\n               nodeIdSelected={nodeIdSelected}\n               edgeIdSelected={edgeIdSelected}\n               onNodeSelect={handleSelectNode}\n               onEdgeSelect={handleSelectEdge}\n            />\n         </SearchPartContainer>\n         <Panel\n            allEdges={allEdges}\n            allNodes={allNodes}\n            nodeIdSelected={nodeIdSelected}\n            edgeIdSelected={edgeIdSelected}\n            onSearch={handleSendQuery}\n            onNextClick={handleNextClick}\n            onPrevClick={handlePrevClick}\n         />\n      </VisualizerContainer>\n   );\n};\n\nexport default Visualizer;\n","import { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { LoadCsvPostParams } from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function loadCSVRequest<Params extends Partial<LoadCsvPostParams>>(\n   params: Params\n): Promise<Response> {\n   const url = \"admin/db/loadcsv\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n","import styled from \"styled-components\";\n\nexport const TechOpsContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   padding: 20px;\n`;\n\nexport const ButtonsContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   max-width: 300px;\n   margin-top: 60px;\n`;\n","import LoadingButton from \"@mui/lab/LoadingButton\";\nimport React, { FC, useState } from \"react\";\nimport { loadCSVRequest } from \"../../../api/server/techOps\";\nimport { ButtonsContainer, TechOpsContainer } from \"./styles.TechOps\";\n\nconst TechOps: FC = () => {\n   const [loading, setLoading] = useState();\n\n   const handleLoadCsv = async () => {\n      await loadCSVRequest({ fileId: \"latest\" });\n   };\n\n   return (\n      <TechOpsContainer>\n         <h1>Tech operations</h1>\n         <ButtonsContainer>\n            <LoadingButton loading={loading} variant=\"outlined\" onClick={handleLoadCsv}>\n               Load CSV\n            </LoadingButton>\n         </ButtonsContainer>\n      </TechOpsContainer>\n   );\n};\n\nexport default TechOps;\n","import React, { FC } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport {\n   VscListSelection,\n   VscClose,\n   VscTypeHierarchySuper,\n   VscSymbolProperty\n} from \"react-icons/vsc\";\nimport Drawer from \"../../common/UI/Drawer/Drawer\";\nimport Logs from \"../Logs/Logs\";\nimport RouteRequiresLogin from \"../../common/RouteRequiresLogin/RouteRequiresLogin\";\nimport { logout } from \"../../../common-tools/authentication/authentication\";\nimport { useLoginStatus } from \"../../../common-tools/authentication/useLoginStatus\";\nimport { Login } from \"../Login/Login\";\nimport Visualizer from \"../Visualizer/Visualizer\";\nimport TechOps from \"../TechOps/TechOps\";\n\nconst Main: FC = () => {\n   const history = useHistory();\n   const isLogged = useLoginStatus();\n\n   if (!isLogged) {\n      return <Login />;\n   }\n\n   return (\n      <Drawer\n         buttons={[\n            {\n               label: \"Visualizer\",\n               icon: () => <VscTypeHierarchySuper />,\n               onClick: () => history.push(\"/visualizer\")\n            },\n            {\n               label: \"Logs\",\n               icon: () => <VscListSelection />,\n               onClick: () => history.push(\"/logs\"),\n               marginBottom: 40\n            },\n            {\n               label: \"Tech Operations\",\n               icon: () => <VscSymbolProperty />,\n               onClick: () => history.push(\"/tech-ops\")\n            },\n            {\n               label: \"Logout\",\n               icon: () => <VscClose />,\n               onClick: () => logout()\n            }\n         ]}\n      >\n         <Switch>\n            <RouteRequiresLogin exact path=\"/\">\n               <Logs />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/logs\">\n               <Logs />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/visualizer\">\n               <Visualizer />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/tech-ops\">\n               <TechOps />\n            </RouteRequiresLogin>\n         </Switch>\n      </Drawer>\n   );\n};\n\nexport default Main;\n","import { QueryClient } from \"react-query\";\n\nexport const queryClient = new QueryClient({\n   defaultOptions: {\n      queries: {\n         staleTime: Infinity,\n         structuralSharing: false,\n         retry: false,\n         refetchOnWindowFocus: false\n      }\n   }\n});\n","import React, { FC } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryClientProvider } from \"react-query\";\nimport { defaultTheme, muiTheme } from \"./common-tools/themes/defaultTheme\";\nimport { GlobalStyles } from \"./common-tools/themes/globalStyles/GlobalStyles\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport Main from \"./components/pages/Main/Main\";\nimport { queryClient } from \"./api/tools/cacheConfig\";\n\nconst App: FC = () => {\n   return (\n      <QueryClientProvider client={queryClient}>\n         <ThemeProvider theme={defaultTheme}>\n            <MuiThemeProvider theme={muiTheme}>\n               <GlobalStyles />\n               <Router basename=\"/dashboard\">\n                  <Main />\n               </Router>\n            </MuiThemeProvider>\n         </ThemeProvider>\n      </QueryClientProvider>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}