{"version":3,"sources":["common-tools/themes/defaultTheme.ts","common-tools/themes/globalStyles/GlobalStyles.ts","components/common/UI/Drawer/styles.Drawer.tsx","assets/logo.png","components/common/UI/Drawer/Drawer.tsx","api/tools/serverUrlComposer.ts","api/tools/httpRequest.ts","common-tools/authentication/authentication.ts","components/common/UI/ContextMenu/styles.ContextMenu.ts","components/common/UI/ContextMenu/ContextMenu.tsx","api/tools/tryToGetErrorMessage.ts","components/common/UI/RequestStatus/styles.RequestStatus.ts","components/common/UI/RequestStatus/RequestStatus.tsx","components/pages/Logs/styles.Logs.ts","components/pages/Logs/Logs.tsx","api/server/logs.ts","components/pages/Logs/tools/useFileListToRender.ts","common-tools/browser/useStorageWatcher.ts","common-tools/authentication/useLoginStatus.ts","components/pages/Login/styles.Login.ts","api/server/login.ts","components/pages/Login/Login.tsx","components/common/RouteRequiresLogin/RouteRequiresLogin.tsx","api/server/visualizer.ts","components/pages/Visualizer/Graph/styles.Graph.ts","components/pages/Visualizer/Graph/Graph.tsx","components/pages/Visualizer/tools/visualizerUtils.ts","components/pages/Visualizer/styles.Visualizer.ts","components/pages/Visualizer/Header/styles.Header.ts","components/pages/Visualizer/Header/QueryInput/tools/presets.ts","components/pages/Visualizer/Header/QueryInput/styles.QueryInput.ts","components/pages/Visualizer/Header/QueryInput/QueryInput.tsx","components/pages/Visualizer/Header/Header.tsx","common-tools/browser/useKeyPress.ts","common-tools/strings/humanizeUnixTime.ts","components/common/UI/ConfirmationDialog/ConfirmationDialog.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/GenericPanel/styles.GenericPanel.ts","components/pages/Visualizer/Panel/DataSpecificPanels/GenericPanel/GenericPanel.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/EdgePanel/EdgePanel.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/ChatBubble/styles.ChatBubble.ts","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/ChatBubble/ChatBubble.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/GroupPanel/GroupPanel.tsx","components/pages/Visualizer/Panel/DataSpecificPanels/TagsPanel/TagsPanel.tsx","components/common/UI/Row/Row.tsx","components/common/UI/ImagesCarousel/styles.ImagesCarousel.ts","components/common/UI/ImagesCarousel/ImagesCarousel.tsx","common-tools/strings/humanizeCountryCode.ts","components/pages/Visualizer/Panel/DataSpecificPanels/UserPanel/UserPanel.tsx","api/server/server-info.ts","components/pages/Visualizer/Panel/styles.Panel.ts","components/pages/Visualizer/Panel/Panel.tsx","common-tools/browser/url-tools.ts","components/pages/Visualizer/Visualizer.tsx","components/pages/TechOps/styles.TechOps.ts","api/server/techOps.ts","components/pages/TechOps/ResponseText/styles.ResponseText.ts","api/tools/shared-tools/endpoints-interfaces/user.ts","components/pages/TechOps/ResponseText/ResponseText.tsx","components/common/UI/CardColumn/CardColumn.styles.ts","components/common/UI/CardColumn/CardColumn.tsx","components/pages/TechOps/ButtonLoadDatabaseBackup/ButtonLoadDatabaseBackup.tsx","components/common/DashboardPageContainer/styles.DashboardPageContainer.ts","components/common/DashboardPageContainer/DashboardPageContainer.tsx","components/pages/TechOps/RunCommandForm/RunCommandForm.tsx","components/pages/TechOps/TechOps.tsx","api/server/notifications-send.ts","components/pages/Notifications/common/containers.ts","components/pages/Notifications/FormEmailSelector/FormEmailSelector.tsx","components/pages/Notifications/FormNotificationContent/FormNotificationContent.tsx","components/common/UI/Column/Column.tsx","components/pages/Notifications/styles.Notifications.ts","components/pages/Notifications/Notifications.tsx","components/pages/Main/Main.tsx","api/tools/cacheConfig.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultTheme","colors","background1","background2","text1","scrollbar","scrollbarThumb","chatNamesColors","shadows","elevation1","fonts","font1","size1","weight1","letterSpacing1","lineHeight1","borders","borderRadius1","muiTheme","createTheme","palette","mode","typography","fontFamily","join","GlobalStyles","createGlobalStyle","props","theme","DrawerContainer","styled","ChildrenContainer","withConfig","shouldForwardProp","p","includes","expanded","expandOnHover","PageContainer","ButtonsContainer","LogoContainer","ListItemStyled","styledMui","ListItem","width","TooltipStyled","className","Tooltip","classes","popper","tooltipClasses","tooltip","fontSize","Drawer","children","buttons","useState","setExpanded","onMouseEnter","onMouseLeave","src","logo","style","height","objectFit","alt","map","button","onClick","marginBottom","sx","borderRadius","ListItemIcon","icon","ListItemText","primary","label","title","arrow","placement","TransitionComponent","Zoom","IconButton","serverUrlComposer","subpath","httpRequest","a","url","method","params","urlParams","settings","stringify","data","client","axios","create","result","saveCredentialsInStorage","credentials","user","password","localStorage","setItem","getCredentialsFromStorage","getItem","logout","removeItem","MenuStyled","Menu","UnanchoredContainer","ContextMenu","onClose","buttonToOpen","startOpened","React","anchorEl","setAnchorEl","open","setOpen","renderButton","MenuItem","value","event","currentTarget","keepMounted","transformOrigin","vertical","horizontal","Paper","elevation","MenuList","tryToGetErrorMessage","error","response","message","LoadingScaleMode","RequestStatusContainer","RequestsStatus","loading","loadingScaleMode","FillViewport","isLoading","Array","isArray","isError","find","e","showChildren","display","CircularProgress","color","LogsContainer","ContextMenuContainer","LogFileFeedbackMessage","Logs","selectedLogFile","setSelectedLogFile","selectedLogFileName","setSelectedLogFileName","useQuery","options","useLogsFileList","fileList","fileListLoading","fileListError","fileName","useLog","enabled","log","logLoading","logError","fileListToRender","useMemo","file","split","useFileListToRender","enableSearch","text","caseInsensitive","containerStyle","logSelectedName","logSelectedValue","Button","storageValueExists","useStorageValueExistsWatcher","pollingRate","exist","setExist","useEffect","interval","setInterval","clearInterval","useLoginStatus","hasUser","hasPassword","LoginContainer","Logo","LoginFormContainer","ErrorText","validateCredentialsGet","Login","setUser","setPassword","setError","setLoading","handleLoginSend","validationResult","isValid","TextField","variant","onChange","target","type","LoadingButton","RouteRequiresLogin","userIsLogged","visualizerGet","GraphContainer","Graph","nodesHolder","edgesHolder","nodeIdSelected","edgeIdSelected","onNodeSelect","onEdgeSelect","graphContainerRef","useRef","network","setNetwork","graphOptions","interaction","selectConnectedEdges","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","avoidOverlap","maxVelocity","solver","timestep","stabilization","iterations","updateInterval","nodes","shape","size","borderWidth","font","edges","smooth","roundness","current","Network","on","nodeId","length","edgeId","selectNodes","ref","memo","selectRandomField","obj","key","toLocaleLowerCase","toLowerCase","getDiffEdges","newList","oldList","_","differenceBy","edge","from","to","extractEdgesAndNodes","nodeList","oldNodeLabels","nodeLabels","nodeLabelMap","mapValues","keyBy","forEach","node","field","properties","nodeLabel","push","labelField","id","String","group","concat","arrows","scaleFactor","VisualizerContainer","SearchPartContainer","HeaderContainer","FormContainer","NodeLimitTextField","queryPresetsByCategory","categoryName","presets","name","query","carrotPosStart","carrotPosEnd","queryPresets","category","preset","getQueryPresets","AutocompleteTextField","Autocomplete","QueryInput","onEnterPress","inputRef","initialized","setCarrotPos","setTimeout","carrotPos","start","end","getCarrotPos","focus","selectionStart","selectionEnd","fullWidth","freeSolo","groupBy","option","getOptionLabel","renderOption","clearOnBlur","clearOnEscape","newValue","onInputChange","renderInput","autoFocus","onFocus","onKeyDown","Header","defaultSearchInputValue","onSearch","nodeLimit","setNodeLimit","setQuery","handleSearch","Number","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","humanizeUnixTimeStamp","time","moment","duration","locale","humanize","humanizeSecondsAmount","unix","format","ConfirmationDialog","onContinueClick","continueButtonText","cancelButtonText","Dialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","KeyLabel","ValueLabel","GenericPanel","hideProps","isVertex","confirmationDialogProps","setConfirmationDialogProps","keys","Object","sort","unixTimeProps","setupValueText","elementSelectionQuery","dangerousQueryButtons","visualize","buttonData","i","onConfirm","EdgePanel","sameLabelEdges","queryButtons","ChatBubbleContainer","NameLabel","TextLabel","ChatBubble","GroupPanel","useTheme","chat","JSON","parse","members","setMembers","groupId","memberVertex","userId","undefined","groupQuery","getColorForUser","memberIndex","findIndex","m","messages","member","authorUserId","messageText","TagsPanel","tag","tagQuery","tagId","Row","CarouselStyled","Carousel","ImagesCarousel","selectedItem","setSelectedItem","console","infiniteLoop","showThumbs","onClickItem","index","transitionTime","countryCodesHash","country","UserPanel","countryCode","serverInfo","buildVersion","codeVersion","config","useServerInfo","userQuery","profileDescription","dateIdea","images","imagesHost","image","PanelContainer","PanelCard","NodeElementTitle","NavigationButtonsContainer","Panel","allNodes","allEdges","onNextClick","onPrevClick","elementToShow","setElementToShow","elementToShowIsNode","setElementToShowIsNode","leftKeyPressed","rightKeyPressed","scrollContainerRef","scrollTo","top","setUrlParameter","queryParams","URLSearchParams","location","search","set","history","pushState","toString","getUrlParameter","get","Visualizer","setAllNodes","setAllEdges","nodeLabelsToShow","setNodeLabelsToShow","DataSet","nodeHolder","edgeHolder","setNodeIdSelected","setEdgeIdSelected","selectedElementType","setSelectedElementType","queryFromUrlParams","sendQueryFromUrlParams","handleSendQuery","saveOnUrl","passive","handlePopState","useCallback","useUserChangesUrlWatcher","handleSelectNode","reset","clear","add","onlyNewNodes","onlyNewEdges","handleSelectEdge","nextIndex","nextElementId","prevIndex","prevElementId","loadCSVRequest","uploadAdminFiles","formPayLoad","FormData","files","append","executeCommandRequest","Gender","ResponseTextContainer","JsonTextContainer","ResponseText","responseText","dangerouslySetInnerHTML","__html","CardContentStyled","CardContent","CardColumn","Card","minWidth","ButtonLoadDatabaseBackup","setResponse","useFilePicker","accept","openFileSelector","plainFiles","errors","filesUploadResponse","nodesFileName","fileNames","edgesFileName","handleButtonClick","MainContainer","ScrollContainer","DashboardPageContainer","RunCommandForm","command","setCommand","handleClick","TechOps","sendNotificationsPost","AttractionType","MatchType","NotificationType","ALL_GENDERS","values","CIS_GENDERS","Woman","Man","TransgenderWoman","TransgenderMan","filter","gender","NotificationChannelId","ReportUserType","FormEmailSelector","emailsInput","setEmailsInput","multiline","inputValue","replace","FormNotificationContent","setTitle","setText","targetId","setTargetId","TextOnly","setType","notificationTypesAllowed","NearbyPartyOrEvent","idForReplacement","selected","ColumnCentered","ContinueButtonContainer","Notifications","notificationContent","setNotificationContent","emailFilter","setEmailFilter","confirmResponse","setConfirmResponse","confirmDialogOpen","setConfirmDialogOpen","handleSend","onlyReturnUsersAmount","filters","usersEmail","requestParams","channelId","Events","Default","Main","useHistory","exact","path","queryClient","QueryClient","defaultOptions","queries","staleTime","Infinity","structuralSharing","retry","refetchOnWindowFocus","App","QueryClientProvider","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2758f3be.chunk.js","sourcesContent":["import { Theme } from \"./typings/Theme\";\nimport { createTheme } from \"@mui/material/styles\";\n\nexport const defaultTheme: Theme = {\n   colors: {\n      background1: \"linear-gradient(#151515 50%,#242a43)\",\n      background2: \"#2C2C2C\",\n      text1: \"#A8A8A8\",\n      scrollbar: \"#00000000\",\n      scrollbarThumb: \"#868686\",\n      chatNamesColors: [\n         \"#a85b7c\",\n         \"#379ba8\",\n         \"#f72e62\",\n         \"#2b8129\",\n         \"#2d2981\",\n         \"#000000\",\n         \"#7778b1\",\n         \"#755c72\",\n         \"#29b516\",\n         \"#878900\",\n         \"#00bab3\",\n         \"#660000\",\n         \"#ae5bde\",\n         \"#de5b5b\",\n         \"#d95bde\",\n         \"#9600ff\",\n         \"#006cff\",\n         \"#a2ff00\",\n         \"#0c00ff\",\n         \"#f0ff00\"\n      ]\n   },\n   shadows: {\n      elevation1: \"1px 10px 0px 0px #00000024;\"\n   },\n   fonts: {\n      font1: '\"Montserrat\", sans-serif',\n      size1: \"20px\",\n      weight1: \"600\",\n      letterSpacing1: \"-0.26px\",\n      lineHeight1: \"21px\"\n   },\n   borders: {\n      borderRadius1: \"20px\"\n   }\n};\n\n/** Theme for material UI */\nexport const muiTheme = createTheme({\n   palette: {\n      mode: \"dark\"\n   },\n   typography: {\n      fontFamily: [\n         \"-apple-system\",\n         \"BlinkMacSystemFont\",\n         '\"Segoe UI\"',\n         \"Montserrat\",\n         '\"Helvetica Neue\"',\n         \"Arial\",\n         \"sans-serif\",\n         '\"Apple Color Emoji\"',\n         '\"Segoe UI Emoji\"',\n         '\"Segoe UI Symbol\"'\n      ].join(\",\")\n   }\n});\n","import { createGlobalStyle, DefaultTheme, GlobalStyleComponent } from \"styled-components\";\n// @ts-ignore\nimport \"./fonts-loading.scss\";\n\nexport const GlobalStyles: GlobalStyleComponent<{}, DefaultTheme> = createGlobalStyle`\n   html, body {\n      margin: 0;\n      padding: 0;\n      overflow-x: hidden;\n      background: ${props => props.theme.colors.background1};\n      font-family: ${props => props.theme.fonts.font1};\n      color: white;\n   }\n   \n   a:hover, a:visited, a:link, a:active {\n      text-decoration: none;   /* Removes underline in link texts */ \n      border:          none;   /* Removes border in linked items */\n      outline:         none;   /* Removes points border in images */\n   }\n   \n   *:focus {\n      outline: none;           /* Removes the selection outline from inputs and buttons */\n   }\n   \n   *, :after, :before {\n      box-sizing: border-box;  /* Do not include border and margin in the sizes numbers */\n   }\n\n   input[type=number]::-webkit-inner-spin-button, \n   input[type=number]::-webkit-outer-spin-button { \n      -webkit-appearance: none; \n      margin: 0; \n   }\n\n   ::-webkit-scrollbar {\n      width: 18px;\n      height: 7px;\n      margin: 0px;\n   }\n\n   ::-webkit-scrollbar-track {\n      background-color: transparent;\n      border-radius: 20px;\n   }\n\n   ::-webkit-scrollbar-thumb {\n      border: 5px solid transparent;\n      background-clip: content-box;\n      border-radius: 20px;\n      background-color: #565656;\n   }\n\n   ::-webkit-scrollbar-thumb:hover {\n      border: 5px solid transparent;\n      background-clip: content-box;\n      background-color: #565656;\n   }\n\n   ::-webkit-scrollbar-corner {\n      background-color: transparent;\n      border-radius: 20px;\n   }\n`;\n","import ListItem, { ListItemProps } from \"@mui/material/ListItem\";\nimport styled from \"styled-components\";\nimport { styled as styledMui } from \"@mui/material/styles\";\nimport Tooltip, { TooltipProps, tooltipClasses } from \"@mui/material/Tooltip\";\n\nconst drawerWidthExpanded = 320;\nconst drawerWidthCollapsed = 80;\n\nexport const DrawerContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   width: 100%;\n   height: 100vh;\n`;\n\nexport const ChildrenContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\", \"expandOnHover\"].includes(p)\n})<{ expanded?: boolean; expandOnHover?: boolean }>`\n   padding-right: 5px;\n   padding-left: 5px;\n   ${({ expanded, expandOnHover }) =>\n      expandOnHover\n         ? expanded\n            ? `width: ${drawerWidthExpanded}px;`\n            : `width: ${drawerWidthCollapsed}px;`\n         : \"\"}\n   ${({ expanded }) => (!expanded ? \"padding: 0 15px;\" : \"\")}\n   overflow-x: hidden;\n   height: 100%;\n   z-index: 1;\n   background: ${({ theme, expanded }) => theme.colors.background2};\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n   & .MuiButtonBase-root {\n      justify-content: flex-start;\n   }\n`;\n\nexport const PageContainer = styled(\"div\")`\n   width: 100%;\n`;\n\nexport const ButtonsContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\", \"expandOnHover\"].includes(p)\n})<{ expanded?: boolean; expandOnHover?: boolean }>`\n   display: flex;\n   flex-direction: column;\n   overflow-x: hidden;\n   row-gap: 0px;\n   ${({ expanded, expandOnHover }) => (expandOnHover && !expanded ? \"transform: scale(1.2);\" : \"\")}\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n   ${({ expandOnHover }) => (!expandOnHover ? \"width: fit-content;\" : \"\")}\n`;\n\nexport const LogoContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"expanded\"].includes(p)\n})<{ expanded?: boolean }>`\n   margin: 40px 0;\n   width: 100%;\n   height: 40px;\n   ${({ expanded }) => (expanded ? \"transform: scale(1.3);\" : \"\")}\n   transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ListItemStyled = styledMui(ListItem)<ListItemProps>(({ theme }) => ({\n   width: drawerWidthExpanded\n}));\n\n// export const TooltipStyled = styled(Tooltip)`\n//    display: none;\n//    & .MuiTooltip-tooltip {\n//       display: none;\n//       .MuiTooltip-tooltip {\n//          color: red;\n//       }\n//    }\n// `;\n\nexport const TooltipStyled = styledMui(({ className, ...props }: TooltipProps) => (\n   <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n   [`& .${tooltipClasses.tooltip}`]: {\n      fontSize: 14\n   }\n}));\n","export default __webpack_public_path__ + \"static/media/logo.03f17db3.png\";","import React, { FC, ReactNode, useState } from \"react\";\nimport {\n   DrawerContainer,\n   ChildrenContainer,\n   LogoContainer,\n   ButtonsContainer,\n   PageContainer,\n   ListItemStyled,\n   TooltipStyled\n} from \"./styles.Drawer\";\nimport Zoom from \"@mui/material/Zoom\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport logo from \"../../../../assets/logo.png\";\nimport { IconButton, Tooltip } from \"@mui/material\";\n\ninterface PropsDrawer {\n   expandOnHover?: boolean;\n   buttons: Array<{\n      icon: () => ReactNode;\n      label: string;\n      marginBottom?: number;\n      onClick: () => void;\n   }>;\n}\n\nconst Drawer: FC<PropsDrawer> = props => {\n   const { children, buttons, expandOnHover } = props;\n   const [expanded, setExpanded] = useState(false);\n\n   const handleDrawerExpand = () => {\n      if (expandOnHover) {\n         setExpanded(true);\n      }\n   };\n\n   const handleDrawerContract = () => {\n      if (expandOnHover) {\n         setExpanded(false);\n      }\n   };\n\n   return (\n      <DrawerContainer>\n         <ChildrenContainer\n            expanded={expanded}\n            expandOnHover={expandOnHover}\n            onMouseEnter={handleDrawerExpand}\n            onMouseLeave={handleDrawerContract}\n         >\n            <LogoContainer expanded={expanded}>\n               <img\n                  src={logo}\n                  style={{ width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\n                  alt={\"logo\"}\n               />\n            </LogoContainer>\n            <ButtonsContainer expanded={expanded} expandOnHover={expandOnHover}>\n               {buttons.map(button =>\n                  expandOnHover ? (\n                     <ListItemStyled\n                        //@ts-ignore\n                        button={true}\n                        key={button.label}\n                        onClick={button.onClick}\n                        style={{ marginBottom: button.marginBottom ?? 0 }}\n                        sx={{ borderRadius: 2.2 }}\n                     >\n                        <ListItemIcon>{button.icon()}</ListItemIcon>\n                        <ListItemText primary={button.label} />\n                     </ListItemStyled>\n                  ) : (\n                     <TooltipStyled\n                        title={button.label}\n                        arrow\n                        placement=\"right\"\n                        TransitionComponent={Zoom}\n                        key={button.label}\n                     >\n                        <IconButton\n                           onClick={button.onClick}\n                           style={{ marginBottom: button.marginBottom ?? 0 }}\n                        >\n                           {button.icon()}\n                        </IconButton>\n                     </TooltipStyled>\n                  )\n               )}\n            </ButtonsContainer>\n         </ChildrenContainer>\n         <PageContainer>{children}</PageContainer>\n      </DrawerContainer>\n   );\n};\n\nexport default Drawer;\n","/**\n * Appends the subpath to the server url and returns a full url ready to be used in the requests\n * @param subpath\n */\nexport function serverUrlComposer(subpath: string): string {\n   return `/api/${subpath}/`;\n}\n","import { stringify } from \"query-string\";\nimport { serverUrlComposer } from \"./serverUrlComposer\";\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\n\n/**\n * Wrapper for fetch for more simplification and issues solved.\n */\nexport async function httpRequest<Response = null, Params = any, UrlParams = any>(\n   props: HttpRequestParams<Params, UrlParams>\n): Promise<Response> {\n   let { url, method = \"GET\", params, urlParams } = props;\n   url = serverUrlComposer(url);\n   const settings: AxiosRequestConfig = { url, method };\n\n   if (method === \"GET\" && (params != null || urlParams != null)) {\n      settings.url += \"?\" + stringify(params ?? urlParams);\n   }\n\n   // GET already has url params up there, but other methods can also have url params\n   if (method !== \"GET\" && urlParams != null) {\n      settings.url += \"?\" + stringify(urlParams);\n   }\n\n   if (method === \"POST\" && params != null) {\n      settings.data = params;\n   }\n\n   const client: AxiosInstance = axios.create(settings);\n   const result = await client(settings);\n   return result.data as Response;\n}\n\nexport interface HttpRequestParams<Params = null, UrlParams = null> {\n   url: string;\n   method?: \"POST\" | \"GET\" | \"PUT\" | \"DELETE\";\n   params?: Params;\n   urlParams?: UrlParams;\n}\n","import { AdminProtectionParams } from \"../../api/tools/shared-tools/endpoints-interfaces/admin\";\n\nexport function saveCredentialsInStorage(credentials: AdminProtectionParams) {\n   const { user, password } = credentials;\n\n   localStorage.setItem(\"user\", user);\n   localStorage.setItem(\"password\", password);\n}\n\nexport function getCredentialsFromStorage(): AdminProtectionParams {\n   return {\n      user: localStorage.getItem(\"user\"),\n      password: localStorage.getItem(\"password\")\n   };\n}\n\nexport function removeCredentialsFromStorage() {\n   localStorage.removeItem(\"user\");\n   localStorage.removeItem(\"password\");\n}\n\nexport function logout() {\n   removeCredentialsFromStorage();\n}\n","import Menu from \"@mui/material/Menu\";\nimport styled from \"styled-components\";\n\nexport const MenuStyled = styled(Menu)`\n   ul {\n      min-width: 150px;\n   }\n`;\n\nexport const UnanchoredContainer = styled(\"div\")`\n   width: fit-content;\n   min-width: 150px;\n`;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Paper from \"@mui/material/Paper\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MenuStyled, UnanchoredContainer } from \"./styles.ContextMenu\";\n\nexport interface SimpleDialogProps {\n   buttonToOpen: (onClick: (e: React.MouseEvent<HTMLButtonElement>) => void) => ReactElement;\n   buttons: DialogButton[];\n   onClose: (label: string | null, value: string | null) => void;\n   startOpened?: boolean;\n}\n\nexport interface DialogButton {\n   label: string;\n   value: string;\n   icon?: () => ReactElement;\n}\n\nconst ContextMenu: FC<SimpleDialogProps> = props => {\n   const { onClose, buttons, buttonToOpen, startOpened } = props;\n   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n   const [open, setOpen] = useState(startOpened ?? false);\n\n   const handleClose = () => {\n      setOpen(false);\n      onClose(null, null);\n   };\n\n   const handleListItemClick = (label: string, value: string) => {\n      setOpen(false);\n      onClose(label, value);\n   };\n\n   const handleOpenerClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n      setOpen(true);\n   };\n\n   const renderButton = (button: DialogButton) => {\n      return (\n         <MenuItem\n            onClick={() => handleListItemClick(button.label, button.value)}\n            key={button.value}\n         >\n            {button.icon && button.icon()}\n            {button.label}\n         </MenuItem>\n      );\n   };\n\n   return (\n      <>\n         {buttonToOpen(handleOpenerClick)}\n         {anchorEl ? (\n            <MenuStyled\n               onClose={handleClose}\n               open={open}\n               anchorEl={anchorEl}\n               keepMounted\n               transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\"\n               }}\n            >\n               {buttons.map(button => renderButton(button))}\n            </MenuStyled>\n         ) : (\n            open && (\n               <UnanchoredContainer>\n                  <Paper elevation={6}>\n                     <MenuList>{buttons.map(button => renderButton(button))}</MenuList>\n                  </Paper>\n               </UnanchoredContainer>\n            )\n         )}\n      </>\n   );\n};\n\nexport default ContextMenu;\n","export function tryToGetErrorMessage(error: any): string {\n   if (error == null) {\n      return \"\";\n   }\n\n   if (error.response?.data?.error?.message) {\n      return error.response.data.error.message;\n   }\n\n   if (error.response?.data?.[0]?.message != null) {\n      return error.response.data[0].message;\n   }\n\n   if (error.response?.data != null) {\n      return error.response.data;\n   }\n\n   if (error.response != null) {\n      return error.response;\n   }\n\n   if (error.message != null) {\n      return error.message;\n   }\n\n   return \"No information found\";\n}\n","import styled from \"styled-components\";\n\nexport const RequestStatusContainer = styled(\"div\")`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   width: 100%;\n`;\n","import CircularProgress from \"@mui/material/CircularProgress\";\nimport React, { FC } from \"react\";\nimport { tryToGetErrorMessage } from \"../../../../api/tools/tryToGetErrorMessage\";\nimport { RequestStatusContainer } from \"./styles.RequestStatus\";\n\ninterface PropsRequestsStatus {\n   loading?: boolean[] | boolean;\n   error?: unknown[] | unknown;\n   loadingScaleMode?: LoadingScaleMode;\n}\n\nexport enum LoadingScaleMode {\n   FillViewport,\n   FillContainer\n}\n\nexport const RequestsStatus: FC<PropsRequestsStatus> = props => {\n   const { loading, error, children, loadingScaleMode = LoadingScaleMode.FillViewport } = props;\n   const isLoading: boolean = Array.isArray(loading) ? loading.includes(true) : loading ?? false;\n   const isError = Array.isArray(error) ? error.find(e => e != null) : error ?? null;\n   const showChildren = isError == null && !isLoading;\n\n   return (\n      <>\n         <div style={showChildren ? {} : { display: \"none\" }}>{children}</div>\n         {!showChildren && (\n            <RequestStatusContainer\n               style={{\n                  height: loadingScaleMode === LoadingScaleMode.FillViewport ? \"100vh\" : \"100%\"\n               }}\n            >\n               {isLoading && !isError && <CircularProgress color=\"secondary\" />}\n               {isError && \"Error: \" + tryToGetErrorMessage(isError)}\n            </RequestStatusContainer>\n         )}\n      </>\n   );\n};\n","import styled from \"styled-components\";\n\nexport const LogsContainer = styled(\"div\")`\n   width: 100%;\n   height: 100vh;\n   overflow: hidden;\n   position: relative;\n`;\n\nexport const ContextMenuContainer = styled(\"div\")`\n   position: absolute;\n   top: 0px;\n   padding: 5px 88px;\n`;\n\nexport const LogFileFeedbackMessage = styled(\"div\")`\n   display: flex;\n   align-items: flex-start;\n   justify-content: center;\n   width: 100%;\n   height: 100vh;\n   padding-top: 150px;\n`;\n","import React, { FC, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { LazyLog } from \"react-lazylog\";\nimport { useLog, useLogsFileList } from \"../../../api/server/logs\";\nimport ContextMenu from \"../../common/UI/ContextMenu/ContextMenu\";\nimport { RequestsStatus } from \"../../common/UI/RequestStatus/RequestStatus\";\nimport { ContextMenuContainer, LogFileFeedbackMessage, LogsContainer } from \"./styles.Logs\";\nimport { useFileListToRender } from \"./tools/useFileListToRender\";\n\nconst Logs: FC = () => {\n   const [selectedLogFile, setSelectedLogFile] = useState<string | null>(null);\n   const [selectedLogFileName, setSelectedLogFileName] = useState<string | null>(null);\n   const { data: fileList, isLoading: fileListLoading, error: fileListError } = useLogsFileList();\n   const { data: log, isLoading: logLoading, error: logError } = useLog({\n      params: { fileName: selectedLogFile },\n      options: { enabled: selectedLogFile != null }\n   });\n   const fileListToRender = useFileListToRender(fileList);\n\n   const handleLogFileChange = (\n      logSelectedName: string | null,\n      logSelectedValue: string | null\n   ) => {\n      if (logSelectedValue == null) {\n         return;\n      }\n\n      setSelectedLogFile(logSelectedValue);\n      setSelectedLogFileName(logSelectedName);\n   };\n\n   return (\n      <RequestsStatus loading={[fileListLoading, logLoading]} error={[fileListError, logError]}>\n         <LogsContainer>\n            {log ? (\n               <LazyLog\n                  enableSearch\n                  text={log}\n                  caseInsensitive\n                  containerStyle={{ color: \"#48b951\" }}\n               />\n            ) : (\n               <LogFileFeedbackMessage>Log file is empty</LogFileFeedbackMessage>\n            )}\n            <ContextMenuContainer>\n               <ContextMenu\n                  startOpened\n                  onClose={handleLogFileChange}\n                  buttons={fileListToRender}\n                  buttonToOpen={onClick => (\n                     <Button onClick={onClick}>\n                        {selectedLogFile ? \"File: \" + selectedLogFileName : \"Select log file\"}\n                     </Button>\n                  )}\n               />\n            </ContextMenuContainer>\n         </LogsContainer>\n      </RequestsStatus>\n   );\n};\n\nexport default Logs;\n","import { useToken } from \"./../tools/tokenStorage\";\nimport { TokenParameter } from \"./../tools/shared-tools/endpoints-interfaces/common\";\nimport { AdminLogGetParams } from \"./../tools/shared-tools/endpoints-interfaces/admin\";\nimport { useQuery, UseQueryOptions, UseQueryResult } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\n\nexport function useLogsFileList<Response extends string[]>(props?: {\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   const url = \"admin/logs/files\";\n   const credentials = getCredentialsFromStorage();\n\n   return useQuery<Response>(\n      url,\n      () => httpRequest({ url, params: { ...credentials } }),\n      props?.options\n   );\n}\n\nexport function useLog<Params extends Partial<AdminLogGetParams>, Response extends string>(props: {\n   params: Params;\n   options?: UseQueryOptions<Response>;\n}): UseQueryResult<Response> {\n   let { params } = props;\n   const credentials = getCredentialsFromStorage();\n\n   const url = \"admin/log\";\n   return useQuery<Response>(\n      url + params.fileName,\n      () => httpRequest({ url, params: { ...params, ...credentials } }),\n      props?.options\n   );\n}\n","import { useMemo } from \"react\";\n\nexport function useFileListToRender(fileList: string[] | undefined) {\n   return useMemo(() => fileList?.map(file => ({ label: file.split(\".\")[0], value: file })) ?? [], [\n      fileList\n   ]);\n}\n","import { useEffect, useState } from \"react\";\n\nfunction storageValueExists(value: string) {\n   return localStorage.getItem(value) != null;\n}\n\n/**\n * Checks for localStorage value existence and re-renders the component when that changes.\n */\nexport const useStorageValueExistsWatcher = (value: string, pollingRate = 150) => {\n   const [exist, setExist] = useState(storageValueExists(value));\n\n   useEffect(() => {\n      const interval = setInterval(() => setExist(storageValueExists(value)), pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return exist;\n};\n\n/**\n * Checks for localStorage value changes and re-renders the component on change.\n */\nexport const useLocalStorageValueWatcher = (item: string, pollingRate = 150) => {\n   const [value, setValue] = useState<string>(localStorage.getItem(item));\n\n   useEffect(() => {\n      const interval = setInterval(() => {\n         const newStorageValue = localStorage.getItem(item);\n         if (newStorageValue !== value) {\n            setValue(newStorageValue);\n         }\n      }, pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return value;\n};\n","import { useStorageValueExistsWatcher } from \"../browser/useStorageWatcher\";\n\nexport function useLoginStatus(): boolean {\n   const hasUser = useStorageValueExistsWatcher(\"user\");\n   const hasPassword = useStorageValueExistsWatcher(\"password\");\n\n   return hasUser && hasPassword;\n}\n","import styled from \"styled-components\";\n\nexport const LoginContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   margin-top: 20vh;\n   width: 100vw;\n   height: 80vh;\n`;\n\nexport const Logo = styled(\"img\")`\n   height: 150px;\n   margin-bottom: 50px;\n`;\n\nexport const LoginFormContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: flex-start;\n   row-gap: 15px;\n`;\n\nexport const ErrorText = styled(\"div\")`\n   bottom: -35px;\n   text-align: center;\n`;\n","import { httpRequest } from \"../tools/httpRequest\";\nimport {\n   AdminProtectionParams,\n   CredentialsValidationResult\n} from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function validateCredentialsGet<\n   Params extends AdminProtectionParams,\n   Response extends CredentialsValidationResult\n>(params: Params): Promise<Response> {\n   const url = \"admin/validate/credentials\";\n   return httpRequest({ url, params });\n}\n","import React, { FC, useState } from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { TextField } from \"@mui/material\";\nimport { ErrorText, LoginContainer, LoginFormContainer, Logo } from \"./styles.Login\";\nimport logo from \"../../../assets/logo.png\";\nimport { saveCredentialsInStorage } from \"../../../common-tools/authentication/authentication\";\nimport { validateCredentialsGet } from \"../../../api/server/login\";\n\nexport const Login: FC = () => {\n   const [user, setUser] = useState<string>();\n   const [password, setPassword] = useState<string>();\n   const [error, setError] = useState<string>();\n   const [loading, setLoading] = useState(false);\n\n   const handleLoginSend = async () => {\n      setLoading(true);\n      const validationResult = await validateCredentialsGet({ user, password });\n      setLoading(false);\n\n      if (validationResult.isValid) {\n         saveCredentialsInStorage({ user, password });\n      } else {\n         setError(validationResult.error);\n      }\n   };\n\n   return (\n      <LoginContainer>\n         <Logo src={logo} alt={\"logo\"} />\n         <LoginFormContainer>\n            <TextField\n               label=\"USER\"\n               variant=\"outlined\"\n               value={user}\n               onChange={e => setUser(e.target.value)}\n            />\n            <TextField\n               label=\"PASSWORD\"\n               variant=\"outlined\"\n               type=\"password\"\n               value={password}\n               onChange={e => setPassword(e.target.value)}\n            />\n            <LoadingButton loading={loading} variant=\"outlined\" onClick={handleLoginSend}>\n               Login\n            </LoadingButton>\n            {error && <ErrorText>{error}</ErrorText>}\n         </LoginFormContainer>\n      </LoginContainer>\n   );\n};\n","import React, { FC } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useLoginStatus } from \"../../../common-tools/authentication/useLoginStatus\";\nimport { Login } from \"../../pages/Login/Login\";\n\nconst RouteRequiresLogin: FC<React.ComponentProps<typeof Route>> = props => {\n   const userIsLogged = useLoginStatus();\n\n   return <Route {...props}>{userIsLogged ? props.children : <Login />}</Route>;\n};\n\nexport default RouteRequiresLogin;\n","import { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\nimport { GremlinElement } from \"../../components/pages/Visualizer/tools/visualizerUtils\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { VisualizerQueryParams } from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function visualizerGet<\n   Params extends Partial<VisualizerQueryParams>,\n   Response extends GremlinElement[]\n>(params: Params): Promise<Response> {\n   const url = \"admin/db/visualizer\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n","import styled from \"styled-components\";\n\nexport const GraphContainer = styled(\"div\")`\n   width: 100%;\n   height: 100%;\n`;\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { DataSet, Network } from \"vis-network/standalone\";\nimport { GraphContainer } from \"./styles.Graph\";\n\ninterface PropsGraph {\n   nodesHolder: DataSet<any, \"id\">;\n   edgesHolder: DataSet<any, \"id\">;\n   nodeIdSelected: string | number | undefined;\n   edgeIdSelected: string | number | undefined;\n   onNodeSelect: (nodeId: string | number | null) => void;\n   onEdgeSelect: (edgeId: string | number | null) => void;\n}\n\nconst Graph: FC<PropsGraph> = props => {\n   const {\n      nodesHolder,\n      edgesHolder,\n      nodeIdSelected,\n      edgeIdSelected,\n      onNodeSelect,\n      onEdgeSelect\n   } = props;\n   const graphContainerRef = useRef<HTMLDivElement>(null);\n   const [network, setNetwork] = useState<Network>();\n\n   const graphOptions = {\n      interaction: {\n         selectConnectedEdges: false\n      },\n      physics: {\n         forceAtlas2Based: {\n            gravitationalConstant: -26,\n            centralGravity: 0.005,\n            springLength: 230,\n            springConstant: 0.18,\n            avoidOverlap: 1.5\n         },\n         maxVelocity: 40,\n         solver: \"forceAtlas2Based\",\n         timestep: 0.35,\n         stabilization: {\n            enabled: true,\n            iterations: 50,\n            updateInterval: 25\n         }\n      },\n      nodes: {\n         shape: \"dot\",\n         size: 20,\n         borderWidth: 1,\n         font: {\n            color: \"white\",\n            size: 13\n         }\n      },\n      edges: {\n         width: 2,\n         font: {\n            size: 12\n         },\n         smooth: {\n            enabled: true,\n            type: \"dynamic\",\n            roundness: 1\n         }\n      }\n   };\n\n   useEffect(() => {\n      if (graphContainerRef.current == null) {\n         return;\n      }\n\n      const network = new Network(\n         graphContainerRef.current,\n         { nodes: nodesHolder, edges: edgesHolder },\n         graphOptions\n      );\n      setNetwork(network);\n\n      network.on(\"selectNode\", params => {\n         const nodeId: string | number =\n            params.nodes && params.nodes.length > 0 ? params.nodes[0] : null;\n         onNodeSelect(nodeId);\n      });\n\n      network.on(\"selectEdge\", params => {\n         const edgeId: string | number =\n            params.edges && params.edges.length === 1 ? params.edges[0] : null;\n         if (edgeId !== null) {\n            onEdgeSelect(edgeId);\n         }\n      });\n\n      network.on(\"deselectNode\", () => {\n         onNodeSelect(null);\n      });\n\n      network.on(\"deselectEdge\", () => {\n         onEdgeSelect(null);\n      });\n   }, [graphContainerRef]);\n\n   useEffect(() => {\n      if (nodeIdSelected == null || network == null) {\n         return;\n      }\n      network.selectNodes([nodeIdSelected]);\n   }, [nodeIdSelected]);\n\n   useEffect(() => {\n      if (edgeIdSelected == null || network == null) {\n         return;\n      }\n      // There is a bug with this line, seems to be something internal of vis-network\n      // network.selectEdges([edgeIdSelected]);\n   }, [edgeIdSelected]);\n\n   return <GraphContainer ref={graphContainerRef}>Graph</GraphContainer>;\n};\n\nexport default React.memo(Graph);\n","import _ from \"lodash\";\n\nexport interface GremlinElement<T = Record<string, number | string | boolean>> {\n   label: string;\n   id: string | number;\n   from?: string;\n   to?: string;\n   properties: T;\n   [k: string]: any;\n}\n\nexport interface NodeLabelInfo {\n   type: string;\n   field: string;\n}\n\nconst selectRandomField = (obj: Record<string, number | string | boolean>) => {\n   let result;\n   // Set the first key as the result just in case\n   for (result in obj) break;\n\n   // Try to find a key \"name\" because it's probably the better option\n   for (let key in obj) {\n      if (key.toLocaleLowerCase() === \"name\") {\n         result = key;\n      }\n   }\n\n   // If the key name is not found maybe we can find a key where part of the name includes \"name\"\n   if (result.toLocaleLowerCase() !== \"name\") {\n      for (let key in obj) {\n         if (key.toLowerCase().includes(\"name\")) {\n            result = key;\n         }\n      }\n   }\n\n   return result;\n};\n\nexport const getDiffNodes = (newList: GremlinElement[], oldList: GremlinElement[]) => {\n   return _.differenceBy(newList, oldList, node => node.id);\n};\n\nexport const getDiffEdges = (newList: GremlinElement[], oldList: GremlinElement[]) => {\n   return _.differenceBy(newList, oldList, edge => `${edge.from},${edge.to}`);\n};\n\nexport const extractEdgesAndNodes = (\n   nodeList: GremlinElement[],\n   oldNodeLabels: NodeLabelInfo[] = []\n) => {\n   let edges: any = [];\n   const nodes: any = [];\n   const nodeLabels = [...oldNodeLabels];\n\n   const nodeLabelMap = _.mapValues(_.keyBy(nodeLabels, \"type\"), \"field\");\n\n   _.forEach(nodeList, node => {\n      const type = node.label;\n      // if (!nodeLabelMap[type]) {\n      const field = selectRandomField(node.properties);\n      const nodeLabel = { type, field };\n      nodeLabels.push(nodeLabel);\n      nodeLabelMap[type] = field;\n      // }\n      const labelField = nodeLabelMap[type];\n      const label = labelField in node.properties ? node.properties[labelField] : type;\n      nodes.push({\n         id: node.id,\n         label: String(label),\n         group: node.label,\n         properties: node.properties,\n         type\n      });\n\n      edges = edges.concat(\n         _.map(node.edges, edge => ({\n            ...edge,\n            type: edge.label,\n            arrows: { to: { enabled: true, scaleFactor: 0.5 } }\n         }))\n      );\n   });\n\n   return { edges, nodes, nodeLabels };\n};\n\nexport const findNodeById = (nodeList: GremlinElement[], id: string) => {\n   return _.find(nodeList, node => node.id === id);\n};\n\nexport const stringifyObjectValues = (obj: GremlinElement) => {\n   _.forOwn(obj, (value, key) => {\n      if (!_.isString(value)) {\n         obj[key] = JSON.stringify(value);\n      }\n   });\n};\n","import styled from \"styled-components\";\n\nexport const VisualizerContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   height: 100%;\n`;\n\nexport const SearchPartContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: relative;\n   width: 100%;\n   height: 100%;\n`;\n","import styled from \"styled-components\";\nimport { Autocomplete, TextField } from \"@mui/material\";\n\nexport const HeaderContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: absolute;\n   justify-content: center;\n   width: 100%;\n   height: 40px;\n   margin-top: 27px;\n   z-index: 2;\n`;\n\nexport const FormContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   column-gap: 10px;\n   width: 70%;\n   min-width: 200px;\n   height: 100%;\n`;\n\nexport const NodeLimitTextField = styled(TextField)`\n   max-width: 55px;\n   margin-left: 20px !important;\n\n   & .MuiInputBase-input {\n      background-color: ${({ theme }) => theme.colors.background2};\n   }\n`;\n","export interface PresetQueryItem {\n   query: string;\n   name?: string;\n   category?: string;\n   carrotPos?: number;\n   carrotPosStart?: number;\n   carrotPosEnd?: number;\n}\n\nconst queryPresetsByCategory: Array<{ categoryName: string; presets: PresetQueryItem[] }> = [\n   {\n      categoryName: \"Newest\",\n      presets: [\n         {\n            name: \"Newest users\",\n            query: 'g.V().hasLabel(\"user\").has(\"profileCompleted\", true).order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc)'\n         },\n         {\n            name: \"Newest woman\",\n            query: 'g.V().hasLabel(\"user\").has(\"profileCompleted\", true).order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).where(out(\"isGender\").has(\"genderId\", \"Woman\")).has(\"isCoupleProfile\", false)'\n         },\n         {\n            name: \"Newest man\",\n            query: 'g.V().hasLabel(\"user\").has(\"profileCompleted\", true).order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).where(out(\"isGender\").has(\"genderId\", \"Man\")).has(\"isCoupleProfile\", false)'\n         },\n         {\n            name: \"Newest couples\",\n            query: 'g.V().hasLabel(\"user\").has(\"profileCompleted\", true).order().by(coalesce(values(\"registrationDate\"), values(\"lastGroupJoinedDate\")), desc).has(\"isCoupleProfile\", true)'\n         },\n         {\n            name: \"Newest tags\",\n            query: 'g.V().hasLabel(\"tag\").order().by(\"creationDate\", desc).has(\"global\", false)'\n         },\n         {\n            name: \"Newest matches\",\n            query: 'g.E().hasLabel(\"Match\").order().by(\"timestamp\", desc).bothV()'\n         },\n         {\n            name: \"Newest groups\",\n            query: 'g.V().hasLabel(\"group\").order().by(\"creationDate\", desc)'\n         }\n      ]\n   },\n   {\n      categoryName: \"Matches\",\n      presets: [\n         {\n            name: \"All matches\",\n            query: 'g.E().hasLabel(\"Match\").bothV()'\n         }\n      ]\n   },\n   {\n      categoryName: \"User\",\n      presets: [\n         {\n            name: \"Get user by name\",\n            query: 'g.V().hasLabel(\"user\").has(\"name\", \"ENTER_NAME\")',\n            carrotPosStart: 36,\n            carrotPosEnd: 46\n         }\n      ]\n   }\n];\n\nexport const queryPresets = getQueryPresets();\n\nfunction getQueryPresets(): PresetQueryItem[] {\n   const result: PresetQueryItem[] = [];\n\n   queryPresetsByCategory.forEach(category => {\n      category.presets.forEach(preset =>\n         result.push({ ...preset, category: category.categoryName })\n      );\n   });\n\n   return result;\n}\n\nexport function getStartingPreset(): PresetQueryItem {\n   return {\n      query: 'g.V().has(\"name\", \"\")',\n      carrotPos: 19\n   };\n}\n\nexport function getCarrotPos(query: string): { start: number; end: number } {\n   if (query == null) {\n      return { start: 0, end: 0 };\n   }\n\n   let preset = queryPresets.find(preset => preset.query === query);\n\n   if (preset == null) {\n      preset = getStartingPreset();\n\n      if (preset == null) {\n         return { start: 0, end: 0 };\n      }\n   }\n\n   if (preset.carrotPos != null) {\n      return { start: preset.carrotPos, end: preset.carrotPos };\n   }\n\n   if (preset.carrotPosStart != null && preset.carrotPosEnd != null) {\n      return { start: preset.carrotPosStart, end: preset.carrotPosEnd };\n   }\n\n   return { start: 0, end: 0 };\n}\n","import { Autocomplete } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const AutocompleteTextField = styled(Autocomplete)`\n   background-color: ${({ theme }) => theme.colors.background2};\n   & .MuiInputBase-input {\n      background-color: ${({ theme }) => theme.colors.background2};\n   }\n`;\n","import { TextField } from \"@mui/material\";\nimport React, { FC, useRef } from \"react\";\nimport { AutocompleteTextField } from \"./styles.QueryInput\";\nimport { getCarrotPos, PresetQueryItem, queryPresets } from \"./tools/presets\";\n\ninterface PropsQueryInput {\n   value: PresetQueryItem;\n   onChange: (newValue: PresetQueryItem) => void;\n   onEnterPress: () => void;\n}\n\nconst QueryInput: FC<PropsQueryInput> = props => {\n   const { value, onChange, onEnterPress } = props;\n   const inputRef = useRef<HTMLInputElement>();\n   const initialized = useRef<boolean>(false);\n\n   const setCarrotPos = (query: string) => {\n      if (inputRef?.current) {\n         setTimeout(() => {\n            const carrotPos = getCarrotPos(query);\n            inputRef.current.focus();\n            inputRef.current.selectionStart = carrotPos.start;\n            inputRef.current.selectionEnd = carrotPos.end;\n         }, 16);\n      }\n   };\n\n   return (\n      <AutocompleteTextField\n         fullWidth\n         freeSolo\n         options={queryPresets}\n         groupBy={(option: any) => option.category}\n         getOptionLabel={(option: any) => option.query}\n         renderOption={(props, option: any) => <li {...props}>{option.name}</li>}\n         clearOnBlur={false}\n         clearOnEscape={false}\n         value={value}\n         onChange={(e, newValue: any) => {\n            setCarrotPos(newValue?.query);\n            onChange(newValue);\n         }}\n         onInputChange={(e, newValue: string) => {\n            if (initialized.current === false) {\n               setCarrotPos(newValue);\n               initialized.current = true;\n            }\n            onChange({ query: newValue });\n         }}\n         renderInput={params => {\n            return (\n               <TextField\n                  {...params}\n                  autoFocus\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color=\"secondary\"\n                  fullWidth\n                  onFocus={e => {\n                     inputRef.current = e.target as HTMLInputElement;\n                  }}\n                  onKeyDown={event => {\n                     if (event.key === \"Enter\") {\n                        onEnterPress();\n                     }\n                  }}\n               />\n            );\n         }}\n      />\n   );\n};\n\nexport default QueryInput;\n","import React, { FC, useState } from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { FormContainer, HeaderContainer, NodeLimitTextField } from \"./styles.Header\";\nimport { OnSearchFunc } from \"../Visualizer\";\nimport { getStartingPreset, PresetQueryItem } from \"./QueryInput/tools/presets\";\nimport QueryInput from \"./QueryInput/QueryInput\";\n\ninterface PropsHeader {\n   defaultSearchInputValue: string | undefined;\n   loading: boolean;\n   onSearch: OnSearchFunc;\n}\n\nconst Header: FC<PropsHeader> = props => {\n   const { loading, defaultSearchInputValue, onSearch } = props;\n   const [nodeLimit, setNodeLimit] = useState<number>(150);\n   const [query, setQuery] = useState<PresetQueryItem>(\n      defaultSearchInputValue ? { query: defaultSearchInputValue } : getStartingPreset()\n   );\n\n   const handleSearch = () => {\n      onSearch({ query: query.query, nodeLimit });\n   };\n\n   return (\n      <HeaderContainer>\n         <FormContainer>\n            <QueryInput value={query} onChange={setQuery} onEnterPress={handleSearch} />\n            <LoadingButton\n               loading={loading}\n               variant=\"contained\"\n               color=\"secondary\"\n               onClick={handleSearch}\n            >\n               Send\n            </LoadingButton>\n            <NodeLimitTextField\n               label=\"LIMIT\"\n               variant=\"outlined\"\n               size=\"small\"\n               color=\"secondary\"\n               type=\"number\"\n               value={nodeLimit}\n               onChange={e => setNodeLimit(Number(e.target.value))}\n            />\n         </FormContainer>\n      </HeaderContainer>\n   );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n   // State for keeping track of whether key is pressed\n   const [keyPressed, setKeyPressed] = useState<boolean>(false);\n\n   // If pressed key is our target key then set to true\n   const downHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n         setKeyPressed(true);\n      }\n   };\n\n   // If released key is our target key then set to false\n   const upHandler = (e: KeyboardEvent) => {\n      if (e.key === targetKey) {\n         setKeyPressed(false);\n      }\n   };\n\n   // Add event listeners\n   useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n         window.removeEventListener(\"keydown\", downHandler);\n         window.removeEventListener(\"keyup\", upHandler);\n      };\n   }, []); // Empty array ensures that effect is only run on mount and unmount\n\n   return keyPressed;\n}\n","import moment from \"moment\";\n\nexport function humanizeSecondsAmount(time: number): string {\n   return moment.duration(time, \"seconds\").locale(\"en\").humanize();\n}\n\nexport function humanizeUnixTimeStamp(time: number): string {\n   return `${humanizeSecondsAmount(moment().unix() - time)} - ${moment\n      .unix(time)\n      .format(\"DD MMM YYYY\")}`;\n}\n","import {\n   Button,\n   Dialog,\n   DialogActions,\n   DialogContent,\n   DialogContentText,\n   DialogTitle\n} from \"@mui/material\";\nimport React, { FC } from \"react\";\n\ninterface PropsConfirmationDialog {\n   open: boolean;\n   onContinueClick: () => void;\n   onClose: () => void;\n   title?: string;\n   text: string;\n   continueButtonText?: string;\n   cancelButtonText?: string;\n}\n\nconst ConfirmationDialog: FC<PropsConfirmationDialog> = props => {\n   const { open, onContinueClick, onClose, title, text, continueButtonText, cancelButtonText } =\n      props;\n\n   const handleContinueClick = () => {\n      onContinueClick();\n      onClose();\n   };\n\n   return (\n      <Dialog\n         open={open}\n         keepMounted\n         onClose={onClose}\n         aria-describedby=\"alert-dialog-slide-description\"\n      >\n         {title && <DialogTitle>{title}</DialogTitle>}\n         <DialogContent>\n            <DialogContentText>{text}</DialogContentText>\n         </DialogContent>\n         <DialogActions>\n            <Button onClick={onClose}>{cancelButtonText ?? \"Cancel\"}</Button>\n            <Button onClick={handleContinueClick}>{continueButtonText ?? \"Continue\"}</Button>\n         </DialogActions>\n      </Dialog>\n   );\n};\n\nexport default ConfirmationDialog;\n","import styled from \"styled-components\";\n\nexport const PropertiesContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n`;\n\nexport const KeyLabel = styled(\"div\")`\n   font-size: 16px;\n   font-weight: 400;\n`;\n\nexport const ValueLabel = styled(\"div\")`\n   font-size: 19px;\n   font-weight: 200;\n   padding-left: 25px;\n`;\n","import Button from \"@mui/material/Button\";\nimport React, { FC, useState } from \"react\";\nimport { humanizeUnixTimeStamp } from \"../../../../../../common-tools/strings/humanizeUnixTime\";\nimport ConfirmationDialog from \"../../../../../common/UI/ConfirmationDialog/ConfirmationDialog\";\nimport { OnSearchFunc } from \"../../../Visualizer\";\nimport { KeyLabel, PropertiesContainer, ValueLabel } from \"./styles.GenericPanel\";\n\nexport interface PropsGenericPropertiesTable {\n   id: string | number;\n   label: string;\n   properties: Record<string, string | number | boolean>;\n   isVertex: boolean | undefined;\n   hideProps?: string[];\n   onSearch: OnSearchFunc;\n}\n\nexport interface QueryButtonProps {\n   name: string;\n   query: string;\n   visualize?: boolean;\n}\n\nconst GenericPanel: FC<PropsGenericPropertiesTable> = props => {\n   const { properties, hideProps, id, isVertex } = props;\n   const [confirmationDialogProps, setConfirmationDialogProps] =\n      useState<{ message: string; onConfirm: () => void }>(null);\n\n   const keys = Object.keys(properties ?? {}).sort();\n\n   const unixTimeProps = [\n      \"lastGroupJoinedDate\",\n      \"birthDate\",\n      \"lastLoginDate\",\n      \"creationDate\",\n      \"mostVotedDate\",\n      \"lastInteractionDate\",\n      \"timestamp\",\n   ];\n\n   const setupValueText = (key: string, value: string | number | boolean) => {\n      if (unixTimeProps.includes(key)) {\n         return humanizeUnixTimeStamp(Number(value));\n      }\n\n      return String(value);\n   };\n\n   const elementSelectionQuery = isVertex\n      ? `g.V(${typeof id === \"string\" ? `\"${id}\"` : id})`\n      : `g.E(${typeof id === \"string\" ? `\"${id}\"` : id})`;\n\n   const dangerousQueryButtons: QueryButtonProps[] = [\n      {\n         name: \"Delete\",\n         query: `${elementSelectionQuery}.drop()`,\n         visualize: false,\n      },\n   ];\n\n   return (\n      <>\n         {keys.map(\n            key =>\n               (!hideProps || !hideProps.includes(key)) && (\n                  <div key={key}>\n                     <KeyLabel>{key}</KeyLabel>\n                     <ValueLabel>{setupValueText(key, properties[key])}</ValueLabel>\n                  </div>\n               ),\n         )}\n         {dangerousQueryButtons.map((buttonData, i) => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => {\n                  setConfirmationDialogProps({\n                     message: \"Delete element?\",\n                     onConfirm: () =>\n                        props.onSearch({ query: buttonData.query, visualize: buttonData.visualize }),\n                  });\n               }}\n               key={i}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         <ConfirmationDialog\n            open={confirmationDialogProps != null}\n            text={confirmationDialogProps?.message}\n            onContinueClick={confirmationDialogProps?.onConfirm}\n            onClose={() => setConfirmationDialogProps(null)}\n            continueButtonText={\"Confirm\"}\n            cancelButtonText={\"Cancel\"}\n         />\n      </>\n   );\n};\n\nexport default GenericPanel;\n","import React, { FC } from \"react\";\nimport { Button } from \"@mui/material\";\nimport GenericPanel, { PropsGenericPropertiesTable, QueryButtonProps } from \"../GenericPanel/GenericPanel\";\nimport { ValueLabel } from \"../GenericPanel/styles.GenericPanel\";\n\nconst EdgePanel: FC<PropsGenericPropertiesTable> = props => {\n   const { properties, label } = props;\n\n   const sameLabelEdges = `g.E().hasLabel(\"${label}\")`;\n\n   const queryButtons: QueryButtonProps[] = [\n      {\n         name: \"All edges like this\",\n         query: `${sameLabelEdges}.bothV()`,\n      },\n   ];\n   const dangerousQueryButtons: QueryButtonProps[] = [];\n\n   return (\n      <>\n         <ValueLabel>{properties.name}</ValueLabel>\n         {queryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         <GenericPanel {...props} hideProps={[\"images\"]} />\n         {dangerousQueryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n      </>\n   );\n};\n\nexport default EdgePanel;\n","import styled from \"styled-components\";\n\nexport const ChatBubbleContainer = styled(\"div\").withConfig({\n   shouldForwardProp: p => ![\"color\"].includes(p)\n})<{ color: string }>`\n   padding: 10px 20px;\n   border-radius: 20px;\n   background: ${({ color }) => color};\n   width: fit-content;\n`;\n\nexport const NameLabel = styled(\"div\")`\n   font-size: 15px;\n   font-weight: 600;\n   margin-bottom: 5px;\n`;\n\nexport const TextLabel = styled(\"div\")`\n   padding-left: 15px;\n`;\n","import React, { FC } from \"react\";\nimport { ChatBubbleContainer, NameLabel, TextLabel } from \"./styles.ChatBubble\";\n\ninterface PropsChatBubble {\n   name: string;\n   text: string;\n   color: string;\n}\n\nconst ChatBubble: FC<PropsChatBubble> = props => {\n   const { color, text, name } = props;\n\n   return (\n      <ChatBubbleContainer color={color}>\n         <NameLabel>{name}</NameLabel>\n         <TextLabel>{text}</TextLabel>\n      </ChatBubbleContainer>\n   );\n};\n\nexport default ChatBubble;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport GenericPanel, { PropsGenericPropertiesTable } from \"../GenericPanel/GenericPanel\";\nimport { ValueLabel } from \"../GenericPanel/styles.GenericPanel\";\nimport { Group, GroupChat } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/groups\";\nimport { useTheme } from \"styled-components\";\nimport ChatBubble from \"./ChatBubble/ChatBubble\";\nimport { visualizerGet } from \"../../../../../../api/server/visualizer\";\nimport { GremlinElement } from \"../../../tools/visualizerUtils\";\nimport { User } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/user\";\n\nconst GroupPanel: FC<PropsGenericPropertiesTable> = props => {\n   const group = props.properties as unknown as Partial<Group>;\n   const theme = useTheme();\n   const chat: GroupChat = JSON.parse((group.chat ?? \"[]\") as unknown as string);\n   const [members, setMembers] = useState<Array<{ userId: string; name: string }>>();\n\n   /**\n    * Effect to get members of the group\n    */\n   useEffect(() => {\n      (async () => {\n         const result: Array<GremlinElement<Partial<User>>> = await visualizerGet({\n            query: `g.V().has(\"group\", \"groupId\", \"${group.groupId}\").both(\"member\")`,\n         });\n\n         setMembers(\n            result?.map(memberVertex => ({\n               userId: memberVertex?.properties?.userId,\n               name: memberVertex?.properties?.name,\n            })) ?? undefined,\n         );\n      })();\n   }, []);\n\n   const groupQuery = `has(\"groupId\", \"${group.groupId}\")`;\n   const queryButtons = [\n      {\n         name: \"Members\",\n         query: `g.V().union(${groupQuery}, ${groupQuery}.both(\"member\"))`,\n      },\n   ];\n\n   const getColorForUser = (userId: string) => {\n      if (members) {\n         const memberIndex = members?.findIndex(m => m.userId === userId);\n         return theme.colors.chatNamesColors[memberIndex] ?? \"black\";\n      } else {\n         return \"black\";\n      }\n   };\n\n   return (\n      <>\n         <ValueLabel>{group.name}</ValueLabel>\n         {queryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         {chat.messages.map(message => (\n            <ChatBubble\n               name={\n                  !members\n                     ? message.authorUserId\n                     : members.find(member => member.userId === message.authorUserId).name ??\n                       message.authorUserId\n               }\n               text={message.messageText}\n               color={getColorForUser(message.authorUserId)}\n            />\n         ))}\n         <GenericPanel {...props} hideProps={[\"chat\"]} />\n      </>\n   );\n};\n\nexport default GroupPanel;\n","import React, { FC } from \"react\";\nimport { Button } from \"@mui/material\";\nimport GenericPanel, { PropsGenericPropertiesTable, QueryButtonProps } from \"../GenericPanel/GenericPanel\";\nimport { ValueLabel } from \"../GenericPanel/styles.GenericPanel\";\nimport { Tag } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/tags\";\n\nconst TagsPanel: FC<PropsGenericPropertiesTable> = props => {\n   const tag = props.properties as unknown as Partial<Tag>;\n\n   const tagQuery = `has(\"tagId\", \"${tag.tagId}\")`;\n   const queryButtons = [\n      {\n         name: \"Subscribers\",\n         query: `g.V().union(${tagQuery}, ${tagQuery}.both(\"subscribed\").hasLabel(\"user\"))`,\n      },\n      {\n         name: \"Blockers\",\n         query: `g.V().union(${tagQuery}, ${tagQuery}.both(\"blocked\").hasLabel(\"user\"))`,\n      },\n   ];\n\n   const dangerousQueryButtons: QueryButtonProps[] = [];\n\n   return (\n      <>\n         <ValueLabel>{tag.name}</ValueLabel>\n         {queryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         <GenericPanel {...props} hideProps={[\"images\"]} />\n         {dangerousQueryButtons.map(buttonData => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n      </>\n   );\n};\n\nexport default TagsPanel;\n","import styled from \"styled-components\";\n\nexport const Row = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n`;\n\nexport const RowCentered = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   justify-content: center;\n   align-items: center;\n`;\n","import styled from \"styled-components\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nexport const CarouselStyled = styled(Carousel)`\n   img {\n      user-select: none;\n   }\n`;\n","import React, { FC, ReactChild, ReactNode, useEffect, useState } from \"react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { CarouselStyled } from \"./styles.ImagesCarousel\";\n\ninterface PropsImagesCarousel {\n   children: ReactChild[] & ReactNode;\n}\n\nconst ImagesCarousel: FC<PropsImagesCarousel> = ({ children }) => {\n   const [selectedItem, setSelectedItem] = useState(0);\n\n   console.log(\"RENDER\");\n   const handleItemClick = (index: number) => {\n      setSelectedItem(index + 1);\n   };\n\n   useEffect(() => {\n      if (selectedItem !== 0) {\n         setSelectedItem(0);\n      }\n   }, [children]);\n\n   return (\n      <CarouselStyled\n         infiniteLoop\n         showThumbs={false}\n         onClickItem={handleItemClick}\n         selectedItem={selectedItem}\n         transitionTime={100}\n      >\n         {children}\n      </CarouselStyled>\n   );\n};\n\nexport default ImagesCarousel;\n","const countryCodes = [\n   { value: \"AF\", label: \"Afghanistan\" },\n   { value: \"AX\", label: \"Aland Islands\" },\n   { value: \"AL\", label: \"Albania\" },\n   { value: \"DZ\", label: \"Algeria\" },\n   { value: \"AS\", label: \"American Samoa\" },\n   { value: \"AD\", label: \"Andorra\" },\n   { value: \"AO\", label: \"Angola\" },\n   { value: \"AI\", label: \"Anguilla\" },\n   { value: \"AQ\", label: \"Antarctica\" },\n   { value: \"AG\", label: \"Antigua and Barbuda\" },\n   { value: \"AR\", label: \"Argentina\" },\n   { value: \"AM\", label: \"Armenia\" },\n   { value: \"AW\", label: \"Aruba\" },\n   { value: \"AU\", label: \"Australia\" },\n   { value: \"AT\", label: \"Austria\" },\n   { value: \"AZ\", label: \"Azerbaijan\" },\n   { value: \"BS\", label: \"Bahamas\" },\n   { value: \"BH\", label: \"Bahrain\" },\n   { value: \"BD\", label: \"Bangladesh\" },\n   { value: \"BB\", label: \"Barbados\" },\n   { value: \"BY\", label: \"Belarus\" },\n   { value: \"BE\", label: \"Belgium\" },\n   { value: \"BZ\", label: \"Belize\" },\n   { value: \"BJ\", label: \"Benin\" },\n   { value: \"BM\", label: \"Bermuda\" },\n   { value: \"BT\", label: \"Bhutan\" },\n   { value: \"BO\", label: \"Bolivia\" },\n   { value: \"BA\", label: \"Bosnia and Herzegovina\" },\n   { value: \"BW\", label: \"Botswana\" },\n   { value: \"BV\", label: \"Bouvet Island\" },\n   { value: \"BR\", label: \"Brazil\" },\n   { value: \"IO\", label: \"British Indian Ocean Territory\" },\n   { value: \"BN\", label: \"Brunei Darussalam\" },\n   { value: \"BG\", label: \"Bulgaria\" },\n   { value: \"BF\", label: \"Burkina Faso\" },\n   { value: \"BI\", label: \"Burundi\" },\n   { value: \"KH\", label: \"Cambodia\" },\n   { value: \"CM\", label: \"Cameroon\" },\n   { value: \"CA\", label: \"Canada\" },\n   { value: \"CV\", label: \"Cape Verde\" },\n   { value: \"KY\", label: \"Cayman Islands\" },\n   { value: \"CF\", label: \"Central African Republic\" },\n   { value: \"TD\", label: \"Chad\" },\n   { value: \"CL\", label: \"Chile\" },\n   { value: \"CN\", label: \"China\" },\n   { value: \"CX\", label: \"Christmas Island\" },\n   { value: \"CC\", label: \"Cocos (Keeling) Islands\" },\n   { value: \"CO\", label: \"Colombia\" },\n   { value: \"KM\", label: \"Comoros\" },\n   { value: \"CG\", label: \"Congo\" },\n   { value: \"CD\", label: \"Congo, The Democratic Republic of the\" },\n   { value: \"CK\", label: \"Cook Islands\" },\n   { value: \"CR\", label: \"Costa Rica\" },\n   { value: \"CI\", label: \"Cote D'Ivoire\" },\n   { value: \"HR\", label: \"Croatia\" },\n   { value: \"CU\", label: \"Cuba\" },\n   { value: \"CY\", label: \"Cyprus\" },\n   { value: \"CZ\", label: \"Czech Republic\" },\n   { value: \"DK\", label: \"Denmark\" },\n   { value: \"DJ\", label: \"Djibouti\" },\n   { value: \"DM\", label: \"Dominica\" },\n   { value: \"DO\", label: \"Dominican Republic\" },\n   { value: \"EC\", label: \"Ecuador\" },\n   { value: \"EG\", label: \"Egypt\" },\n   { value: \"SV\", label: \"El Salvador\" },\n   { value: \"GQ\", label: \"Equatorial Guinea\" },\n   { value: \"ER\", label: \"Eritrea\" },\n   { value: \"EE\", label: \"Estonia\" },\n   { value: \"ET\", label: \"Ethiopia\" },\n   { value: \"FK\", label: \"Falkland Islands (Malvinas)\" },\n   { value: \"FO\", label: \"Faroe Islands\" },\n   { value: \"FJ\", label: \"Fiji\" },\n   { value: \"FI\", label: \"Finland\" },\n   { value: \"FR\", label: \"France\" },\n   { value: \"GF\", label: \"French Guiana\" },\n   { value: \"PF\", label: \"French Polynesia\" },\n   { value: \"TF\", label: \"French Southern Territories\" },\n   { value: \"GA\", label: \"Gabon\" },\n   { value: \"GM\", label: \"Gambia\" },\n   { value: \"GE\", label: \"Georgia\" },\n   { value: \"DE\", label: \"Germany\" },\n   { value: \"GH\", label: \"Ghana\" },\n   { value: \"GI\", label: \"Gibraltar\" },\n   { value: \"GR\", label: \"Greece\" },\n   { value: \"GL\", label: \"Greenland\" },\n   { value: \"GD\", label: \"Grenada\" },\n   { value: \"GP\", label: \"Guadeloupe\" },\n   { value: \"GU\", label: \"Guam\" },\n   { value: \"GT\", label: \"Guatemala\" },\n   { value: \"GG\", label: \"Guernsey\" },\n   { value: \"GN\", label: \"Guinea\" },\n   { value: \"GW\", label: \"Guinea-Bissau\" },\n   { value: \"GY\", label: \"Guyana\" },\n   { value: \"HT\", label: \"Haiti\" },\n   { value: \"HM\", label: \"Heard Island and Mcdonald Islands\" },\n   { value: \"VA\", label: \"Holy See (Vatican City State)\" },\n   { value: \"HN\", label: \"Honduras\" },\n   { value: \"HK\", label: \"Hong Kong\" },\n   { value: \"HU\", label: \"Hungary\" },\n   { value: \"IS\", label: \"Iceland\" },\n   { value: \"IN\", label: \"India\" },\n   { value: \"ID\", label: \"Indonesia\" },\n   { value: \"IR\", label: \"Iran, Islamic Republic Of\" },\n   { value: \"IQ\", label: \"Iraq\" },\n   { value: \"IE\", label: \"Ireland\" },\n   { value: \"IM\", label: \"Isle of Man\" },\n   { value: \"IL\", label: \"Israel\" },\n   { value: \"IT\", label: \"Italy\" },\n   { value: \"JM\", label: \"Jamaica\" },\n   { value: \"JP\", label: \"Japan\" },\n   { value: \"JE\", label: \"Jersey\" },\n   { value: \"JO\", label: \"Jordan\" },\n   { value: \"KZ\", label: \"Kazakhstan\" },\n   { value: \"KE\", label: \"Kenya\" },\n   { value: \"KI\", label: \"Kiribati\" },\n   { value: \"KP\", label: \"Korea, Democratic People's Republic of\" },\n   { value: \"KR\", label: \"Korea, Republic of\" },\n   { value: \"KW\", label: \"Kuwait\" },\n   { value: \"KG\", label: \"Kyrgyzstan\" },\n   { value: \"LA\", label: \"Lao People's Democratic Republic\" },\n   { value: \"LV\", label: \"Latvia\" },\n   { value: \"LB\", label: \"Lebanon\" },\n   { value: \"LS\", label: \"Lesotho\" },\n   { value: \"LR\", label: \"Liberia\" },\n   { value: \"LY\", label: \"Libyan Arab Jamahiriya\" },\n   { value: \"LI\", label: \"Liechtenstein\" },\n   { value: \"LT\", label: \"Lithuania\" },\n   { value: \"LU\", label: \"Luxembourg\" },\n   { value: \"MO\", label: \"Macao\" },\n   { value: \"MK\", label: \"Macedonia, The Former Yugoslav Republic of\" },\n   { value: \"MG\", label: \"Madagascar\" },\n   { value: \"MW\", label: \"Malawi\" },\n   { value: \"MY\", label: \"Malaysia\" },\n   { value: \"MV\", label: \"Maldives\" },\n   { value: \"ML\", label: \"Mali\" },\n   { value: \"MT\", label: \"Malta\" },\n   { value: \"MH\", label: \"Marshall Islands\" },\n   { value: \"MQ\", label: \"Martinique\" },\n   { value: \"MR\", label: \"Mauritania\" },\n   { value: \"MU\", label: \"Mauritius\" },\n   { value: \"YT\", label: \"Mayotte\" },\n   { value: \"MX\", label: \"Mexico\" },\n   { value: \"FM\", label: \"Micronesia, Federated States of\" },\n   { value: \"MD\", label: \"Moldova, Republic of\" },\n   { value: \"MC\", label: \"Monaco\" },\n   { value: \"MN\", label: \"Mongolia\" },\n   { value: \"MS\", label: \"Montserrat\" },\n   { value: \"MA\", label: \"Morocco\" },\n   { value: \"MZ\", label: \"Mozambique\" },\n   { value: \"MM\", label: \"Myanmar\" },\n   { value: \"NA\", label: \"Namibia\" },\n   { value: \"NR\", label: \"Nauru\" },\n   { value: \"NP\", label: \"Nepal\" },\n   { value: \"NL\", label: \"Netherlands\" },\n   { value: \"AN\", label: \"Netherlands Antilles\" },\n   { value: \"NC\", label: \"New Caledonia\" },\n   { value: \"NZ\", label: \"New Zealand\" },\n   { value: \"NI\", label: \"Nicaragua\" },\n   { value: \"NE\", label: \"Niger\" },\n   { value: \"NG\", label: \"Nigeria\" },\n   { value: \"NU\", label: \"Niue\" },\n   { value: \"NF\", label: \"Norfolk Island\" },\n   { value: \"MP\", label: \"Northern Mariana Islands\" },\n   { value: \"NO\", label: \"Norway\" },\n   { value: \"OM\", label: \"Oman\" },\n   { value: \"PK\", label: \"Pakistan\" },\n   { value: \"PW\", label: \"Palau\" },\n   { value: \"PS\", label: \"Palestinian Territory, Occupied\" },\n   { value: \"PA\", label: \"Panama\" },\n   { value: \"PG\", label: \"Papua New Guinea\" },\n   { value: \"PY\", label: \"Paraguay\" },\n   { value: \"PE\", label: \"Peru\" },\n   { value: \"PH\", label: \"Philippines\" },\n   { value: \"PN\", label: \"Pitcairn\" },\n   { value: \"PL\", label: \"Poland\" },\n   { value: \"PT\", label: \"Portugal\" },\n   { value: \"PR\", label: \"Puerto Rico\" },\n   { value: \"QA\", label: \"Qatar\" },\n   { value: \"RE\", label: \"Reunion\" },\n   { value: \"RO\", label: \"Romania\" },\n   { value: \"RU\", label: \"Russian Federation\" },\n   { value: \"RW\", label: \"Rwanda\" },\n   { value: \"SH\", label: \"Saint Helena\" },\n   { value: \"KN\", label: \"Saint Kitts and Nevis\" },\n   { value: \"LC\", label: \"Saint Lucia\" },\n   { value: \"PM\", label: \"Saint Pierre and Miquelon\" },\n   { value: \"VC\", label: \"Saint Vincent and the Grenadines\" },\n   { value: \"WS\", label: \"Samoa\" },\n   { value: \"SM\", label: \"San Marino\" },\n   { value: \"ST\", label: \"Sao Tome and Principe\" },\n   { value: \"SA\", label: \"Saudi Arabia\" },\n   { value: \"SN\", label: \"Senegal\" },\n   { value: \"CS\", label: \"Serbia and Montenegro\" },\n   { value: \"SC\", label: \"Seychelles\" },\n   { value: \"SL\", label: \"Sierra Leone\" },\n   { value: \"SG\", label: \"Singapore\" },\n   { value: \"SK\", label: \"Slovakia\" },\n   { value: \"SI\", label: \"Slovenia\" },\n   { value: \"SB\", label: \"Solomon Islands\" },\n   { value: \"SO\", label: \"Somalia\" },\n   { value: \"ZA\", label: \"South Africa\" },\n   { value: \"GS\", label: \"South Georgia and the South Sandwich Islands\" },\n   { value: \"ES\", label: \"Spain\" },\n   { value: \"LK\", label: \"Sri Lanka\" },\n   { value: \"SD\", label: \"Sudan\" },\n   { value: \"SR\", label: \"Surilabel\" },\n   { value: \"SJ\", label: \"Svalbard and Jan Mayen\" },\n   { value: \"SZ\", label: \"Swaziland\" },\n   { value: \"SE\", label: \"Sweden\" },\n   { value: \"CH\", label: \"Switzerland\" },\n   { value: \"SY\", label: \"Syrian Arab Republic\" },\n   { value: \"TW\", label: \"Taiwan\" },\n   { value: \"TJ\", label: \"Tajikistan\" },\n   { value: \"TZ\", label: \"Tanzania, United Republic of\" },\n   { value: \"TH\", label: \"Thailand\" },\n   { value: \"TL\", label: \"Timor-Leste\" },\n   { value: \"TG\", label: \"Togo\" },\n   { value: \"TK\", label: \"Tokelau\" },\n   { value: \"TO\", label: \"Tonga\" },\n   { value: \"TT\", label: \"Trinidad and Tobago\" },\n   { value: \"TN\", label: \"Tunisia\" },\n   { value: \"TR\", label: \"Turkey\" },\n   { value: \"TM\", label: \"Turkmenistan\" },\n   { value: \"TC\", label: \"Turks and Caicos Islands\" },\n   { value: \"TV\", label: \"Tuvalu\" },\n   { value: \"UG\", label: \"Uganda\" },\n   { value: \"UA\", label: \"Ukraine\" },\n   { value: \"AE\", label: \"United Arab Emirates\" },\n   { value: \"GB\", label: \"United Kingdom\" },\n   { value: \"US\", label: \"United States\" },\n   { value: \"UM\", label: \"United States Minor Outlying Islands\" },\n   { value: \"UY\", label: \"Uruguay\" },\n   { value: \"UZ\", label: \"Uzbekistan\" },\n   { value: \"VU\", label: \"Vanuatu\" },\n   { value: \"VE\", label: \"Venezuela\" },\n   { value: \"VN\", label: \"Vietnam\" },\n   { value: \"VG\", label: \"Virgin Islands, British\" },\n   { value: \"VI\", label: \"Virgin Islands, U.S.\" },\n   { value: \"WF\", label: \"Wallis and Futuna\" },\n   { value: \"EH\", label: \"Western Sahara\" },\n   { value: \"YE\", label: \"Yemen\" },\n   { value: \"ZM\", label: \"Zambia\" },\n   { value: \"ZW\", label: \"Zimbabwe\" },\n];\n\nconst countryCodesHash: Record<string, string> = {};\ncountryCodes.forEach(country => {\n   countryCodesHash[country.value] = country.label;\n});\n\n/**\n * Receives country code and returns country name\n * @param countryCode\n * @returns\n */\nexport function getCountryName(countryCode: string): string {\n   return countryCodesHash[countryCode];\n}\n","import React, { FC } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useServerInfo } from \"../../../../../../api/server/server-info\";\nimport { User } from \"../../../../../../api/tools/shared-tools/endpoints-interfaces/user\";\nimport GenericPanel, { PropsGenericPropertiesTable, QueryButtonProps } from \"../GenericPanel/GenericPanel\";\nimport { ValueLabel } from \"../GenericPanel/styles.GenericPanel\";\nimport { Row } from \"../../../../../common/UI/Row/Row\";\nimport ImagesCarousel from \"../../../../../common/UI/ImagesCarousel/ImagesCarousel\";\nimport { getCountryName } from \"../../../../../../common-tools/strings/humanizeCountryCode\";\n\nconst UserPanel: FC<PropsGenericPropertiesTable> = props => {\n   const user = props.properties as unknown as Partial<User>;\n   const serverInfo = useServerInfo();\n\n   const userQuery = `has(\"userId\", \"${user.userId}\")`;\n   const queryButtons = [\n      {\n         name: \"Genders\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"isGender\", \"likesGender\"))`,\n      },\n      {\n         name: \"Matches\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"Match\"))`,\n      },\n      {\n         name: \"Likes Dislikes\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"Like\", \"Dislike\"))`,\n      },\n      {\n         name: \"Tags\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both(\"subscribed\", \"blocked\").hasLabel(\"tag\"))`,\n      },\n      {\n         name: \"Groups\",\n         query: `g.V().union(${userQuery}, ${userQuery}.both().hasLabel(\"group\"))`,\n      },\n   ];\n\n   const dangerousQueryButtons: QueryButtonProps[] = [];\n\n   return (\n      <>\n         <Row>\n            <ValueLabel>{user.name}</ValueLabel>\n            <ValueLabel>\n               {/*https://flagpedia.net/download/api*/}\n               <img\n                  src={`https://flagcdn.com/20x15/${user.country.toLocaleLowerCase()}.png`}\n                  width=\"20\"\n                  height=\"15\"\n               />{\" \"}\n               {getCountryName(user.country)}\n            </ValueLabel>\n         </Row>\n         {user.profileDescription && <ValueLabel>{user.profileDescription}</ValueLabel>}\n         <ValueLabel>Idea: {user.dateIdea}</ValueLabel>\n         {user.images && serverInfo?.data?.imagesHost && (\n            <ImagesCarousel>\n               {(JSON.parse(user.images as unknown as string) as string[]).map(image => (\n                  <img src={serverInfo?.data?.imagesHost + image} key={image} />\n               ))}\n            </ImagesCarousel>\n         )}\n         {queryButtons.map((buttonData, i) => (\n            <Button\n               variant=\"outlined\"\n               color=\"secondary\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n               key={i}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n         <GenericPanel {...props} hideProps={[\"images\"]} />\n         {dangerousQueryButtons.map((buttonData, i) => (\n            <Button\n               variant=\"outlined\"\n               color=\"error\"\n               onClick={() => props.onSearch({ query: buttonData.query })}\n               key={i}\n            >\n               {buttonData.name}\n            </Button>\n         ))}\n      </>\n   );\n};\n\nexport default UserPanel;\n","import { useQuery, UseQueryOptions } from \"react-query\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport {\n   ServerInfoParams,\n   ServerInfoResponse\n} from \"../tools/shared-tools/endpoints-interfaces/server-info\";\n\n/**\n * This request sends the version of the client to the server and gets information about possible updates\n * needed in the client, service status and other important information.\n */\nexport function useServerInfo<T extends ServerInfoResponse>(props?: {\n   config?: UseQueryOptions<T>;\n}) {\n   return useQuery<T>(\n      \"server-info\",\n      () =>\n         httpRequest<T>({\n            url: \"server-info\",\n            params: {\n               buildVersion: \"0.0.0\",\n               codeVersion: \"0.0.0\"\n            }\n         }),\n      props?.config\n   );\n}\n","import styled from \"styled-components\";\n\nexport const PanelContainer = styled(\"div\")`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   width: 40vw;\n   min-width: 40vw;\n   height: 300;\n   padding: 25px 0;\n   padding-right: 35px;\n`;\n\nexport const PanelCard = styled(\"div\")`\n   position: relative;\n   display: flex;\n   flex-direction: column;\n   overflow-y: auto;\n   width: 100%;\n   height: 100%;\n   background-color: ${({ theme }) => theme.colors.background2};\n   border-radius: 10px;\n   padding: 5px 28px;\n   row-gap: 13px;\n   overflow-wrap: break-word;\n`;\n\nexport const NodeElementTitle = styled(\"div\")`\n   font-size: 35px;\n   font-weight: 200;\n   margin-top: 20px;\n   margin-bottom: 10px;\n`;\n\nexport const NavigationButtonsContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: row;\n   position: absolute;\n   top: 20px;\n   right: 25px;\n   column-gap: 5px;\n`;\n","import { IconButton } from \"@mui/material\";\nimport React, { FC, useEffect, useRef, useState } from \"react\";\nimport { VscChevronLeft, VscChevronRight } from \"react-icons/vsc\";\nimport { useKeyPress } from \"../../../../common-tools/browser/useKeyPress\";\nimport { GremlinElement } from \"../tools/visualizerUtils\";\nimport { OnSearchFunc } from \"../Visualizer\";\nimport EdgePanel from \"./DataSpecificPanels/EdgePanel/EdgePanel\";\nimport GenericPanel, { PropsGenericPropertiesTable } from \"./DataSpecificPanels/GenericPanel/GenericPanel\";\nimport GroupPanel from \"./DataSpecificPanels/GroupPanel/GroupPanel\";\nimport TagsPanel from \"./DataSpecificPanels/TagsPanel/TagsPanel\";\nimport UserPanel from \"./DataSpecificPanels/UserPanel/UserPanel\";\nimport { NavigationButtonsContainer, NodeElementTitle, PanelCard, PanelContainer } from \"./styles.Panel\";\n\ninterface PropsPanel {\n   allNodes: GremlinElement[];\n   allEdges: GremlinElement[];\n   nodeIdSelected: string | number | undefined;\n   edgeIdSelected: string | number | undefined;\n   onSearch: OnSearchFunc;\n   onNextClick: () => void;\n   onPrevClick: () => void;\n}\n\nconst Panel: FC<PropsPanel> = props => {\n   const { allNodes, allEdges, nodeIdSelected, edgeIdSelected, onSearch, onNextClick, onPrevClick } = props;\n   const [elementToShow, setElementToShow] = useState<GremlinElement>();\n   const [elementToShowIsNode, setElementToShowIsNode] = useState<boolean>();\n   const leftKeyPressed = useKeyPress(\"ArrowLeft\");\n   const rightKeyPressed = useKeyPress(\"ArrowRight\");\n   const scrollContainerRef = useRef<HTMLDivElement>(null);\n\n   useEffect(() => {\n      setElementToShow(allNodes.find(node => node.id === nodeIdSelected));\n      setElementToShowIsNode(true);\n   }, [nodeIdSelected]);\n\n   useEffect(() => {\n      setElementToShow(allEdges.find(edge => edge.id === edgeIdSelected));\n      setElementToShowIsNode(false);\n   }, [edgeIdSelected]);\n\n   useEffect(() => {\n      if (leftKeyPressed && elementToShow != null) {\n         onPrevClick();\n      }\n   }, [leftKeyPressed]);\n\n   useEffect(() => {\n      if (rightKeyPressed && elementToShow != null) {\n         onNextClick();\n      }\n   }, [rightKeyPressed]);\n\n   useEffect(() => {\n      scrollContainerRef.current.scrollTo({ top: 0 });\n   }, [elementToShow]);\n\n   let Panel: React.FC<PropsGenericPropertiesTable>;\n   switch (elementToShow?.type ?? \"\") {\n      case \"user\":\n         Panel = UserPanel;\n         break;\n\n      case \"group\":\n         Panel = GroupPanel;\n         break;\n\n      case \"tag\":\n         Panel = TagsPanel;\n         break;\n\n      default:\n         Panel = GenericPanel;\n         break;\n   }\n\n   if (elementToShow?.from != null) {\n      Panel = EdgePanel;\n   }\n\n   return (\n      <PanelContainer>\n         <PanelCard ref={scrollContainerRef}>\n            {elementToShow != null && (\n               <>\n                  <NavigationButtonsContainer>\n                     <IconButton onClick={onPrevClick}>\n                        <VscChevronLeft />\n                     </IconButton>\n                     <IconButton onClick={onNextClick}>\n                        <VscChevronRight />\n                     </IconButton>\n                  </NavigationButtonsContainer>\n                  <NodeElementTitle>{elementToShow.type}</NodeElementTitle>\n                  <Panel\n                     properties={elementToShow.properties}\n                     id={elementToShow.id}\n                     label={elementToShow.label}\n                     onSearch={onSearch}\n                     isVertex={elementToShowIsNode}\n                  />\n               </>\n            )}\n         </PanelCard>\n      </PanelContainer>\n   );\n};\n\nexport default Panel;\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport function setUrlParameter(props: { key: string; value: string }) {\n   const { key, value } = props;\n   var queryParams = new URLSearchParams(window.location.search);\n   queryParams.set(key, value);\n   window.history.pushState(null, null, \"?\" + queryParams.toString());\n}\n\nexport function getUrlParameter(key: string) {\n   var queryParams = new URLSearchParams(window.location.search);\n   return queryParams.get(key);\n}\n\n/**\n * Checks for url parameter value changes and re-renders the component on change.\n */\nexport const useUrlParameterWatcher = (key: string, pollingRate = 150) => {\n   const [value, setValue] = useState<string>(getUrlParameter(key));\n\n   useEffect(() => {\n      const interval = setInterval(() => {\n         const newStorageValue = getUrlParameter(key);\n         if (newStorageValue !== value) {\n            setValue(newStorageValue);\n         }\n      }, pollingRate);\n      return () => clearInterval(interval);\n   });\n\n   return value;\n};\n\nexport default function useUserChangesUrlWatcher(onChange: () => void, passive = false) {\n   const handlePopState = useCallback(() => onChange(), []);\n\n   useEffect(() => {\n      // initiate the event handler\n      window.addEventListener(\"popstate\", handlePopState, passive);\n\n      // this will clean up the event every time the component is re-rendered\n      return function cleanup() {\n         window.removeEventListener(\"popstate\", handlePopState);\n      };\n   });\n}\n","import React, { FC, useEffect, useState } from \"react\";\nimport { DataSet } from \"vis-network/standalone\";\nimport { visualizerGet } from \"../../../api/server/visualizer\";\nimport Graph from \"./Graph/Graph\";\nimport {\n   extractEdgesAndNodes,\n   getDiffEdges,\n   getDiffNodes,\n   GremlinElement,\n   NodeLabelInfo\n} from \"./tools/visualizerUtils\";\nimport { SearchPartContainer, VisualizerContainer } from \"./styles.Visualizer\";\nimport Header from \"./Header/Header\";\nimport Panel from \"./Panel/Panel\";\nimport useUserChangesUrlWatcher, {\n   getUrlParameter,\n   setUrlParameter\n} from \"../../../common-tools/browser/url-tools\";\n\nexport type OnSearchFunc = (props: {\n   query: string;\n   nodeLimit?: number;\n   reset?: boolean;\n   saveOnUrl?: boolean;\n   visualize?: boolean;\n}) => void;\n\nconst Visualizer: FC = () => {\n   const [loading, setLoading] = useState(false);\n   const [allNodes, setAllNodes] = useState<GremlinElement[]>([]);\n   const [allEdges, setAllEdges] = useState<GremlinElement[]>([]);\n   const [nodeLabelsToShow, setNodeLabelsToShow] = useState<NodeLabelInfo[]>([]);\n   const [nodeHolder] = useState(new DataSet([]));\n   const [edgeHolder] = useState(new DataSet([]));\n   const [nodeIdSelected, setNodeIdSelected] = useState<string | number>();\n   const [edgeIdSelected, setEdgeIdSelected] = useState<string | number>();\n   const [selectedElementType, setSelectedElementType] = useState<\"edge\" | \"node\">();\n   const queryFromUrlParams = getUrlParameter(\"visualizer-search\");\n\n   const sendQueryFromUrlParams = () => {\n      if (queryFromUrlParams != null) {\n         handleSendQuery({ query: queryFromUrlParams, saveOnUrl: false });\n      }\n   };\n\n   // Effect to send the query at the url params at mount\n   useEffect(sendQueryFromUrlParams, []);\n\n   // This sends the query from the url params when the user presses back button on the browser\n   useUserChangesUrlWatcher(sendQueryFromUrlParams);\n\n   // Effect to select the first node if nothing is selected after search results arrive\n   useEffect(() => {\n      if (nodeIdSelected == null && edgeIdSelected == null && allNodes?.length > 0) {\n         handleSelectNode(allNodes[0].id);\n      }\n   }, [allNodes]);\n\n   const handleSendQuery: OnSearchFunc = async props => {\n      const { query, nodeLimit = 150, reset = true, saveOnUrl = true, visualize = true } = props;\n\n      setLoading(true);\n\n      const result = await visualizerGet({ query, nodeLimit });\n\n      if (!visualize) {\n         setLoading(false);\n         return;\n      }\n\n      const { nodes, edges, nodeLabels = [] } = extractEdgesAndNodes(result, nodeLabelsToShow);\n\n      // Saving the current query on the url makes possible to go back and open new window without losing state.\n      if (saveOnUrl) {\n         setUrlParameter({ key: \"visualizer-search\", value: query });\n      }\n\n      // Add new nodes\n      if (reset) {\n         setAllNodes([...nodes]);\n         nodeHolder.clear();\n         nodeHolder.add(nodes);\n      } else {\n         const onlyNewNodes = getDiffNodes(nodes, allNodes);\n         setAllNodes([...allNodes, ...onlyNewNodes]);\n         nodeHolder.add(onlyNewNodes);\n      }\n\n      // Add new edges\n      if (reset) {\n         setAllEdges([...edges]);\n         edgeHolder.clear();\n         edgeHolder.add(edges);\n      } else {\n         const onlyNewEdges = getDiffEdges(edges, allEdges);\n         setAllEdges([...allEdges, ...onlyNewEdges]);\n         edgeHolder.add(onlyNewEdges);\n      }\n\n      // Update node labels\n      setNodeLabelsToShow(nodeLabels);\n\n      setLoading(false);\n   };\n\n   const handleSelectNode = (nodeId: string | number | undefined) => {\n      setNodeIdSelected(nodeId);\n      setSelectedElementType(\"node\");\n   };\n   const handleSelectEdge = (edgeId: string | number | undefined) => {\n      setEdgeIdSelected(edgeId);\n      setSelectedElementType(\"edge\");\n   };\n\n   const handleNextClick = () => {\n      if (selectedElementType === \"node\") {\n         const index = allNodes.findIndex(node => node.id === nodeIdSelected);\n         const nextIndex = index === allNodes.length - 1 ? 0 : index + 1;\n         const nextElementId = allNodes[nextIndex].id;\n         handleSelectNode(nextElementId);\n      } else {\n         const index = allEdges.findIndex(edge => edge.id === edgeIdSelected);\n         const nextIndex = index === allEdges.length - 1 ? 0 : index + 1;\n         const nextElementId = allEdges[nextIndex].id;\n         handleSelectEdge(nextElementId);\n      }\n   };\n\n   const handlePrevClick = () => {\n      if (selectedElementType === \"node\") {\n         const index = allNodes.findIndex(node => node.id === nodeIdSelected);\n         const prevIndex = index === 0 ? allNodes.length - 1 : index - 1;\n         const prevElementId = allNodes[prevIndex].id;\n         handleSelectNode(prevElementId);\n      } else {\n         const index = allEdges.findIndex(edge => edge.id === edgeIdSelected);\n         const prevIndex = index === 0 ? allEdges.length - 1 : index - 1;\n         const prevElementId = allEdges[prevIndex].id;\n         handleSelectEdge(prevElementId);\n      }\n   };\n\n   return (\n      <VisualizerContainer>\n         <SearchPartContainer>\n            <Header\n               defaultSearchInputValue={queryFromUrlParams}\n               loading={loading}\n               onSearch={handleSendQuery}\n            />\n            <Graph\n               nodesHolder={nodeHolder}\n               edgesHolder={edgeHolder}\n               nodeIdSelected={nodeIdSelected}\n               edgeIdSelected={edgeIdSelected}\n               onNodeSelect={handleSelectNode}\n               onEdgeSelect={handleSelectEdge}\n            />\n         </SearchPartContainer>\n         <Panel\n            allEdges={allEdges}\n            allNodes={allNodes}\n            nodeIdSelected={nodeIdSelected}\n            edgeIdSelected={edgeIdSelected}\n            onSearch={handleSendQuery}\n            onNextClick={handleNextClick}\n            onPrevClick={handlePrevClick}\n         />\n      </VisualizerContainer>\n   );\n};\n\nexport default Visualizer;\n","import styled from \"styled-components\";\n\nexport const ButtonsContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   max-width: 550px;\n   margin-top: 60px;\n   row-gap: 20px;\n`;\n","import { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { AdminCommandPostParams, LoadCsvPostParams } from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function loadCSVRequest<Params extends Partial<LoadCsvPostParams>>(\n   params: Params,\n): Promise<Response> {\n   const url = \"admin/db/loadcsv\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n\nexport async function uploadAdminFiles<Params extends Partial<{ files: File[] }>>(\n   params: Params,\n): Promise<{ fileNames: string[] }> {\n   const url = \"admin/upload-file\";\n   const credentials = getCredentialsFromStorage();\n\n   const formPayLoad = new FormData();\n   params.files.forEach((file, i) => formPayLoad.append(\"file\" + i, file));\n\n   /**\n    * Notice urlParams are used to send the credentials because when sending a\n    * FormData no other params can be sent, not even as part of FormData. When\n    * sending other parameters the file transfer stops working. So the only way to\n    * send other data is through the url params.\n    */\n   return httpRequest({ url, method: \"POST\", params: formPayLoad, urlParams: credentials });\n}\n\nexport async function executeCommandRequest<\n   Params extends Partial<AdminCommandPostParams>,\n   Response extends string,\n>(params: Params): Promise<Response> {\n   const url = \"admin/command\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n","import styled from \"styled-components\";\n\nexport const ResponseTextContainer = styled(\"div\")``;\n\nexport const JsonTextContainer = styled(\"pre\")``;\n","import { TokenParameter } from \"./common\";\nimport { RequiredUserPropKey, EditableUserProps } from \"../validators/user\";\nimport { TagBasicInfo } from \"./tags\";\nimport { ValueOf } from \"ts-essentials\";\n\n/**\n * If you want to add or remove a \"user editable user prop\" this is the basic todo list:\n *    - Update, add or remove the prop in this interface\n *    - Make sure the database queries are updated when using or should use your prop\n *    - If the prop is editable by the user search editableUserPropsSchema constant and update it.\n *    - Make sure the tests are updated specially the code that generates users with random data.\n *    - If the prop should not be visible to other users or hackers make sure you add it to security-tools.ts\n */\nexport interface User {\n   userId: string;\n   token: string;\n   email: string;\n   isCoupleProfile: boolean;\n   lastLoginDate: number;\n   locationLat: number;\n   locationLon: number;\n   cityName: string;\n   country: string;\n   language: string;\n   name: string;\n   birthDate: number;\n   registrationDate?: number;\n   targetAgeMin: number;\n   targetAgeMax: number;\n   targetDistance: number;\n   images: string[];\n   height?: number;\n   dateIdea: string;\n   profileDescription: string;\n   profileCompleted: boolean;\n   isAdmin?: boolean;\n   sendNewUsersNotification: number;\n   lastGroupJoinedDate: number;\n   imagesAmount?: number;\n   notifications: Notification[];\n   questionsShowed: string[];\n   notificationsToken: string;\n   tagsSubscribed?: TagBasicInfo[];\n   tagsBlocked?: TagBasicInfo[];\n   genders: Gender[];\n   likesGenders: Gender[];\n}\n\nexport type UserPropsValueTypes = ValueOf<User>;\n\n/**\n * The order here in this enum determines the order the genders will appear in some places\n */\nexport enum Gender {\n   Woman = \"Woman\",\n   Man = \"Man\",\n\n   Agender = \"Agender\",\n   Androgynous = \"Androgynous\",\n   Bigender = \"Bigender\",\n   Genderfluid = \"Genderfluid\",\n   Genderqueer = \"Genderqueer\",\n   GenderNonConforming = \"Gender Nonconforming\",\n   Hijra = \"Hijra\",\n   Intersex = \"Intersex\",\n   NonBinary = \"Non binary\",\n   Other = \"Other\",\n   Pangender = \"Pangender\",\n   TransgenderWoman = \"Transgender Woman\",\n   TransgenderMan = \"Transgender Man\",\n}\n\nexport type CisGender = Gender.Woman | Gender.Man;\nexport type NonCisGender = Exclude<Gender, CisGender>;\n\nexport const ALL_GENDERS: readonly Gender[] = Object.values(Gender);\nexport const CIS_GENDERS: readonly Gender[] = [Gender.Woman, Gender.Man];\nexport const TRANS_GENDERS: readonly Gender[] = [Gender.TransgenderWoman, Gender.TransgenderMan];\nexport const NON_CIS_GENDERS: readonly Gender[] = ALL_GENDERS.filter(gender => !CIS_GENDERS.includes(gender));\n\nexport interface ProfileStatusServerResponse {\n   missingEditableUserProps: RequiredUserPropKey[];\n   notShowedTagQuestions: string[];\n   user: Partial<User>;\n}\n\nexport interface UserGetParams extends TokenParameter {\n   userId?: string;\n}\n\nexport interface UserPostParams {\n   token: string;\n   props?: Partial<User>;\n   updateProfileCompletedProp?: boolean;\n}\n\nexport interface FileUploadResponse {\n   fileNameSmall: string;\n   fileNameBig: string;\n}\n\nexport interface SetAttractionParams {\n   token: string;\n   attractions: Attraction[];\n}\n\nexport interface Attraction {\n   userId: string;\n   attractionType: AttractionType;\n}\n\nexport enum AttractionType {\n   Like = \"Like\",\n   Dislike = \"Dislike\",\n}\n\nexport enum MatchType {\n   Like = \"Match\",\n   Dislike = \"SeenMatch\",\n}\n\nexport interface Notification {\n   notificationId: string;\n   idForReplacement?: string;\n   date: number;\n   type: NotificationType;\n   title: string;\n   text: string;\n   targetId?: string;\n}\n\nexport type NotificationContent = Omit<Notification, \"notificationId\" | \"date\">;\n\nexport enum NotificationType {\n   TextOnly,\n   Group,\n   Chat,\n   ContactChat,\n   NearbyPartyOrEvent,\n   CardsGame,\n   About,\n}\n\nexport type UserPropsAsQuestionsTypes = boolean;\n\nexport interface UserPropAsQuestion<T = UserPropsAsQuestionsTypes> {\n   text: string;\n   answers: Array<UserPropAsQuestionAnswer<T>>;\n   multipleAnswersAllowed?: boolean;\n   shortVersion?: string;\n}\n\nexport interface UserPropAsQuestionAnswer<T = UserPropsAsQuestionsTypes> {\n   propName: keyof User;\n   text: string;\n   shortVersion?: string;\n   value: T;\n}\n\nexport const allAttractionTypes: AttractionType[] = Object.values(AttractionType);\nexport const allMatchTypes: MatchType[] = Object.values(MatchType);\n\nexport enum NotificationChannelId {\n   Default = \"default\",\n   ChatMessages = \"chat\",\n   Events = \"events\",\n   NewUsers = \"newUsers\",\n   DateReminders = \"dateReminders\",\n}\n\nexport interface NotificationChannelInfo {\n   id: NotificationChannelId;\n   name: string;\n}\n\nexport interface NotificationData {\n   targetId: string;\n   type: NotificationType;\n   notificationId: string;\n}\n\nexport interface ReportUserPostParams extends TokenParameter {\n   reportedUserId: string;\n   reportType: ReportUserType;\n   notes?: string;\n}\n\nexport enum ReportUserType {\n   NonEthical = \"non-ethical\",\n   MissingPicture = \"missing-picture\",\n}\n","import React, { FC } from \"react\";\nimport { JsonTextContainer, ResponseTextContainer } from \"./styles.ResponseText\";\n\ninterface PropsResponseText {\n   responseText: string;\n}\n\nconst ResponseText: FC<PropsResponseText> = ({ responseText }) => {\n   if (responseText) {\n      return (\n         <ResponseTextContainer>\n            <h3>Response received</h3>\n            <JsonTextContainer dangerouslySetInnerHTML={{ __html: responseText }} />\n         </ResponseTextContainer>\n      );\n   }\n\n   return null;\n};\n\nexport default ResponseText;\n","import styled from \"styled-components\";\nimport { CardContent } from \"@mui/material\";\n\nexport const CardContentStyled = styled(CardContent)`\n   display: flex;\n   flex-direction: column;\n   align-items: flex-start;\n   row-gap: 20px;\n`;\n","import { Card } from \"@mui/material\";\nimport React, { FC } from \"react\";\nimport { CardContentStyled } from \"./CardColumn.styles\";\n\nconst CardColumn: FC = ({ children }) => {\n   return (\n      <Card sx={{ minWidth: 275 }}>\n         <CardContentStyled>{children}</CardContentStyled>\n      </Card>\n   );\n};\n\nexport default CardColumn;\n","import React, { FC, useEffect, useState } from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { useFilePicker } from \"use-file-picker\";\nimport { loadCSVRequest, uploadAdminFiles } from \"../../../../api/server/techOps\";\nimport { tryToGetErrorMessage } from \"../../../../api/tools/tryToGetErrorMessage\";\nimport ResponseText from \"../ResponseText/ResponseText\";\nimport CardColumn from \"../../../common/UI/CardColumn/CardColumn\";\n\nconst ButtonLoadDatabaseBackup: FC = props => {\n   const [loading, setLoading] = useState<boolean>(false);\n   const [response, setResponse] = useState<string>();\n   const [openFileSelector, { plainFiles, errors }] = useFilePicker({\n      accept: [\".csv\"],\n   });\n\n   // Effect that uploads the backup file and loads it into the database when the files are selected\n   useEffect(() => {\n      (async () => {\n         setLoading(true);\n\n         if (plainFiles == null || plainFiles.length === 0) {\n            setLoading(false);\n            return;\n         }\n\n         if (\n            plainFiles.find(file => file.name.toLowerCase().includes(\"edges\")) == null ||\n            plainFiles.find(file => file.name.toLowerCase().includes(\"nodes\")) == null ||\n            plainFiles.length !== 2\n         ) {\n            setResponse(\n               \"Error: You should upload 2 CSV files one containing the word 'nodes' in the name and one containing the word 'edges' in the name\",\n            );\n            setLoading(false);\n            return;\n         }\n\n         try {\n            const filesUploadResponse = await uploadAdminFiles({ files: plainFiles });\n            const nodesFileName = filesUploadResponse.fileNames.find(name =>\n               name.toLowerCase().includes(\"nodes\"),\n            );\n            const edgesFileName = filesUploadResponse.fileNames.find(name =>\n               name.toLowerCase().includes(\"edges\"),\n            );\n            let response = \"\";\n            response += JSON.stringify(await loadCSVRequest({ fileName: nodesFileName }), null, 2);\n            response += JSON.stringify(await loadCSVRequest({ fileName: edgesFileName }), null, 2);\n            setResponse(response);\n         } catch (error) {\n            setResponse(tryToGetErrorMessage(error));\n         }\n\n         setLoading(false);\n      })();\n   }, [plainFiles]);\n\n   useEffect(() => {\n      if (errors != null && errors.length > 0) {\n         setResponse(JSON.stringify(errors, null, 2));\n      }\n   }, [errors]);\n\n   const handleButtonClick = async () => {\n      openFileSelector();\n   };\n\n   return (\n      <CardColumn>\n         <ResponseText responseText={response} />\n         <LoadingButton loading={loading} variant=\"outlined\" onClick={handleButtonClick}>\n            Load database backup\n         </LoadingButton>\n      </CardColumn>\n   );\n};\n\nexport default ButtonLoadDatabaseBackup;\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   padding: 20px;\n   max-width: 1000px;\n`;\n\nexport const ScrollContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   height: 100%;\n   width: 100%;\n   overflow-y: auto;\n`;\n","import React, { FC } from \"react\";\nimport { MainContainer, ScrollContainer } from \"./styles.DashboardPageContainer\";\n\nconst DashboardPageContainer: FC = ({ children }) => {\n   return (\n      <ScrollContainer>\n         <MainContainer>{children}</MainContainer>\n      </ScrollContainer>\n   );\n};\n\nexport default DashboardPageContainer;\n","import LoadingButton from \"@mui/lab/LoadingButton\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport React, { FC, useState } from \"react\";\nimport { executeCommandRequest } from \"../../../../api/server/techOps\";\nimport CardColumn from \"../../../common/UI/CardColumn/CardColumn\";\nimport ResponseText from \"../ResponseText/ResponseText\";\n\nconst RunCommandForm: FC = props => {\n   const [command, setCommand] = useState<string>(\"\");\n   const [response, setResponse] = useState<string>();\n   const [loading, setLoading] = useState<boolean>(false);\n\n   const handleClick = async () => {\n      setLoading(true);\n      setResponse(await executeCommandRequest({ command }));\n      setLoading(false);\n   };\n\n   const commandPresets = [\"java --version\"];\n\n   return (\n      <CardColumn>\n         <ResponseText responseText={response} />\n         <Autocomplete\n            fullWidth\n            freeSolo\n            options={commandPresets}\n            value={command}\n            onInputChange={(event: any, value: string) => {\n               setCommand(value);\n            }}\n            renderInput={params => (\n               <TextField\n                  {...params}\n                  label=\"System command\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onKeyDown={event => {\n                     if (event.key === \"Enter\") {\n                        handleClick();\n                     }\n                  }}\n               />\n            )}\n         />\n         <LoadingButton loading={false} variant=\"outlined\" onClick={handleClick}>\n            Run\n         </LoadingButton>\n      </CardColumn>\n   );\n};\n\nexport default RunCommandForm;\n","import React, { FC, useState } from \"react\";\nimport { ButtonsContainer } from \"./styles.TechOps\";\nimport ButtonLoadDatabaseBackup from \"./ButtonLoadDatabaseBackup/ButtonLoadDatabaseBackup\";\nimport DashboardPageContainer from \"../../common/DashboardPageContainer/DashboardPageContainer\";\nimport RunCommandForm from \"./RunCommandForm/RunCommandForm\";\nimport CardColumn from \"../../common/UI/CardColumn/CardColumn\";\n\nconst TechOps: FC = () => {\n   return (\n      <DashboardPageContainer>\n         <h1>Tech operations</h1>\n         <ButtonsContainer>\n            <ButtonLoadDatabaseBackup />\n            <RunCommandForm />\n         </ButtonsContainer>\n      </DashboardPageContainer>\n   );\n};\n\nexport default TechOps;\n","import { getCredentialsFromStorage } from \"../../common-tools/authentication/authentication\";\nimport { GremlinElement } from \"../../components/pages/Visualizer/tools/visualizerUtils\";\nimport { httpRequest } from \"../tools/httpRequest\";\nimport { AdminNotificationPostParams } from \"../tools/shared-tools/endpoints-interfaces/admin\";\n\nexport async function sendNotificationsPost<\n   Params extends Partial<AdminNotificationPostParams>,\n   Response extends string\n>(params: Params): Promise<Response> {\n   const url = \"admin/send-notifications\";\n   const credentials = getCredentialsFromStorage();\n   return httpRequest({ url, method: \"POST\", params: { ...credentials, ...params } });\n}\n","import styled from \"styled-components\";\n\nexport const FormContainer = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   row-gap: 20px;\n   font-size: 14px;\n   width: 100%;\n`;\n","import { TextField } from \"@mui/material\";\nimport React, { FC, useState } from \"react\";\nimport { FormContainer } from \"../common/containers\";\n\nexport interface PropsEmailSelector {\n   onChange: (emails: string[]) => void;\n}\n\nconst FormEmailSelector: FC<PropsEmailSelector> = props => {\n   const [emailsInput, setEmailsInput] = useState<string>();\n\n   const handleInputChange = (inputValue: string) => {\n      setEmailsInput(inputValue);\n      props.onChange(inputValue.replace(/\\s/g, \"\").split(\",\"));\n   };\n\n   return (\n      <FormContainer>\n         If you want to send the notification to specific users and you have their email, then\n         complete this with comma separated emails. The emails are used to locate the accounts for\n         the notification (not to send an email).\n         <TextField\n            label=\"To specific users\"\n            variant=\"outlined\"\n            multiline\n            fullWidth\n            value={emailsInput}\n            onChange={e => handleInputChange(e.target.value)}\n         />\n      </FormContainer>\n   );\n};\n\nexport default FormEmailSelector;\n","import { Autocomplete, TextField } from \"@mui/material\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport {\n   NotificationContent,\n   NotificationType\n} from \"../../../../api/tools/shared-tools/endpoints-interfaces/user\";\nimport { FormContainer } from \"../common/containers\";\n\nexport interface PropsNotificationContent {\n   onChange: (notificationContent: NotificationContent) => void;\n}\n\nconst FormNotificationContent: FC<PropsNotificationContent> = props => {\n   const [title, setTitle] = useState<string>();\n   const [text, setText] = useState<string>();\n   const [targetId, setTargetId] = useState<string>();\n   const [type, setType] = useState<NotificationType>(NotificationType.TextOnly);\n\n   const notificationTypesAllowed = [\n      NotificationType.NearbyPartyOrEvent,\n      NotificationType.TextOnly\n   ];\n\n   useEffect(() => {\n      props.onChange({ title, text, type, idForReplacement: `${title}${text}${type}` });\n   }, [title, text, type]);\n\n   return (\n      <FormContainer>\n         <TextField\n            label=\"Notification title\"\n            variant=\"outlined\"\n            fullWidth\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n         />\n         <TextField\n            label=\"Notification text\"\n            variant=\"outlined\"\n            fullWidth\n            value={text}\n            onChange={e => setText(e.target.value)}\n         />\n         The notification type affects the icon and what happens when clicked\n         <Autocomplete\n            options={notificationTypesAllowed}\n            value={type}\n            onChange={(event: any, value: NotificationType | null | string) => {\n               if (typeof value === typeof NotificationType.TextOnly) {\n                  setType(Number(value ?? NotificationType.TextOnly));\n               }\n            }}\n            getOptionLabel={(selected: NotificationType) => NotificationType[selected]}\n            renderInput={params => (\n               <TextField {...params} label=\"Notification type\" variant=\"outlined\" />\n            )}\n         />\n         If the notification should open a webpage when clicked paste the link here. This only works\n         for NearbyPartyOrEvent notification type\n         <TextField\n            label=\"Link\"\n            variant=\"outlined\"\n            fullWidth\n            value={targetId}\n            onChange={e => setTargetId(e.target.value)}\n         />\n      </FormContainer>\n   );\n};\n\nexport default FormNotificationContent;\n","import styled from \"styled-components\";\n\nexport const Column = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n`;\n\nexport const ColumnCentered = styled(\"div\")`\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n`;\n","import styled from \"styled-components\";\nimport { ColumnCentered } from \"../../common/UI/Column/Column\";\n\nexport const ContinueButtonContainer = styled(ColumnCentered)`\n   margin-top: 20px;\n   width: 100%;\n`;\n","import LoadingButton from \"@mui/lab/LoadingButton\";\nimport React, { FC, useState } from \"react\";\nimport { sendNotificationsPost } from \"../../../api/server/notifications-send\";\nimport {\n   AdminNotificationFilter,\n   AdminNotificationPostParams,\n} from \"../../../api/tools/shared-tools/endpoints-interfaces/admin\";\nimport {\n   NotificationChannelId,\n   NotificationContent,\n   NotificationType,\n} from \"../../../api/tools/shared-tools/endpoints-interfaces/user\";\nimport { tryToGetErrorMessage } from \"../../../api/tools/tryToGetErrorMessage\";\nimport DashboardPageContainer from \"../../common/DashboardPageContainer/DashboardPageContainer\";\nimport CardColumn from \"../../common/UI/CardColumn/CardColumn\";\nimport ConfirmationDialog from \"../../common/UI/ConfirmationDialog/ConfirmationDialog\";\nimport FormEmailSelector from \"./FormEmailSelector/FormEmailSelector\";\nimport FormNotificationContent from \"./FormNotificationContent/FormNotificationContent\";\nimport { ContinueButtonContainer } from \"./styles.Notifications\";\n\nconst Notifications: FC = () => {\n   const [notificationContent, setNotificationContent] = useState<NotificationContent>();\n   const [emailFilter, setEmailFilter] = useState<string[]>();\n   const [loading, setLoading] = useState<boolean>(false);\n   const [response, setResponse] = useState<string>();\n   const [error, setError] = useState<string>();\n   const [confirmResponse, setConfirmResponse] = useState<string>();\n   const [confirmDialogOpen, setConfirmDialogOpen] = useState<boolean>(false);\n\n   const handleSend = async (onlyReturnUsersAmount: boolean) => {\n      setError(null);\n      setResponse(null);\n\n      const filters: AdminNotificationFilter = {};\n      if (emailFilter != null && emailFilter.length > 0) {\n         filters.usersEmail = emailFilter;\n      }\n\n      const requestParams: Partial<AdminNotificationPostParams> = {\n         onlyReturnUsersAmount,\n         filters,\n         notificationContent,\n         channelId:\n            notificationContent?.type === NotificationType.NearbyPartyOrEvent\n               ? NotificationChannelId.Events\n               : NotificationChannelId.Default,\n      };\n\n      if (\n         requestParams?.notificationContent?.text == null ||\n         requestParams?.notificationContent?.text.length < 2\n      ) {\n         setError(\"You need to set the notification text\");\n         return;\n      }\n\n      if (\n         requestParams?.notificationContent?.title == null ||\n         requestParams?.notificationContent?.title.length < 2\n      ) {\n         setError(\"You need to set the notification title\");\n         return;\n      }\n\n      setLoading(true);\n      try {\n         const response = await sendNotificationsPost(requestParams);\n\n         if (onlyReturnUsersAmount) {\n            setConfirmResponse(response);\n            setConfirmDialogOpen(true);\n         } else {\n            setResponse(response);\n         }\n      } catch (error) {\n         setResponse(tryToGetErrorMessage(response));\n      }\n      setLoading(false);\n   };\n\n   return (\n      <DashboardPageContainer>\n         <h1>Send Notification</h1>\n         <CardColumn>\n            <h3>Notification content</h3>\n            <FormNotificationContent onChange={setNotificationContent} />\n            <h3>Select target users</h3>\n            <FormEmailSelector onChange={setEmailFilter} />\n            {error && (\n               <div>\n                  <h3>Error</h3>\n                  <div>{error}</div>\n               </div>\n            )}\n            {response && (\n               <div>\n                  <h3>Response received</h3>\n                  <div dangerouslySetInnerHTML={{ __html: response }} />\n               </div>\n            )}\n            <ContinueButtonContainer>\n               <LoadingButton\n                  loading={loading}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={() => handleSend(true)}\n               >\n                  Continue\n               </LoadingButton>\n            </ContinueButtonContainer>\n            <ConfirmationDialog\n               open={confirmDialogOpen}\n               text={confirmResponse}\n               onContinueClick={() => handleSend(false)}\n               onClose={() => setConfirmDialogOpen(false)}\n               continueButtonText={\"Send notification!\"}\n               cancelButtonText={\"Cancel\"}\n            />\n         </CardColumn>\n      </DashboardPageContainer>\n   );\n};\n\nexport default Notifications;\n","import React, { FC } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport {\n   VscListSelection,\n   VscClose,\n   VscTypeHierarchySuper,\n   VscSymbolProperty,\n   VscMegaphone\n} from \"react-icons/vsc\";\nimport Drawer from \"../../common/UI/Drawer/Drawer\";\nimport Logs from \"../Logs/Logs\";\nimport RouteRequiresLogin from \"../../common/RouteRequiresLogin/RouteRequiresLogin\";\nimport { logout } from \"../../../common-tools/authentication/authentication\";\nimport { useLoginStatus } from \"../../../common-tools/authentication/useLoginStatus\";\nimport { Login } from \"../Login/Login\";\nimport Visualizer from \"../Visualizer/Visualizer\";\nimport TechOps from \"../TechOps/TechOps\";\nimport Notifications from \"../Notifications/Notifications\";\n\nconst Main: FC = () => {\n   const history = useHistory();\n   const isLogged = useLoginStatus();\n\n   if (!isLogged) {\n      return <Login />;\n   }\n\n   return (\n      <Drawer\n         buttons={[\n            {\n               label: \"Visualizer\",\n               icon: () => <VscTypeHierarchySuper />,\n               onClick: () => history.push(\"/visualizer\")\n            },\n            {\n               label: \"Logs\",\n               icon: () => <VscListSelection />,\n               onClick: () => history.push(\"/logs\")\n            },\n            {\n               label: \"Send Notifications\",\n               icon: () => <VscMegaphone />,\n               onClick: () => history.push(\"/notifications\"),\n               marginBottom: 40\n            },\n            {\n               label: \"Tech Operations\",\n               icon: () => <VscSymbolProperty />,\n               onClick: () => history.push(\"/tech-ops\")\n            },\n            {\n               label: \"Logout\",\n               icon: () => <VscClose />,\n               onClick: () => logout()\n            }\n         ]}\n      >\n         <Switch>\n            <RouteRequiresLogin exact path=\"/\">\n               <Logs />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/visualizer\">\n               <Visualizer />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/logs\">\n               <Logs />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/notifications\">\n               <Notifications />\n            </RouteRequiresLogin>\n            <RouteRequiresLogin path=\"/tech-ops\">\n               <TechOps />\n            </RouteRequiresLogin>\n         </Switch>\n      </Drawer>\n   );\n};\n\nexport default Main;\n","import { QueryClient } from \"react-query\";\n\nexport const queryClient = new QueryClient({\n   defaultOptions: {\n      queries: {\n         staleTime: Infinity,\n         structuralSharing: false,\n         retry: false,\n         refetchOnWindowFocus: false\n      }\n   }\n});\n","import React, { FC } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryClientProvider } from \"react-query\";\nimport { defaultTheme, muiTheme } from \"./common-tools/themes/defaultTheme\";\nimport { GlobalStyles } from \"./common-tools/themes/globalStyles/GlobalStyles\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport Main from \"./components/pages/Main/Main\";\nimport { queryClient } from \"./api/tools/cacheConfig\";\n\nconst App: FC = () => {\n   return (\n      <QueryClientProvider client={queryClient}>\n         <ThemeProvider theme={defaultTheme}>\n            <MuiThemeProvider theme={muiTheme}>\n               <GlobalStyles />\n               <Router basename=\"/dashboard\">\n                  <Main />\n               </Router>\n            </MuiThemeProvider>\n         </ThemeProvider>\n      </QueryClientProvider>\n   );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}